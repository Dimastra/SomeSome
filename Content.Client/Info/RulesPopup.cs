using System;
using System.Runtime.CompilerServices;
using CompiledRobustXaml;
using Content.Client.Parallax;
using Robust.Client.AutoGenerated;
using Robust.Client.UserInterface;
using Robust.Client.UserInterface.Controls;
using Robust.Shared.Localization;
using Robust.Shared.Timing;

namespace Content.Client.Info
{
	// Token: 0x020002C2 RID: 706
	[GenerateTypedNameReferences]
	public sealed class RulesPopup : Control
	{
		// Token: 0x170003C9 RID: 969
		// (get) Token: 0x060011C0 RID: 4544 RVA: 0x000693E0 File Offset: 0x000675E0
		// (set) Token: 0x060011C1 RID: 4545 RVA: 0x000693E8 File Offset: 0x000675E8
		public float Timer
		{
			get
			{
				return this._timer;
			}
			set
			{
				this.WaitLabel.Text = Loc.GetString("ui-rules-wait", new ValueTuple<string, object>[]
				{
					new ValueTuple<string, object>("time", MathF.Floor(value))
				});
				this._timer = value;
			}
		}

		// Token: 0x14000063 RID: 99
		// (add) Token: 0x060011C2 RID: 4546 RVA: 0x00069428 File Offset: 0x00067628
		// (remove) Token: 0x060011C3 RID: 4547 RVA: 0x00069460 File Offset: 0x00067660
		[Nullable(2)]
		[method: NullableContext(2)]
		[Nullable(2)]
		public event Action OnQuitPressed;

		// Token: 0x14000064 RID: 100
		// (add) Token: 0x060011C4 RID: 4548 RVA: 0x00069498 File Offset: 0x00067698
		// (remove) Token: 0x060011C5 RID: 4549 RVA: 0x000694D0 File Offset: 0x000676D0
		[Nullable(2)]
		[method: NullableContext(2)]
		[Nullable(2)]
		public event Action OnAcceptPressed;

		// Token: 0x060011C6 RID: 4550 RVA: 0x00069505 File Offset: 0x00067705
		public RulesPopup()
		{
			RulesPopup.!XamlIlPopulateTrampoline(this);
			this.AcceptButton.OnPressed += this.OnAcceptButtonPressed;
			this.QuitButton.OnPressed += this.OnQuitButtonPressed;
		}

		// Token: 0x060011C7 RID: 4551 RVA: 0x00069541 File Offset: 0x00067741
		[NullableContext(1)]
		private void OnQuitButtonPressed(BaseButton.ButtonEventArgs obj)
		{
			Action onQuitPressed = this.OnQuitPressed;
			if (onQuitPressed == null)
			{
				return;
			}
			onQuitPressed();
		}

		// Token: 0x060011C8 RID: 4552 RVA: 0x00069553 File Offset: 0x00067753
		[NullableContext(1)]
		private void OnAcceptButtonPressed(BaseButton.ButtonEventArgs obj)
		{
			Action onAcceptPressed = this.OnAcceptPressed;
			if (onAcceptPressed == null)
			{
				return;
			}
			onAcceptPressed();
		}

		// Token: 0x060011C9 RID: 4553 RVA: 0x00069568 File Offset: 0x00067768
		protected override void FrameUpdate(FrameEventArgs args)
		{
			base.FrameUpdate(args);
			if (!this.AcceptButton.Disabled)
			{
				return;
			}
			if ((double)this.Timer <= 0.0)
			{
				this.AcceptButton.Disabled = false;
				return;
			}
			if (this.Timer - args.DeltaSeconds < 0f)
			{
				this.Timer = 0f;
				return;
			}
			this.Timer -= args.DeltaSeconds;
		}

		// Token: 0x170003CA RID: 970
		// (get) Token: 0x060011CA RID: 4554 RVA: 0x000695DE File Offset: 0x000677DE
		private Label WaitLabel
		{
			get
			{
				return base.FindControl<Label>("WaitLabel");
			}
		}

		// Token: 0x170003CB RID: 971
		// (get) Token: 0x060011CB RID: 4555 RVA: 0x000695EB File Offset: 0x000677EB
		private Button AcceptButton
		{
			get
			{
				return base.FindControl<Button>("AcceptButton");
			}
		}

		// Token: 0x170003CC RID: 972
		// (get) Token: 0x060011CC RID: 4556 RVA: 0x00004E82 File Offset: 0x00003082
		private Button QuitButton
		{
			get
			{
				return base.FindControl<Button>("QuitButton");
			}
		}

		// Token: 0x060011CD RID: 4557 RVA: 0x000695F8 File Offset: 0x000677F8
		static void xaml(IServiceProvider A_0, Control A_1)
		{
			XamlIlContext.Context<Control> context = new XamlIlContext.Context<Control>(A_0, null, "resm:Content.Client.Info.RulesPopup.xaml?assembly=Content.Client");
			context.RootObject = A_1;
			context.IntermediateRoot = A_1;
			A_1.VerticalExpand = true;
			A_1.HorizontalExpand = true;
			A_1.MouseFilter = 0;
			Control control = new ParallaxControl();
			A_1.XamlChildren.Add(control);
			Control control2 = new Control();
			control2.VerticalExpand = true;
			control2.MaxWidth = 650f;
			PanelContainer panelContainer = new PanelContainer();
			string item = "windowPanel";
			panelContainer.StyleClasses.Add(item);
			control = panelContainer;
			control2.XamlChildren.Add(control);
			ScrollContainer scrollContainer = new ScrollContainer();
			scrollContainer.HScrollEnabled = false;
			BoxContainer boxContainer = new BoxContainer();
			boxContainer.Orientation = 1;
			boxContainer.SeparationOverride = new int?(10);
			control = new RulesControl();
			boxContainer.XamlChildren.Add(control);
			Label label = new Label();
			label.Name = "WaitLabel";
			control = label;
			context.RobustNameScope.Register("WaitLabel", control);
			control = label;
			boxContainer.XamlChildren.Add(control);
			BoxContainer boxContainer2 = new BoxContainer();
			boxContainer2.Orientation = 0;
			Button button = new Button();
			button.Name = "AcceptButton";
			control = button;
			context.RobustNameScope.Register("AcceptButton", control);
			button.Text = (string)new LocExtension("ui-rules-accept").ProvideValue();
			button.Disabled = true;
			control = button;
			boxContainer2.XamlChildren.Add(control);
			Button button2 = new Button();
			button2.Name = "QuitButton";
			control = button2;
			context.RobustNameScope.Register("QuitButton", control);
			button2.Text = (string)new LocExtension("ui-escape-quit").ProvideValue();
			control = button2;
			boxContainer2.XamlChildren.Add(control);
			control = boxContainer2;
			boxContainer.XamlChildren.Add(control);
			control = boxContainer;
			scrollContainer.XamlChildren.Add(control);
			control = scrollContainer;
			control2.XamlChildren.Add(control);
			control = control2;
			A_1.XamlChildren.Add(control);
			if ((control = (A_1 as Control)) != null)
			{
				context.RobustNameScope.Absorb(control.NameScope);
				control.NameScope = context.RobustNameScope;
			}
			context.RobustNameScope.Complete();
		}

		// Token: 0x060011CE RID: 4558 RVA: 0x0006989C File Offset: 0x00067A9C
		private static void !XamlIlPopulateTrampoline(RulesPopup A_0)
		{
			RulesPopup.Populate:Content.Client.Info.RulesPopup.xaml(null, A_0);
		}

		// Token: 0x040008BC RID: 2236
		private float _timer;
	}
}
