using System;
using System.Collections.Generic;
using System.Linq;
using System.Runtime.CompilerServices;
using CompiledRobustXaml;
using Robust.Client.AutoGenerated;
using Robust.Client.GameObjects;
using Robust.Client.Graphics;
using Robust.Client.UserInterface;
using Robust.Client.UserInterface.Controls;
using Robust.Client.UserInterface.CustomControls;
using Robust.Shared.GameObjects;
using Robust.Shared.IoC;
using Robust.Shared.Maths;
using Robust.Shared.Prototypes;

namespace Content.Client.Clothing.UI
{
	// Token: 0x020003B8 RID: 952
	[NullableContext(1)]
	[Nullable(0)]
	[GenerateTypedNameReferences]
	public sealed class ChameleonMenu : DefaultWindow
	{
		// Token: 0x1400008B RID: 139
		// (add) Token: 0x060017A0 RID: 6048 RVA: 0x00087A60 File Offset: 0x00085C60
		// (remove) Token: 0x060017A1 RID: 6049 RVA: 0x00087A98 File Offset: 0x00085C98
		[Nullable(new byte[]
		{
			2,
			1
		})]
		[Nullable(new byte[]
		{
			2,
			1
		})]
		public event Action<string> OnIdSelected;

		// Token: 0x060017A2 RID: 6050 RVA: 0x00087AD0 File Offset: 0x00085CD0
		public ChameleonMenu()
		{
			ChameleonMenu.!XamlIlPopulateTrampoline(this);
			IoCManager.InjectDependencies<ChameleonMenu>(this);
			this._sprite = this._entityManager.System<SpriteSystem>();
			this.Search.OnTextChanged += this.OnSearchEntered;
		}

		// Token: 0x060017A3 RID: 6051 RVA: 0x00087B2E File Offset: 0x00085D2E
		public void UpdateState(IEnumerable<string> possibleIds, [Nullable(2)] string selectedId)
		{
			this._possibleIds = possibleIds;
			this._selectedId = selectedId;
			this.UpdateGrid();
		}

		// Token: 0x060017A4 RID: 6052 RVA: 0x00087B44 File Offset: 0x00085D44
		private void OnSearchEntered(LineEdit.LineEditEventArgs obj)
		{
			this._searchFilter = obj.Text;
			this.UpdateGrid();
		}

		// Token: 0x060017A5 RID: 6053 RVA: 0x00087B58 File Offset: 0x00085D58
		private void UpdateGrid()
		{
			this.ClearGrid();
			ButtonGroup group = new ButtonGroup();
			string value = this._searchFilter.ToLowerInvariant();
			using (IEnumerator<string> enumerator = this._possibleIds.GetEnumerator())
			{
				while (enumerator.MoveNext())
				{
					string id = enumerator.Current;
					EntityPrototype entityPrototype;
					if (this._prototypeManager.TryIndex<EntityPrototype>(id, ref entityPrototype))
					{
						string text = id.ToLowerInvariant();
						string text2 = entityPrototype.Name.ToLowerInvariant();
						if (text.Contains(value) || text2.Contains(this._searchFilter))
						{
							Button button = new Button
							{
								MinSize = new Vector2(48f, 48f),
								HorizontalExpand = true,
								Group = group,
								StyleClasses = 
								{
									"ButtonSquare"
								},
								ToggleMode = true,
								Pressed = (this._selectedId == id),
								ToolTip = entityPrototype.Name
							};
							button.OnPressed += delegate(BaseButton.ButtonEventArgs _)
							{
								Action<string> onIdSelected = this.OnIdSelected;
								if (onIdSelected == null)
								{
									return;
								}
								onIdSelected(id);
							};
							this.Grid.AddChild(button);
							IRsiStateLike prototypeIcon = this._sprite.GetPrototypeIcon(entityPrototype);
							button.AddChild(new TextureRect
							{
								Stretch = 7,
								Texture = prototypeIcon.Default
							});
						}
					}
				}
			}
		}

		// Token: 0x060017A6 RID: 6054 RVA: 0x00087CDC File Offset: 0x00085EDC
		private void ClearGrid()
		{
			this.Grid.RemoveAllChildren();
		}

		// Token: 0x170004DA RID: 1242
		// (get) Token: 0x060017A7 RID: 6055 RVA: 0x0007D5D4 File Offset: 0x0007B7D4
		[Nullable(0)]
		private LineEdit Search
		{
			[NullableContext(0)]
			get
			{
				return base.FindControl<LineEdit>("Search");
			}
		}

		// Token: 0x170004DB RID: 1243
		// (get) Token: 0x060017A8 RID: 6056 RVA: 0x0007D5E1 File Offset: 0x0007B7E1
		[Nullable(0)]
		private GridContainer Grid
		{
			[NullableContext(0)]
			get
			{
				return base.FindControl<GridContainer>("Grid");
			}
		}

		// Token: 0x060017A9 RID: 6057 RVA: 0x00087CEC File Offset: 0x00085EEC
		static void xaml(IServiceProvider A_0, DefaultWindow A_1)
		{
			XamlIlContext.Context<DefaultWindow> context = new XamlIlContext.Context<DefaultWindow>(A_0, null, "resm:Content.Client.Clothing.UI.ChameleonMenu.xaml?assembly=Content.Client");
			context.RootObject = A_1;
			context.IntermediateRoot = A_1;
			A_1.Title = (string)new LocExtension("chameleon-component-ui-window-name").ProvideValue();
			A_1.MinSize = new Vector2(250f, 300f);
			A_1.SetSize = new Vector2(250f, 300f);
			BoxContainer boxContainer = new BoxContainer();
			boxContainer.Orientation = 1;
			LineEdit lineEdit = new LineEdit();
			lineEdit.Name = "Search";
			Control control = lineEdit;
			context.RobustNameScope.Register("Search", control);
			lineEdit.PlaceHolder = (string)new LocExtension("chameleon-component-ui-search-placeholder").ProvideValue();
			control = lineEdit;
			boxContainer.XamlChildren.Add(control);
			ScrollContainer scrollContainer = new ScrollContainer();
			scrollContainer.VerticalExpand = true;
			GridContainer gridContainer = new GridContainer();
			gridContainer.Name = "Grid";
			control = gridContainer;
			context.RobustNameScope.Register("Grid", control);
			gridContainer.Columns = 3;
			gridContainer.Margin = new Thickness(0f, 5f, 0f, 5f);
			control = gridContainer;
			scrollContainer.XamlChildren.Add(control);
			control = scrollContainer;
			boxContainer.XamlChildren.Add(control);
			control = boxContainer;
			A_1.XamlChildren.Add(control);
			if ((control = (A_1 as Control)) != null)
			{
				context.RobustNameScope.Absorb(control.NameScope);
				control.NameScope = context.RobustNameScope;
			}
			context.RobustNameScope.Complete();
		}

		// Token: 0x060017AA RID: 6058 RVA: 0x00087EB4 File Offset: 0x000860B4
		private static void !XamlIlPopulateTrampoline(ChameleonMenu A_0)
		{
			ChameleonMenu.Populate:Content.Client.Clothing.UI.ChameleonMenu.xaml(null, A_0);
		}

		// Token: 0x04000C0D RID: 3085
		[Dependency]
		private readonly IPrototypeManager _prototypeManager;

		// Token: 0x04000C0E RID: 3086
		[Dependency]
		private readonly IEntityManager _entityManager;

		// Token: 0x04000C0F RID: 3087
		private readonly SpriteSystem _sprite;

		// Token: 0x04000C11 RID: 3089
		private IEnumerable<string> _possibleIds = Enumerable.Empty<string>();

		// Token: 0x04000C12 RID: 3090
		[Nullable(2)]
		private string _selectedId;

		// Token: 0x04000C13 RID: 3091
		private string _searchFilter = "";
	}
}
