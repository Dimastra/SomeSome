using System;
using System.Runtime.CompilerServices;
using CompiledRobustXaml;
using Content.Client.Parallax;
using Content.Client.UserInterface.Controls;
using Content.Shared.CCVar;
using Robust.Client.AutoGenerated;
using Robust.Client.UserInterface;
using Robust.Client.UserInterface.Controls;
using Robust.Shared.Configuration;
using Robust.Shared.IoC;
using Robust.Shared.Maths;

namespace Content.Client.White.JoinQueue
{
	// Token: 0x02000024 RID: 36
	[GenerateTypedNameReferences]
	public sealed class QueueGui : Control
	{
		// Token: 0x14000008 RID: 8
		// (add) Token: 0x06000084 RID: 132 RVA: 0x00004D9C File Offset: 0x00002F9C
		// (remove) Token: 0x06000085 RID: 133 RVA: 0x00004DD4 File Offset: 0x00002FD4
		[Nullable(2)]
		[method: NullableContext(2)]
		[Nullable(2)]
		public event Action QuitPressed;

		// Token: 0x06000086 RID: 134 RVA: 0x00004E0C File Offset: 0x0000300C
		public QueueGui()
		{
			QueueGui.!XamlIlPopulateTrampoline(this);
			LayoutContainer.SetAnchorPreset(this, 15, false);
			this.QuitButton.OnPressed += delegate(BaseButton.ButtonEventArgs _)
			{
				Action quitPressed = this.QuitPressed;
				if (quitPressed == null)
				{
					return;
				}
				quitPressed();
			};
			this.PriorityJoinButton.OnPressed += delegate(BaseButton.ButtonEventArgs _)
			{
				string cvar = this._cfg.GetCVar<string>(CCVars.InfoLinksPatreon);
				IoCManager.Resolve<IUriOpener>().OpenUri(cvar);
			};
		}

		// Token: 0x06000087 RID: 135 RVA: 0x00004E5C File Offset: 0x0000305C
		public void UpdateInfo(int total, int position)
		{
			this.QueueTotal.Text = total.ToString();
			this.QueuePosition.Text = position.ToString();
		}

		// Token: 0x17000010 RID: 16
		// (get) Token: 0x06000088 RID: 136 RVA: 0x00004E82 File Offset: 0x00003082
		private Button QuitButton
		{
			get
			{
				return base.FindControl<Button>("QuitButton");
			}
		}

		// Token: 0x17000011 RID: 17
		// (get) Token: 0x06000089 RID: 137 RVA: 0x00004E8F File Offset: 0x0000308F
		private Label QueuePosition
		{
			get
			{
				return base.FindControl<Label>("QueuePosition");
			}
		}

		// Token: 0x17000012 RID: 18
		// (get) Token: 0x0600008A RID: 138 RVA: 0x00004E9C File Offset: 0x0000309C
		private Label QueueTotal
		{
			get
			{
				return base.FindControl<Label>("QueueTotal");
			}
		}

		// Token: 0x17000013 RID: 19
		// (get) Token: 0x0600008B RID: 139 RVA: 0x00004EA9 File Offset: 0x000030A9
		private Button PriorityJoinButton
		{
			get
			{
				return base.FindControl<Button>("PriorityJoinButton");
			}
		}

		// Token: 0x0600008E RID: 142 RVA: 0x00004EF4 File Offset: 0x000030F4
		static void xaml(IServiceProvider A_0, Control A_1)
		{
			XamlIlContext.Context<Control> context = new XamlIlContext.Context<Control>(A_0, null, "resm:Content.Client.White.JoinQueue.QueueGui.xaml?assembly=Content.Client");
			context.RootObject = A_1;
			context.IntermediateRoot = A_1;
			Control control = new ParallaxControl();
			A_1.XamlChildren.Add(control);
			Control control2 = new Control();
			control2.HorizontalAlignment = 2;
			control2.VerticalAlignment = 2;
			PanelContainer panelContainer = new PanelContainer();
			string item = "AngleRect";
			panelContainer.StyleClasses.Add(item);
			control = panelContainer;
			control2.XamlChildren.Add(control);
			BoxContainer boxContainer = new BoxContainer();
			boxContainer.Orientation = 1;
			boxContainer.MinSize = new Vector2(200f, 200f);
			BoxContainer boxContainer2 = new BoxContainer();
			boxContainer2.Orientation = 0;
			Label label = new Label();
			label.Margin = new Thickness(8f, 0f, 0f, 0f);
			label.Text = (string)new LocExtension("queue-title").ProvideValue();
			item = "LabelHeading";
			label.StyleClasses.Add(item);
			label.VAlign = 1;
			control = label;
			boxContainer2.XamlChildren.Add(control);
			Button button = new Button();
			button.Name = "QuitButton";
			control = button;
			context.RobustNameScope.Register("QuitButton", control);
			button.Text = (string)new LocExtension("queue-quit").ProvideValue();
			button.HorizontalAlignment = 3;
			button.HorizontalExpand = true;
			control = button;
			boxContainer2.XamlChildren.Add(control);
			control = boxContainer2;
			boxContainer.XamlChildren.Add(control);
			control = new HighDivider();
			boxContainer.XamlChildren.Add(control);
			BoxContainer boxContainer3 = new BoxContainer();
			boxContainer3.Orientation = 1;
			boxContainer3.VerticalExpand = true;
			boxContainer3.Margin = new Thickness(0f, 20f, 0f, 0f);
			BoxContainer boxContainer4 = new BoxContainer();
			boxContainer4.Orientation = 1;
			BoxContainer boxContainer5 = new BoxContainer();
			boxContainer5.Orientation = 1;
			boxContainer5.VerticalExpand = true;
			control = new Label
			{
				Text = (string)new LocExtension("queue-position").ProvideValue(),
				Align = 1
			};
			boxContainer5.XamlChildren.Add(control);
			Label label2 = new Label();
			label2.Name = "QueuePosition";
			control = label2;
			context.RobustNameScope.Register("QueuePosition", control);
			item = "LabelHeading";
			label2.StyleClasses.Add(item);
			label2.Align = 1;
			control = label2;
			boxContainer5.XamlChildren.Add(control);
			control = boxContainer5;
			boxContainer4.XamlChildren.Add(control);
			BoxContainer boxContainer6 = new BoxContainer();
			boxContainer6.Orientation = 1;
			boxContainer6.VerticalExpand = true;
			boxContainer6.Margin = new Thickness(0f, 10f, 0f, 0f);
			control = new Label
			{
				Text = (string)new LocExtension("queue-total").ProvideValue(),
				Align = 1
			};
			boxContainer6.XamlChildren.Add(control);
			Label label3 = new Label();
			label3.Name = "QueueTotal";
			control = label3;
			context.RobustNameScope.Register("QueueTotal", control);
			item = "LabelHeading";
			label3.StyleClasses.Add(item);
			label3.Align = 1;
			control = label3;
			boxContainer6.XamlChildren.Add(control);
			control = boxContainer6;
			boxContainer4.XamlChildren.Add(control);
			control = boxContainer4;
			boxContainer3.XamlChildren.Add(control);
			control = boxContainer3;
			boxContainer.XamlChildren.Add(control);
			BoxContainer boxContainer7 = new BoxContainer();
			boxContainer7.Orientation = 0;
			boxContainer7.VerticalAlignment = 3;
			boxContainer7.Margin = new Thickness(0f, 20f, 0f, 0f);
			Button button2 = new Button();
			button2.Name = "PriorityJoinButton";
			control = button2;
			context.RobustNameScope.Register("PriorityJoinButton", control);
			button2.Text = (string)new LocExtension("queue-priority-join").ProvideValue();
			button2.HorizontalExpand = true;
			item = "OpenRight";
			button2.StyleClasses.Add(item);
			control = button2;
			boxContainer7.XamlChildren.Add(control);
			control = boxContainer7;
			boxContainer.XamlChildren.Add(control);
			control = boxContainer;
			control2.XamlChildren.Add(control);
			control = control2;
			A_1.XamlChildren.Add(control);
			if ((control = (A_1 as Control)) != null)
			{
				context.RobustNameScope.Absorb(control.NameScope);
				control.NameScope = context.RobustNameScope;
			}
			context.RobustNameScope.Complete();
		}

		// Token: 0x0600008F RID: 143 RVA: 0x00005438 File Offset: 0x00003638
		private static void !XamlIlPopulateTrampoline(QueueGui A_0)
		{
			QueueGui.Populate:Content.Client.White.JoinQueue.QueueGui.xaml(null, A_0);
		}

		// Token: 0x0400004E RID: 78
		[Nullable(1)]
		[Dependency]
		private readonly IConfigurationManager _cfg;
	}
}
