using System;
using System.Runtime.CompilerServices;
using CompiledRobustXaml;
using Content.Client.UserInterface;
using Content.Shared.AME;
using Robust.Client.AutoGenerated;
using Robust.Client.UserInterface;
using Robust.Client.UserInterface.Controls;
using Robust.Client.UserInterface.CustomControls;
using Robust.Shared.GameObjects;
using Robust.Shared.IoC;
using Robust.Shared.Localization;
using Robust.Shared.Maths;

namespace Content.Client.AME.UI
{
	// Token: 0x02000478 RID: 1144
	[GenerateTypedNameReferences]
	public sealed class AMEWindow : DefaultWindow
	{
		// Token: 0x06001C40 RID: 7232 RVA: 0x000A3EA0 File Offset: 0x000A20A0
		[NullableContext(1)]
		public AMEWindow(AMEControllerBoundUserInterface ui)
		{
			AMEWindow.!XamlIlPopulateTrampoline(this);
			IoCManager.InjectDependencies<AMEWindow>(this);
			this.EjectButton.OnPressed += delegate(BaseButton.ButtonEventArgs _)
			{
				ui.ButtonPressed(SharedAMEControllerComponent.UiButton.Eject, -1);
			};
			this.ToggleInjection.OnPressed += delegate(BaseButton.ButtonEventArgs _)
			{
				ui.ButtonPressed(SharedAMEControllerComponent.UiButton.ToggleInjection, -1);
			};
			this.IncreaseFuelButton.OnPressed += delegate(BaseButton.ButtonEventArgs _)
			{
				ui.ButtonPressed(SharedAMEControllerComponent.UiButton.IncreaseFuel, -1);
			};
			this.DecreaseFuelButton.OnPressed += delegate(BaseButton.ButtonEventArgs _)
			{
				ui.ButtonPressed(SharedAMEControllerComponent.UiButton.DecreaseFuel, -1);
			};
		}

		// Token: 0x06001C41 RID: 7233 RVA: 0x000A3F2C File Offset: 0x000A212C
		[NullableContext(1)]
		public void UpdateState(BoundUserInterfaceState state)
		{
			SharedAMEControllerComponent.AMEControllerBoundUserInterfaceState amecontrollerBoundUserInterfaceState = (SharedAMEControllerComponent.AMEControllerBoundUserInterfaceState)state;
			if (base.Contents.Children != null)
			{
				ButtonHelpers.SetButtonDisabledRecursive(base.Contents, !amecontrollerBoundUserInterfaceState.HasPower);
				this.EjectButton.Disabled = false;
			}
			DefaultInterpolatedStringHandler defaultInterpolatedStringHandler;
			if (!amecontrollerBoundUserInterfaceState.HasFuelJar)
			{
				this.EjectButton.Disabled = true;
				this.ToggleInjection.Disabled = true;
				this.FuelAmount.Text = Loc.GetString("ame-window-fuel-not-inserted-text");
			}
			else
			{
				this.EjectButton.Disabled = false;
				this.ToggleInjection.Disabled = false;
				Label fuelAmount = this.FuelAmount;
				defaultInterpolatedStringHandler = new DefaultInterpolatedStringHandler(0, 1);
				defaultInterpolatedStringHandler.AppendFormatted<int>(amecontrollerBoundUserInterfaceState.FuelAmount);
				fuelAmount.Text = defaultInterpolatedStringHandler.ToStringAndClear();
			}
			if (!amecontrollerBoundUserInterfaceState.IsMaster)
			{
				this.ToggleInjection.Disabled = true;
			}
			if (!amecontrollerBoundUserInterfaceState.Injecting)
			{
				this.InjectionStatus.Text = Loc.GetString("ame-window-engine-injection-status-not-injecting-label") + " ";
			}
			else
			{
				this.InjectionStatus.Text = Loc.GetString("ame-window-engine-injection-status-injecting-label") + " ";
			}
			Label coreCount = this.CoreCount;
			defaultInterpolatedStringHandler = new DefaultInterpolatedStringHandler(0, 1);
			defaultInterpolatedStringHandler.AppendFormatted<int>(amecontrollerBoundUserInterfaceState.CoreCount);
			coreCount.Text = defaultInterpolatedStringHandler.ToStringAndClear();
			Label injectionAmount = this.InjectionAmount;
			defaultInterpolatedStringHandler = new DefaultInterpolatedStringHandler(0, 1);
			defaultInterpolatedStringHandler.AppendFormatted<int>(amecontrollerBoundUserInterfaceState.InjectionAmount);
			injectionAmount.Text = defaultInterpolatedStringHandler.ToStringAndClear();
		}

		// Token: 0x170005DE RID: 1502
		// (get) Token: 0x06001C42 RID: 7234 RVA: 0x000A4090 File Offset: 0x000A2290
		private Label InjectionStatus
		{
			get
			{
				return base.FindControl<Label>("InjectionStatus");
			}
		}

		// Token: 0x170005DF RID: 1503
		// (get) Token: 0x06001C43 RID: 7235 RVA: 0x000A409D File Offset: 0x000A229D
		private Button ToggleInjection
		{
			get
			{
				return base.FindControl<Button>("ToggleInjection");
			}
		}

		// Token: 0x170005E0 RID: 1504
		// (get) Token: 0x06001C44 RID: 7236 RVA: 0x000A40AA File Offset: 0x000A22AA
		private Label FuelAmount
		{
			get
			{
				return base.FindControl<Label>("FuelAmount");
			}
		}

		// Token: 0x170005E1 RID: 1505
		// (get) Token: 0x06001C45 RID: 7237 RVA: 0x000523E3 File Offset: 0x000505E3
		private Button EjectButton
		{
			get
			{
				return base.FindControl<Button>("EjectButton");
			}
		}

		// Token: 0x170005E2 RID: 1506
		// (get) Token: 0x06001C46 RID: 7238 RVA: 0x000A40B7 File Offset: 0x000A22B7
		private Label InjectionAmount
		{
			get
			{
				return base.FindControl<Label>("InjectionAmount");
			}
		}

		// Token: 0x170005E3 RID: 1507
		// (get) Token: 0x06001C47 RID: 7239 RVA: 0x000A40C4 File Offset: 0x000A22C4
		private Button IncreaseFuelButton
		{
			get
			{
				return base.FindControl<Button>("IncreaseFuelButton");
			}
		}

		// Token: 0x170005E4 RID: 1508
		// (get) Token: 0x06001C48 RID: 7240 RVA: 0x000A40D1 File Offset: 0x000A22D1
		private Button DecreaseFuelButton
		{
			get
			{
				return base.FindControl<Button>("DecreaseFuelButton");
			}
		}

		// Token: 0x170005E5 RID: 1509
		// (get) Token: 0x06001C49 RID: 7241 RVA: 0x000A40DE File Offset: 0x000A22DE
		private Label CoreCount
		{
			get
			{
				return base.FindControl<Label>("CoreCount");
			}
		}

		// Token: 0x06001C4A RID: 7242 RVA: 0x000A40EC File Offset: 0x000A22EC
		static void xaml(IServiceProvider A_0, DefaultWindow A_1)
		{
			XamlIlContext.Context<DefaultWindow> context = new XamlIlContext.Context<DefaultWindow>(A_0, null, "resm:Content.Client.AME.UI.AMEWindow.xaml?assembly=Content.Client");
			context.RootObject = A_1;
			context.IntermediateRoot = A_1;
			A_1.Title = (string)new LocExtension("ame-window-title").ProvideValue();
			A_1.MinSize = new Vector2(250f, 250f);
			BoxContainer boxContainer = new BoxContainer();
			boxContainer.Orientation = 1;
			BoxContainer boxContainer2 = new BoxContainer();
			boxContainer2.Orientation = 0;
			Control control = new Label
			{
				Text = (string)new LocExtension("ame-window-engine-status-label").ProvideValue()
			};
			boxContainer2.XamlChildren.Add(control);
			control = new Label
			{
				Text = " "
			};
			boxContainer2.XamlChildren.Add(control);
			Label label = new Label();
			label.Name = "InjectionStatus";
			control = label;
			context.RobustNameScope.Register("InjectionStatus", control);
			label.Text = (string)new LocExtension("ame-window-engine-injection-status-not-injecting-label").ProvideValue();
			control = label;
			boxContainer2.XamlChildren.Add(control);
			control = boxContainer2;
			boxContainer.XamlChildren.Add(control);
			BoxContainer boxContainer3 = new BoxContainer();
			boxContainer3.Orientation = 0;
			Button button = new Button();
			button.Name = "ToggleInjection";
			control = button;
			context.RobustNameScope.Register("ToggleInjection", control);
			button.Text = (string)new LocExtension("ame-window-toggle-injection-button").ProvideValue();
			string item = "OpenBoth";
			button.StyleClasses.Add(item);
			button.Disabled = true;
			control = button;
			boxContainer3.XamlChildren.Add(control);
			control = boxContainer3;
			boxContainer.XamlChildren.Add(control);
			BoxContainer boxContainer4 = new BoxContainer();
			boxContainer4.Orientation = 0;
			control = new Label
			{
				Text = (string)new LocExtension("ame-window-fuel-status-label").ProvideValue()
			};
			boxContainer4.XamlChildren.Add(control);
			control = new Label
			{
				Text = " "
			};
			boxContainer4.XamlChildren.Add(control);
			Label label2 = new Label();
			label2.Name = "FuelAmount";
			control = label2;
			context.RobustNameScope.Register("FuelAmount", control);
			label2.Text = (string)new LocExtension("ame-window-fuel-not-inserted-text").ProvideValue();
			control = label2;
			boxContainer4.XamlChildren.Add(control);
			control = boxContainer4;
			boxContainer.XamlChildren.Add(control);
			BoxContainer boxContainer5 = new BoxContainer();
			boxContainer5.Orientation = 0;
			Button button2 = new Button();
			button2.Name = "EjectButton";
			control = button2;
			context.RobustNameScope.Register("EjectButton", control);
			button2.Text = (string)new LocExtension("ame-window-eject-button").ProvideValue();
			item = "OpenBoth";
			button2.StyleClasses.Add(item);
			button2.Disabled = true;
			control = button2;
			boxContainer5.XamlChildren.Add(control);
			control = boxContainer5;
			boxContainer.XamlChildren.Add(control);
			BoxContainer boxContainer6 = new BoxContainer();
			boxContainer6.Orientation = 0;
			control = new Label
			{
				Text = (string)new LocExtension("ame-window-injection-amount-label").ProvideValue()
			};
			boxContainer6.XamlChildren.Add(control);
			control = new Label
			{
				Text = " "
			};
			boxContainer6.XamlChildren.Add(control);
			Label label3 = new Label();
			label3.Name = "InjectionAmount";
			control = label3;
			context.RobustNameScope.Register("InjectionAmount", control);
			label3.Text = "0";
			control = label3;
			boxContainer6.XamlChildren.Add(control);
			control = boxContainer6;
			boxContainer.XamlChildren.Add(control);
			BoxContainer boxContainer7 = new BoxContainer();
			boxContainer7.Orientation = 0;
			Button button3 = new Button();
			button3.Name = "IncreaseFuelButton";
			control = button3;
			context.RobustNameScope.Register("IncreaseFuelButton", control);
			button3.Text = (string)new LocExtension("ame-window-increase-fuel-button").ProvideValue();
			item = "OpenRight";
			button3.StyleClasses.Add(item);
			control = button3;
			boxContainer7.XamlChildren.Add(control);
			Button button4 = new Button();
			button4.Name = "DecreaseFuelButton";
			control = button4;
			context.RobustNameScope.Register("DecreaseFuelButton", control);
			button4.Text = (string)new LocExtension("ame-window-decrease-fuel-button").ProvideValue();
			item = "OpenLeft";
			button4.StyleClasses.Add(item);
			control = button4;
			boxContainer7.XamlChildren.Add(control);
			control = boxContainer7;
			boxContainer.XamlChildren.Add(control);
			BoxContainer boxContainer8 = new BoxContainer();
			boxContainer8.Orientation = 0;
			control = new Label
			{
				Text = (string)new LocExtension("ame-window-core-count-label").ProvideValue()
			};
			boxContainer8.XamlChildren.Add(control);
			control = new Label
			{
				Text = " "
			};
			boxContainer8.XamlChildren.Add(control);
			Label label4 = new Label();
			label4.Name = "CoreCount";
			control = label4;
			context.RobustNameScope.Register("CoreCount", control);
			label4.Text = "0";
			control = label4;
			boxContainer8.XamlChildren.Add(control);
			control = boxContainer8;
			boxContainer.XamlChildren.Add(control);
			control = boxContainer;
			A_1.XamlChildren.Add(control);
			if ((control = (A_1 as Control)) != null)
			{
				context.RobustNameScope.Absorb(control.NameScope);
				control.NameScope = context.RobustNameScope;
			}
			context.RobustNameScope.Complete();
		}

		// Token: 0x06001C4B RID: 7243 RVA: 0x000A4735 File Offset: 0x000A2935
		private static void !XamlIlPopulateTrampoline(AMEWindow A_0)
		{
			AMEWindow.Populate:Content.Client.AME.UI.AMEWindow.xaml(null, A_0);
		}
	}
}
