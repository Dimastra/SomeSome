using System;
using System.Collections.Generic;
using System.Linq;
using System.Runtime.CompilerServices;
using CompiledRobustXaml;
using Content.Shared.White.TTS;
using Robust.Client.AutoGenerated;
using Robust.Client.UserInterface;
using Robust.Client.UserInterface.Controls;
using Robust.Client.UserInterface.CustomControls;
using Robust.Shared.IoC;
using Robust.Shared.Localization;
using Robust.Shared.Maths;
using Robust.Shared.Prototypes;

namespace Content.Client.VoiceMask
{
	// Token: 0x02000050 RID: 80
	[GenerateTypedNameReferences]
	public sealed class VoiceMaskNameChangeWindow : DefaultWindow
	{
		// Token: 0x06000170 RID: 368 RVA: 0x0000BA08 File Offset: 0x00009C08
		public VoiceMaskNameChangeWindow()
		{
			VoiceMaskNameChangeWindow.!XamlIlPopulateTrampoline(this);
			this.NameSelectorSet.OnPressed += delegate(BaseButton.ButtonEventArgs _)
			{
				this.OnNameChange(this.NameSelector.Text);
			};
			this.VoiceSelector.OnItemSelected += delegate(OptionButton.ItemSelectedEventArgs args)
			{
				this.VoiceSelector.SelectId(args.Id);
				if (this.VoiceSelector.SelectedMetadata != null)
				{
					this.OnVoiceChange((string)this.VoiceSelector.SelectedMetadata);
				}
			};
			this._voices = (from o in IoCManager.Resolve<IPrototypeManager>().EnumeratePrototypes<TTSVoicePrototype>()
			where o.RoundStart
			select o).ToList<TTSVoicePrototype>();
			for (int i = 0; i < this._voices.Count; i++)
			{
				string @string = Loc.GetString(this._voices[i].Name);
				this.VoiceSelector.AddItem(@string, null);
				this.VoiceSelector.SetItemMetadata(i, this._voices[i].ID);
			}
		}

		// Token: 0x06000171 RID: 369 RVA: 0x0000BAE8 File Offset: 0x00009CE8
		[NullableContext(1)]
		public void UpdateState(string name, string voice)
		{
			this.NameSelector.Text = name;
			int num = this._voices.FindIndex((TTSVoicePrototype v) => v.ID == voice);
			if (num != -1)
			{
				this.VoiceSelector.Select(num);
			}
		}

		// Token: 0x17000032 RID: 50
		// (get) Token: 0x06000172 RID: 370 RVA: 0x0000BB36 File Offset: 0x00009D36
		private LineEdit NameSelector
		{
			get
			{
				return base.FindControl<LineEdit>("NameSelector");
			}
		}

		// Token: 0x17000033 RID: 51
		// (get) Token: 0x06000173 RID: 371 RVA: 0x0000BB43 File Offset: 0x00009D43
		private Button NameSelectorSet
		{
			get
			{
				return base.FindControl<Button>("NameSelectorSet");
			}
		}

		// Token: 0x17000034 RID: 52
		// (get) Token: 0x06000174 RID: 372 RVA: 0x0000BB50 File Offset: 0x00009D50
		private OptionButton VoiceSelector
		{
			get
			{
				return base.FindControl<OptionButton>("VoiceSelector");
			}
		}

		// Token: 0x06000177 RID: 375 RVA: 0x0000BBB0 File Offset: 0x00009DB0
		static void xaml(IServiceProvider A_0, DefaultWindow A_1)
		{
			XamlIlContext.Context<DefaultWindow> context = new XamlIlContext.Context<DefaultWindow>(A_0, null, "resm:Content.Client.VoiceMask.VoiceMaskNameChangeWindow.xaml?assembly=Content.Client");
			context.RootObject = A_1;
			context.IntermediateRoot = A_1;
			A_1.Title = (string)new LocExtension("voice-mask-name-change-window").ProvideValue();
			A_1.MinSize = new Vector2(5f, 20f);
			BoxContainer boxContainer = new BoxContainer();
			boxContainer.Orientation = 1;
			Control control = new Label
			{
				Text = (string)new LocExtension("voice-mask-name-change-info").ProvideValue()
			};
			boxContainer.XamlChildren.Add(control);
			BoxContainer boxContainer2 = new BoxContainer();
			boxContainer2.Orientation = 0;
			LineEdit lineEdit = new LineEdit();
			lineEdit.Name = "NameSelector";
			control = lineEdit;
			context.RobustNameScope.Register("NameSelector", control);
			lineEdit.HorizontalExpand = true;
			control = lineEdit;
			boxContainer2.XamlChildren.Add(control);
			Button button = new Button();
			button.Name = "NameSelectorSet";
			control = button;
			context.RobustNameScope.Register("NameSelectorSet", control);
			button.Text = (string)new LocExtension("voice-mask-name-change-set").ProvideValue();
			control = button;
			boxContainer2.XamlChildren.Add(control);
			control = boxContainer2;
			boxContainer.XamlChildren.Add(control);
			control = new Label
			{
				Text = (string)new LocExtension("voice-mask-voice-change-info").ProvideValue()
			};
			boxContainer.XamlChildren.Add(control);
			BoxContainer boxContainer3 = new BoxContainer();
			boxContainer3.Orientation = 0;
			OptionButton optionButton = new OptionButton();
			optionButton.Name = "VoiceSelector";
			control = optionButton;
			context.RobustNameScope.Register("VoiceSelector", control);
			optionButton.HorizontalExpand = true;
			control = optionButton;
			boxContainer3.XamlChildren.Add(control);
			control = boxContainer3;
			boxContainer.XamlChildren.Add(control);
			control = boxContainer;
			A_1.XamlChildren.Add(control);
			if ((control = (A_1 as Control)) != null)
			{
				context.RobustNameScope.Absorb(control.NameScope);
				control.NameScope = context.RobustNameScope;
			}
			context.RobustNameScope.Complete();
		}

		// Token: 0x06000178 RID: 376 RVA: 0x0000BE19 File Offset: 0x0000A019
		private static void !XamlIlPopulateTrampoline(VoiceMaskNameChangeWindow A_0)
		{
			VoiceMaskNameChangeWindow.Populate:Content.Client.VoiceMask.VoiceMaskNameChangeWindow.xaml(null, A_0);
		}

		// Token: 0x040000F6 RID: 246
		[Nullable(1)]
		private readonly List<TTSVoicePrototype> _voices;

		// Token: 0x040000F7 RID: 247
		[Nullable(new byte[]
		{
			2,
			1
		})]
		public Action<string> OnNameChange;

		// Token: 0x040000F8 RID: 248
		[Nullable(new byte[]
		{
			2,
			1
		})]
		public Action<string> OnVoiceChange;
	}
}
