using System;
using System.Runtime.CompilerServices;
using CompiledRobustXaml;
using Content.Client.Computer;
using Content.Client.UserInterface.Controls;
using Content.Shared.Shuttles.BUIStates;
using Content.Shared.Shuttles.Components;
using Robust.Client.AutoGenerated;
using Robust.Client.UserInterface;
using Robust.Client.UserInterface.Controls;
using Robust.Shared.Maths;

namespace Content.Client.Shuttles.UI
{
	// Token: 0x0200014C RID: 332
	[GenerateTypedNameReferences]
	public sealed class IFFConsoleWindow : FancyWindow, IComputerWindow<IFFConsoleBoundUserInterfaceState>
	{
		// Token: 0x1400003F RID: 63
		// (add) Token: 0x0600089E RID: 2206 RVA: 0x000326E4 File Offset: 0x000308E4
		// (remove) Token: 0x0600089F RID: 2207 RVA: 0x0003271C File Offset: 0x0003091C
		[Nullable(2)]
		[method: NullableContext(2)]
		[Nullable(2)]
		public event Action<bool> ShowIFF;

		// Token: 0x14000040 RID: 64
		// (add) Token: 0x060008A0 RID: 2208 RVA: 0x00032754 File Offset: 0x00030954
		// (remove) Token: 0x060008A1 RID: 2209 RVA: 0x0003278C File Offset: 0x0003098C
		[Nullable(2)]
		[method: NullableContext(2)]
		[Nullable(2)]
		public event Action<bool> ShowVessel;

		// Token: 0x060008A2 RID: 2210 RVA: 0x000327C4 File Offset: 0x000309C4
		public IFFConsoleWindow()
		{
			IFFConsoleWindow.!XamlIlPopulateTrampoline(this);
			this.ShowIFFOffButton.Group = this._showIFFButtonGroup;
			this.ShowIFFOnButton.Group = this._showIFFButtonGroup;
			this.ShowIFFOnButton.OnPressed += delegate(BaseButton.ButtonEventArgs args)
			{
				this.ShowIFFPressed(true);
			};
			this.ShowIFFOffButton.OnPressed += delegate(BaseButton.ButtonEventArgs args)
			{
				this.ShowIFFPressed(false);
			};
			this.ShowVesselOffButton.Group = this._showVesselButtonGroup;
			this.ShowVesselOnButton.Group = this._showVesselButtonGroup;
			this.ShowVesselOnButton.OnPressed += delegate(BaseButton.ButtonEventArgs args)
			{
				this.ShowVesselPressed(true);
			};
			this.ShowVesselOffButton.OnPressed += delegate(BaseButton.ButtonEventArgs args)
			{
				this.ShowVesselPressed(false);
			};
		}

		// Token: 0x060008A3 RID: 2211 RVA: 0x00032893 File Offset: 0x00030A93
		private void ShowIFFPressed(bool pressed)
		{
			Action<bool> showIFF = this.ShowIFF;
			if (showIFF == null)
			{
				return;
			}
			showIFF(pressed);
		}

		// Token: 0x060008A4 RID: 2212 RVA: 0x000328A6 File Offset: 0x00030AA6
		private void ShowVesselPressed(bool pressed)
		{
			Action<bool> showVessel = this.ShowVessel;
			if (showVessel == null)
			{
				return;
			}
			showVessel(pressed);
		}

		// Token: 0x060008A5 RID: 2213 RVA: 0x000328BC File Offset: 0x00030ABC
		[NullableContext(1)]
		public void UpdateState(IFFConsoleBoundUserInterfaceState state)
		{
			if ((state.AllowedFlags & IFFFlags.HideLabel) != IFFFlags.None)
			{
				this.ShowIFFOffButton.Disabled = false;
				this.ShowIFFOnButton.Disabled = false;
				if ((state.Flags & IFFFlags.HideLabel) != IFFFlags.None)
				{
					this.ShowIFFOffButton.Pressed = true;
				}
				else
				{
					this.ShowIFFOnButton.Pressed = true;
				}
			}
			else
			{
				this.ShowIFFOffButton.Disabled = true;
				this.ShowIFFOnButton.Disabled = true;
			}
			if ((state.AllowedFlags & IFFFlags.Hide) == IFFFlags.None)
			{
				this.ShowVesselOffButton.Disabled = true;
				this.ShowVesselOnButton.Disabled = true;
				return;
			}
			this.ShowVesselOffButton.Disabled = false;
			this.ShowVesselOnButton.Disabled = false;
			if ((state.Flags & IFFFlags.Hide) != IFFFlags.None)
			{
				this.ShowVesselOffButton.Pressed = true;
				return;
			}
			this.ShowVesselOnButton.Pressed = true;
		}

		// Token: 0x17000187 RID: 391
		// (get) Token: 0x060008A6 RID: 2214 RVA: 0x00032987 File Offset: 0x00030B87
		private Label ShowIFFLabel
		{
			get
			{
				return base.FindControl<Label>("ShowIFFLabel");
			}
		}

		// Token: 0x17000188 RID: 392
		// (get) Token: 0x060008A7 RID: 2215 RVA: 0x00032994 File Offset: 0x00030B94
		private Button ShowIFFOnButton
		{
			get
			{
				return base.FindControl<Button>("ShowIFFOnButton");
			}
		}

		// Token: 0x17000189 RID: 393
		// (get) Token: 0x060008A8 RID: 2216 RVA: 0x000329A1 File Offset: 0x00030BA1
		private Button ShowIFFOffButton
		{
			get
			{
				return base.FindControl<Button>("ShowIFFOffButton");
			}
		}

		// Token: 0x1700018A RID: 394
		// (get) Token: 0x060008A9 RID: 2217 RVA: 0x000329AE File Offset: 0x00030BAE
		private Label ShowVesselLabel
		{
			get
			{
				return base.FindControl<Label>("ShowVesselLabel");
			}
		}

		// Token: 0x1700018B RID: 395
		// (get) Token: 0x060008AA RID: 2218 RVA: 0x000329BB File Offset: 0x00030BBB
		private Button ShowVesselOnButton
		{
			get
			{
				return base.FindControl<Button>("ShowVesselOnButton");
			}
		}

		// Token: 0x1700018C RID: 396
		// (get) Token: 0x060008AB RID: 2219 RVA: 0x000329C8 File Offset: 0x00030BC8
		private Button ShowVesselOffButton
		{
			get
			{
				return base.FindControl<Button>("ShowVesselOffButton");
			}
		}

		// Token: 0x060008B0 RID: 2224 RVA: 0x000329FC File Offset: 0x00030BFC
		static void xaml(IServiceProvider A_0, FancyWindow A_1)
		{
			XamlIlContext.Context<FancyWindow> context = new XamlIlContext.Context<FancyWindow>(A_0, null, "resm:Content.Client.Shuttles.UI.IFFConsoleWindow.xaml?assembly=Content.Client");
			context.RootObject = A_1;
			context.IntermediateRoot = A_1;
			A_1.Title = (string)new LocExtension("iff-console-window-title").ProvideValue();
			A_1.MinSize = new Vector2(200f, 200f);
			BoxContainer boxContainer = new BoxContainer();
			boxContainer.Orientation = 1;
			boxContainer.HorizontalExpand = true;
			GridContainer gridContainer = new GridContainer();
			gridContainer.Margin = new Thickness(4f, 0f, 0f, 0f);
			gridContainer.Columns = 2;
			Label label = new Label();
			label.Name = "ShowIFFLabel";
			Control control = label;
			context.RobustNameScope.Register("ShowIFFLabel", control);
			label.Text = (string)new LocExtension("iff-console-show-iff-label").ProvideValue();
			label.HorizontalExpand = true;
			string item = "StatusFieldTitle";
			label.StyleClasses.Add(item);
			control = label;
			gridContainer.XamlChildren.Add(control);
			BoxContainer boxContainer2 = new BoxContainer();
			boxContainer2.Orientation = 0;
			boxContainer2.MinWidth = 120f;
			Button button = new Button();
			button.Name = "ShowIFFOnButton";
			control = button;
			context.RobustNameScope.Register("ShowIFFOnButton", control);
			button.Text = (string)new LocExtension("iff-console-on").ProvideValue();
			item = "OpenRight";
			button.StyleClasses.Add(item);
			control = button;
			boxContainer2.XamlChildren.Add(control);
			Button button2 = new Button();
			button2.Name = "ShowIFFOffButton";
			control = button2;
			context.RobustNameScope.Register("ShowIFFOffButton", control);
			button2.Text = (string)new LocExtension("iff-console-off").ProvideValue();
			item = "OpenLeft";
			button2.StyleClasses.Add(item);
			control = button2;
			boxContainer2.XamlChildren.Add(control);
			control = boxContainer2;
			gridContainer.XamlChildren.Add(control);
			Label label2 = new Label();
			label2.Name = "ShowVesselLabel";
			control = label2;
			context.RobustNameScope.Register("ShowVesselLabel", control);
			label2.Text = (string)new LocExtension("iff-console-show-vessel-label").ProvideValue();
			label2.HorizontalExpand = true;
			item = "StatusFieldTitle";
			label2.StyleClasses.Add(item);
			control = label2;
			gridContainer.XamlChildren.Add(control);
			BoxContainer boxContainer3 = new BoxContainer();
			boxContainer3.Orientation = 0;
			boxContainer3.MinWidth = 120f;
			Button button3 = new Button();
			button3.Name = "ShowVesselOnButton";
			control = button3;
			context.RobustNameScope.Register("ShowVesselOnButton", control);
			button3.Text = (string)new LocExtension("iff-console-on").ProvideValue();
			item = "OpenRight";
			button3.StyleClasses.Add(item);
			control = button3;
			boxContainer3.XamlChildren.Add(control);
			Button button4 = new Button();
			button4.Name = "ShowVesselOffButton";
			control = button4;
			context.RobustNameScope.Register("ShowVesselOffButton", control);
			button4.Text = (string)new LocExtension("iff-console-off").ProvideValue();
			item = "OpenLeft";
			button4.StyleClasses.Add(item);
			control = button4;
			boxContainer3.XamlChildren.Add(control);
			control = boxContainer3;
			gridContainer.XamlChildren.Add(control);
			control = gridContainer;
			boxContainer.XamlChildren.Add(control);
			control = boxContainer;
			A_1.XamlChildren.Add(control);
			if ((control = (A_1 as Control)) != null)
			{
				context.RobustNameScope.Absorb(control.NameScope);
				control.NameScope = context.RobustNameScope;
			}
			context.RobustNameScope.Complete();
		}

		// Token: 0x060008B1 RID: 2225 RVA: 0x00032E39 File Offset: 0x00031039
		private static void !XamlIlPopulateTrampoline(IFFConsoleWindow A_0)
		{
			IFFConsoleWindow.Populate:Content.Client.Shuttles.UI.IFFConsoleWindow.xaml(null, A_0);
		}

		// Token: 0x04000463 RID: 1123
		[Nullable(1)]
		private readonly ButtonGroup _showIFFButtonGroup = new ButtonGroup();

		// Token: 0x04000464 RID: 1124
		[Nullable(1)]
		private readonly ButtonGroup _showVesselButtonGroup = new ButtonGroup();
	}
}
