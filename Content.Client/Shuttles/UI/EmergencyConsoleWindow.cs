using System;
using System.Runtime.CompilerServices;
using CompiledRobustXaml;
using Content.Client.Computer;
using Content.Client.UserInterface.Controls;
using Content.Shared.Shuttles.BUIStates;
using Content.Shared.Shuttles.Events;
using Robust.Client.AutoGenerated;
using Robust.Client.Graphics;
using Robust.Client.UserInterface;
using Robust.Client.UserInterface.Controls;
using Robust.Shared.IoC;
using Robust.Shared.Localization;
using Robust.Shared.Maths;
using Robust.Shared.Timing;

namespace Content.Client.Shuttles.UI
{
	// Token: 0x0200014A RID: 330
	[GenerateTypedNameReferences]
	public sealed class EmergencyConsoleWindow : FancyWindow, IComputerWindow<EmergencyConsoleBoundUserInterfaceState>
	{
		// Token: 0x06000886 RID: 2182 RVA: 0x00031EB5 File Offset: 0x000300B5
		public EmergencyConsoleWindow()
		{
			this._timing = IoCManager.Resolve<IGameTiming>();
			EmergencyConsoleWindow.!XamlIlPopulateTrampoline(this);
		}

		// Token: 0x06000887 RID: 2183 RVA: 0x00031ED0 File Offset: 0x000300D0
		[NullableContext(1)]
		public void SetupComputerWindow(ComputerBoundUserInterfaceBase cb)
		{
			this.RepealAllButton.OnPressed += delegate(BaseButton.ButtonEventArgs args)
			{
				this.OnRepealAllPressed(cb, args);
			};
			this.AuthorizeButton.OnPressed += delegate(BaseButton.ButtonEventArgs args)
			{
				this.OnAuthorizePressed(cb, args);
			};
			this.RepealButton.OnPressed += delegate(BaseButton.ButtonEventArgs args)
			{
				this.OnRepealPressed(cb, args);
			};
		}

		// Token: 0x06000888 RID: 2184 RVA: 0x00031F36 File Offset: 0x00030136
		[NullableContext(1)]
		private void OnRepealAllPressed(ComputerBoundUserInterfaceBase cb, BaseButton.ButtonEventArgs obj)
		{
			cb.SendMessage(new EmergencyShuttleRepealAllMessage());
		}

		// Token: 0x06000889 RID: 2185 RVA: 0x00031F43 File Offset: 0x00030143
		[NullableContext(1)]
		private void OnRepealPressed(ComputerBoundUserInterfaceBase cb, BaseButton.ButtonEventArgs obj)
		{
			cb.SendMessage(new EmergencyShuttleRepealMessage());
		}

		// Token: 0x0600088A RID: 2186 RVA: 0x00031F50 File Offset: 0x00030150
		[NullableContext(1)]
		private void OnAuthorizePressed(ComputerBoundUserInterfaceBase cb, BaseButton.ButtonEventArgs obj)
		{
			cb.SendMessage(new EmergencyShuttleAuthorizeMessage());
		}

		// Token: 0x0600088B RID: 2187 RVA: 0x00031F60 File Offset: 0x00030160
		[NullableContext(1)]
		public void UpdateState(EmergencyConsoleBoundUserInterfaceState scc)
		{
			this._earlyLaunchTime = scc.EarlyLaunchTime;
			this.AuthorizationsContainer.DisposeAllChildren();
			int num = scc.AuthorizationsRequired - scc.Authorizations.Count;
			this.AuthorizationCount.Text = Loc.GetString("emergency-shuttle-ui-remaining", new ValueTuple<string, object>[]
			{
				new ValueTuple<string, object>("remaining", num)
			});
			foreach (string text in scc.Authorizations)
			{
				this.AuthorizationsContainer.AddChild(new Label
				{
					Text = text,
					FontColorOverride = new Color?(Color.Lime)
				});
			}
		}

		// Token: 0x0600088C RID: 2188 RVA: 0x00032030 File Offset: 0x00030230
		[NullableContext(1)]
		protected override void Draw(DrawingHandleScreen handle)
		{
			base.Draw(handle);
			if (this._earlyLaunchTime == null)
			{
				this.Countdown.Text = "00:10";
				return;
			}
			TimeSpan t = this._earlyLaunchTime.Value - this._timing.CurTime;
			if (t < TimeSpan.Zero)
			{
				t = TimeSpan.Zero;
			}
			Label countdown = this.Countdown;
			DefaultInterpolatedStringHandler defaultInterpolatedStringHandler = new DefaultInterpolatedStringHandler(1, 2);
			defaultInterpolatedStringHandler.AppendFormatted<int>(t.Minutes, "00");
			defaultInterpolatedStringHandler.AppendLiteral(":");
			defaultInterpolatedStringHandler.AppendFormatted<int>(t.Seconds, "00");
			countdown.Text = defaultInterpolatedStringHandler.ToStringAndClear();
		}

		// Token: 0x1700017C RID: 380
		// (get) Token: 0x0600088D RID: 2189 RVA: 0x000320DE File Offset: 0x000302DE
		private Label Countdown
		{
			get
			{
				return base.FindControl<Label>("Countdown");
			}
		}

		// Token: 0x1700017D RID: 381
		// (get) Token: 0x0600088E RID: 2190 RVA: 0x000320EB File Offset: 0x000302EB
		private BoxContainer EngineStatusContainer
		{
			get
			{
				return base.FindControl<BoxContainer>("EngineStatusContainer");
			}
		}

		// Token: 0x1700017E RID: 382
		// (get) Token: 0x0600088F RID: 2191 RVA: 0x000320F8 File Offset: 0x000302F8
		private Label EngineStatus
		{
			get
			{
				return base.FindControl<Label>("EngineStatus");
			}
		}

		// Token: 0x1700017F RID: 383
		// (get) Token: 0x06000890 RID: 2192 RVA: 0x00032105 File Offset: 0x00030305
		private BoxContainer LaunchContainer
		{
			get
			{
				return base.FindControl<BoxContainer>("LaunchContainer");
			}
		}

		// Token: 0x17000180 RID: 384
		// (get) Token: 0x06000891 RID: 2193 RVA: 0x00032112 File Offset: 0x00030312
		private Button RepealAllButton
		{
			get
			{
				return base.FindControl<Button>("RepealAllButton");
			}
		}

		// Token: 0x17000181 RID: 385
		// (get) Token: 0x06000892 RID: 2194 RVA: 0x0003211F File Offset: 0x0003031F
		private BoxContainer AuthorizeContainer
		{
			get
			{
				return base.FindControl<BoxContainer>("AuthorizeContainer");
			}
		}

		// Token: 0x17000182 RID: 386
		// (get) Token: 0x06000893 RID: 2195 RVA: 0x0003212C File Offset: 0x0003032C
		private Button AuthorizeButton
		{
			get
			{
				return base.FindControl<Button>("AuthorizeButton");
			}
		}

		// Token: 0x17000183 RID: 387
		// (get) Token: 0x06000894 RID: 2196 RVA: 0x00032139 File Offset: 0x00030339
		private Button RepealButton
		{
			get
			{
				return base.FindControl<Button>("RepealButton");
			}
		}

		// Token: 0x17000184 RID: 388
		// (get) Token: 0x06000895 RID: 2197 RVA: 0x00032146 File Offset: 0x00030346
		private BoxContainer AuthorizationsTextContainer
		{
			get
			{
				return base.FindControl<BoxContainer>("AuthorizationsTextContainer");
			}
		}

		// Token: 0x17000185 RID: 389
		// (get) Token: 0x06000896 RID: 2198 RVA: 0x00032153 File Offset: 0x00030353
		private Label AuthorizationCount
		{
			get
			{
				return base.FindControl<Label>("AuthorizationCount");
			}
		}

		// Token: 0x17000186 RID: 390
		// (get) Token: 0x06000897 RID: 2199 RVA: 0x00032160 File Offset: 0x00030360
		private BoxContainer AuthorizationsContainer
		{
			get
			{
				return base.FindControl<BoxContainer>("AuthorizationsContainer");
			}
		}

		// Token: 0x06000898 RID: 2200 RVA: 0x00032170 File Offset: 0x00030370
		static void xaml(IServiceProvider A_0, FancyWindow A_1)
		{
			XamlIlContext.Context<FancyWindow> context = new XamlIlContext.Context<FancyWindow>(A_0, null, "resm:Content.Client.Shuttles.UI.EmergencyConsoleWindow.xaml?assembly=Content.Client");
			context.RootObject = A_1;
			context.IntermediateRoot = A_1;
			A_1.Title = (string)new LocExtension("emergency-shuttle-console-window-title").ProvideValue();
			A_1.MinSize = new Vector2(400f, 400f);
			BoxContainer boxContainer = new BoxContainer();
			boxContainer.Orientation = 1;
			boxContainer.Margin = new Thickness(5f, 5f, 5f, 5f);
			Label label = new Label();
			label.Name = "Countdown";
			Control control = label;
			context.RobustNameScope.Register("Countdown", control);
			label.HorizontalAlignment = 2;
			label.Text = "00:00";
			control = label;
			boxContainer.XamlChildren.Add(control);
			BoxContainer boxContainer2 = new BoxContainer();
			boxContainer2.Name = "EngineStatusContainer";
			control = boxContainer2;
			context.RobustNameScope.Register("EngineStatusContainer", control);
			boxContainer2.HorizontalAlignment = 2;
			control = new Label
			{
				HorizontalAlignment = 2,
				Text = (string)new LocExtension("emergency-shuttle-ui-engines").ProvideValue()
			};
			boxContainer2.XamlChildren.Add(control);
			Label label2 = new Label();
			label2.Name = "EngineStatus";
			control = label2;
			context.RobustNameScope.Register("EngineStatus", control);
			label2.HorizontalAlignment = 2;
			label2.FontColorOverride = new Color?(Color.FromXaml("#FFA500"));
			label2.Text = (string)new LocExtension("emergency-shuttle-ui-idle").ProvideValue();
			control = label2;
			boxContainer2.XamlChildren.Add(control);
			control = boxContainer2;
			boxContainer.XamlChildren.Add(control);
			BoxContainer boxContainer3 = new BoxContainer();
			boxContainer3.Name = "LaunchContainer";
			control = boxContainer3;
			context.RobustNameScope.Register("LaunchContainer", control);
			control = new Label
			{
				Text = (string)new LocExtension("emergency-shuttle-ui-early-authorize").ProvideValue()
			};
			boxContainer3.XamlChildren.Add(control);
			Button button = new Button();
			button.Name = "RepealAllButton";
			control = button;
			context.RobustNameScope.Register("RepealAllButton", control);
			button.Text = (string)new LocExtension("emergency-shuttle-ui-repeal-all").ProvideValue();
			control = button;
			boxContainer3.XamlChildren.Add(control);
			control = boxContainer3;
			boxContainer.XamlChildren.Add(control);
			BoxContainer boxContainer4 = new BoxContainer();
			boxContainer4.Name = "AuthorizeContainer";
			control = boxContainer4;
			context.RobustNameScope.Register("AuthorizeContainer", control);
			Button button2 = new Button();
			button2.Name = "AuthorizeButton";
			control = button2;
			context.RobustNameScope.Register("AuthorizeButton", control);
			button2.Text = (string)new LocExtension("emergency-shuttle-ui-authorize").ProvideValue();
			control = button2;
			boxContainer4.XamlChildren.Add(control);
			Button button3 = new Button();
			button3.Name = "RepealButton";
			control = button3;
			context.RobustNameScope.Register("RepealButton", control);
			button3.Text = (string)new LocExtension("emergency-shuttle-ui-repeal").ProvideValue();
			control = button3;
			boxContainer4.XamlChildren.Add(control);
			control = boxContainer4;
			boxContainer.XamlChildren.Add(control);
			BoxContainer boxContainer5 = new BoxContainer();
			boxContainer5.Name = "AuthorizationsTextContainer";
			control = boxContainer5;
			context.RobustNameScope.Register("AuthorizationsTextContainer", control);
			control = new Label
			{
				Text = (string)new LocExtension("emergency-shuttle-ui-authorizations").ProvideValue()
			};
			boxContainer5.XamlChildren.Add(control);
			Label label3 = new Label();
			label3.Name = "AuthorizationCount";
			control = label3;
			context.RobustNameScope.Register("AuthorizationCount", control);
			label3.Text = "";
			label3.HorizontalAlignment = 3;
			label3.Align = 2;
			label3.HorizontalExpand = true;
			control = label3;
			boxContainer5.XamlChildren.Add(control);
			control = boxContainer5;
			boxContainer.XamlChildren.Add(control);
			BoxContainer boxContainer6 = new BoxContainer();
			boxContainer6.Name = "AuthorizationsContainer";
			control = boxContainer6;
			context.RobustNameScope.Register("AuthorizationsContainer", control);
			boxContainer6.Orientation = 1;
			control = boxContainer6;
			boxContainer.XamlChildren.Add(control);
			control = boxContainer;
			A_1.XamlChildren.Add(control);
			if ((control = (A_1 as Control)) != null)
			{
				context.RobustNameScope.Absorb(control.NameScope);
				control.NameScope = context.RobustNameScope;
			}
			context.RobustNameScope.Complete();
		}

		// Token: 0x06000899 RID: 2201 RVA: 0x0003269F File Offset: 0x0003089F
		private static void !XamlIlPopulateTrampoline(EmergencyConsoleWindow A_0)
		{
			EmergencyConsoleWindow.Populate:Content.Client.Shuttles.UI.EmergencyConsoleWindow.xaml(null, A_0);
		}

		// Token: 0x0400045F RID: 1119
		[Nullable(1)]
		private readonly IGameTiming _timing;

		// Token: 0x04000460 RID: 1120
		private TimeSpan? _earlyLaunchTime;
	}
}
