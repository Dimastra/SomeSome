using System;
using System.Runtime.CompilerServices;
using CompiledRobustXaml;
using Content.Client.Administration.UI.CustomControls;
using Content.Client.UserInterface.Controls;
using Content.Shared.Xenoarchaeology.Equipment;
using Robust.Client.AutoGenerated;
using Robust.Client.GameObjects;
using Robust.Client.Graphics;
using Robust.Client.UserInterface;
using Robust.Client.UserInterface.Controls;
using Robust.Shared.GameObjects;
using Robust.Shared.IoC;
using Robust.Shared.Localization;
using Robust.Shared.Maths;
using Robust.Shared.Utility;

namespace Content.Client.Xenoarchaeology.Ui
{
	// Token: 0x02000010 RID: 16
	[GenerateTypedNameReferences]
	public sealed class AnalysisConsoleMenu : FancyWindow
	{
		// Token: 0x14000001 RID: 1
		// (add) Token: 0x06000014 RID: 20 RVA: 0x00002324 File Offset: 0x00000524
		// (remove) Token: 0x06000015 RID: 21 RVA: 0x0000235C File Offset: 0x0000055C
		[Nullable(new byte[]
		{
			2,
			1
		})]
		[Nullable(new byte[]
		{
			2,
			1
		})]
		public event Action<BaseButton.ButtonEventArgs> OnServerSelectionButtonPressed;

		// Token: 0x14000002 RID: 2
		// (add) Token: 0x06000016 RID: 22 RVA: 0x00002394 File Offset: 0x00000594
		// (remove) Token: 0x06000017 RID: 23 RVA: 0x000023CC File Offset: 0x000005CC
		[Nullable(new byte[]
		{
			2,
			1
		})]
		[Nullable(new byte[]
		{
			2,
			1
		})]
		public event Action<BaseButton.ButtonEventArgs> OnScanButtonPressed;

		// Token: 0x14000003 RID: 3
		// (add) Token: 0x06000018 RID: 24 RVA: 0x00002404 File Offset: 0x00000604
		// (remove) Token: 0x06000019 RID: 25 RVA: 0x0000243C File Offset: 0x0000063C
		[Nullable(new byte[]
		{
			2,
			1
		})]
		[Nullable(new byte[]
		{
			2,
			1
		})]
		public event Action<BaseButton.ButtonEventArgs> OnPrintButtonPressed;

		// Token: 0x14000004 RID: 4
		// (add) Token: 0x0600001A RID: 26 RVA: 0x00002474 File Offset: 0x00000674
		// (remove) Token: 0x0600001B RID: 27 RVA: 0x000024AC File Offset: 0x000006AC
		[Nullable(new byte[]
		{
			2,
			1
		})]
		[Nullable(new byte[]
		{
			2,
			1
		})]
		public event Action<BaseButton.ButtonEventArgs> OnDestroyButtonPressed;

		// Token: 0x0600001C RID: 28 RVA: 0x000024E4 File Offset: 0x000006E4
		public AnalysisConsoleMenu()
		{
			AnalysisConsoleMenu.!XamlIlPopulateTrampoline(this);
			IoCManager.InjectDependencies<AnalysisConsoleMenu>(this);
			this.ServerSelectionButton.OnPressed += delegate(BaseButton.ButtonEventArgs a)
			{
				Action<BaseButton.ButtonEventArgs> onServerSelectionButtonPressed = this.OnServerSelectionButtonPressed;
				if (onServerSelectionButtonPressed == null)
				{
					return;
				}
				onServerSelectionButtonPressed(a);
			};
			this.ScanButton.OnPressed += delegate(BaseButton.ButtonEventArgs a)
			{
				Action<BaseButton.ButtonEventArgs> onScanButtonPressed = this.OnScanButtonPressed;
				if (onScanButtonPressed == null)
				{
					return;
				}
				onScanButtonPressed(a);
			};
			this.PrintButton.OnPressed += delegate(BaseButton.ButtonEventArgs a)
			{
				Action<BaseButton.ButtonEventArgs> onPrintButtonPressed = this.OnPrintButtonPressed;
				if (onPrintButtonPressed == null)
				{
					return;
				}
				onPrintButtonPressed(a);
			};
			this.DestroyButton.OnPressed += delegate(BaseButton.ButtonEventArgs _)
			{
				this.OnDestroyButton();
			};
		}

		// Token: 0x0600001D RID: 29 RVA: 0x00002560 File Offset: 0x00000760
		private void OnDestroyButton()
		{
			AnalysisDestroyWindow analysisDestroyWindow = this.AnalysisDestroyWindow;
			if (analysisDestroyWindow != null && analysisDestroyWindow.IsOpen)
			{
				this.AnalysisDestroyWindow.MoveToFront();
				return;
			}
			this.AnalysisDestroyWindow = new AnalysisDestroyWindow();
			this.AnalysisDestroyWindow.OpenCentered();
			this.AnalysisDestroyWindow.OnYesButton += delegate(BaseButton.ButtonEventArgs a)
			{
				Action<BaseButton.ButtonEventArgs> onDestroyButtonPressed = this.OnDestroyButtonPressed;
				if (onDestroyButtonPressed == null)
				{
					return;
				}
				onDestroyButtonPressed(a);
			};
		}

		// Token: 0x0600001E RID: 30 RVA: 0x000025B8 File Offset: 0x000007B8
		[NullableContext(1)]
		public void SetButtonsDisabled(AnalysisConsoleScanUpdateState state)
		{
			this.ScanButton.Disabled = !state.CanScan;
			this.PrintButton.Disabled = !state.CanPrint;
			bool flag = !state.ServerConnected || !state.CanScan;
			this.DestroyButton.Disabled = flag;
			if (flag)
			{
				this.DestroyButton.RemoveStyleClass("Caution");
				return;
			}
			this.DestroyButton.AddStyleClass("Caution");
		}

		// Token: 0x0600001F RID: 31 RVA: 0x00002634 File Offset: 0x00000834
		private void UpdateArtifactIcon(EntityUid? uid)
		{
			if (uid == null)
			{
				this.ArtifactDisplay.Visible = false;
				return;
			}
			this.ArtifactDisplay.Visible = true;
			SpriteComponent sprite;
			if (!this._ent.TryGetComponent<SpriteComponent>(uid, ref sprite))
			{
				return;
			}
			this.ArtifactDisplay.Sprite = sprite;
		}

		// Token: 0x06000020 RID: 32 RVA: 0x00002680 File Offset: 0x00000880
		[NullableContext(1)]
		public void UpdateInformationDisplay(AnalysisConsoleScanUpdateState state)
		{
			FormattedMessage formattedMessage = new FormattedMessage();
			if (state.Scanning)
			{
				formattedMessage.AddMarkup(Loc.GetString("analysis-console-info-scanner"));
				this.Information.SetMessage(formattedMessage);
				this.UpdateArtifactIcon(null);
				return;
			}
			this.UpdateArtifactIcon(state.Artifact);
			if (state.ScanReport == null)
			{
				if (!state.AnalyzerConnected)
				{
					formattedMessage.AddMarkup(Loc.GetString("analysis-console-info-no-scanner"));
				}
				else if (!state.CanScan)
				{
					formattedMessage.AddMarkup(Loc.GetString("analysis-console-info-no-artifact"));
				}
				else if (state.Artifact == null)
				{
					formattedMessage.AddMarkup(Loc.GetString("analysis-console-info-ready"));
				}
			}
			else
			{
				formattedMessage.AddMessage(state.ScanReport);
			}
			this.Information.SetMessage(formattedMessage);
		}

		// Token: 0x06000021 RID: 33 RVA: 0x00002748 File Offset: 0x00000948
		[NullableContext(1)]
		public void UpdateProgressBar(AnalysisConsoleScanUpdateState state)
		{
			this.ProgressBar.Visible = state.Scanning;
			this.ProgressLabel.Visible = state.Scanning;
			if (!state.Scanning)
			{
				return;
			}
			this.ProgressLabel.Text = Loc.GetString("analysis-console-progress-text", new ValueTuple<string, object>[]
			{
				new ValueTuple<string, object>("seconds", (int)state.TotalTime.TotalSeconds - (int)state.TimeRemaining.TotalSeconds)
			});
			this.ProgressBar.Value = (float)state.TimeRemaining.Divide(state.TotalTime);
		}

		// Token: 0x06000022 RID: 34 RVA: 0x000027E7 File Offset: 0x000009E7
		public override void Close()
		{
			base.Close();
			AnalysisDestroyWindow analysisDestroyWindow = this.AnalysisDestroyWindow;
			if (analysisDestroyWindow == null)
			{
				return;
			}
			analysisDestroyWindow.Close();
		}

		// Token: 0x17000001 RID: 1
		// (get) Token: 0x06000023 RID: 35 RVA: 0x000027FF File Offset: 0x000009FF
		private Button ServerSelectionButton
		{
			get
			{
				return base.FindControl<Button>("ServerSelectionButton");
			}
		}

		// Token: 0x17000002 RID: 2
		// (get) Token: 0x06000024 RID: 36 RVA: 0x0000280C File Offset: 0x00000A0C
		private Button ScanButton
		{
			get
			{
				return base.FindControl<Button>("ScanButton");
			}
		}

		// Token: 0x17000003 RID: 3
		// (get) Token: 0x06000025 RID: 37 RVA: 0x00002819 File Offset: 0x00000A19
		private Button PrintButton
		{
			get
			{
				return base.FindControl<Button>("PrintButton");
			}
		}

		// Token: 0x17000004 RID: 4
		// (get) Token: 0x06000026 RID: 38 RVA: 0x00002826 File Offset: 0x00000A26
		private Button DestroyButton
		{
			get
			{
				return base.FindControl<Button>("DestroyButton");
			}
		}

		// Token: 0x17000005 RID: 5
		// (get) Token: 0x06000027 RID: 39 RVA: 0x00002833 File Offset: 0x00000A33
		private Label ProgressLabel
		{
			get
			{
				return base.FindControl<Label>("ProgressLabel");
			}
		}

		// Token: 0x17000006 RID: 6
		// (get) Token: 0x06000028 RID: 40 RVA: 0x00002840 File Offset: 0x00000A40
		private ProgressBar ProgressBar
		{
			get
			{
				return base.FindControl<ProgressBar>("ProgressBar");
			}
		}

		// Token: 0x17000007 RID: 7
		// (get) Token: 0x06000029 RID: 41 RVA: 0x0000284D File Offset: 0x00000A4D
		private RichTextLabel Information
		{
			get
			{
				return base.FindControl<RichTextLabel>("Information");
			}
		}

		// Token: 0x17000008 RID: 8
		// (get) Token: 0x0600002A RID: 42 RVA: 0x0000285A File Offset: 0x00000A5A
		private SpriteView ArtifactDisplay
		{
			get
			{
				return base.FindControl<SpriteView>("ArtifactDisplay");
			}
		}

		// Token: 0x06000030 RID: 48 RVA: 0x000028BC File Offset: 0x00000ABC
		static void xaml(IServiceProvider A_0, FancyWindow A_1)
		{
			XamlIlContext.Context<FancyWindow> context = new XamlIlContext.Context<FancyWindow>(A_0, null, "resm:Content.Client.Xenoarchaeology.Ui.AnalysisConsoleMenu.xaml?assembly=Content.Client");
			context.RootObject = A_1;
			context.IntermediateRoot = A_1;
			A_1.Title = (string)new LocExtension("analysis-console-menu-title").ProvideValue();
			A_1.MinSize = new Vector2(620f, 280f);
			A_1.SetSize = new Vector2(620f, 280f);
			BoxContainer boxContainer = new BoxContainer();
			boxContainer.Orientation = 0;
			boxContainer.HorizontalExpand = true;
			boxContainer.VerticalExpand = true;
			BoxContainer boxContainer2 = new BoxContainer();
			boxContainer2.Margin = new Thickness(10f, 10f, 10f, 10f);
			boxContainer2.MinWidth = 150f;
			boxContainer2.Orientation = 1;
			boxContainer2.VerticalExpand = true;
			boxContainer2.SizeFlagsStretchRatio = 1f;
			BoxContainer boxContainer3 = new BoxContainer();
			boxContainer3.Orientation = 1;
			boxContainer3.VerticalExpand = true;
			Button button = new Button();
			button.Name = "ServerSelectionButton";
			Control control = button;
			context.RobustNameScope.Register("ServerSelectionButton", control);
			button.Text = (string)new LocExtension("analysis-console-server-list-button").ProvideValue();
			control = button;
			boxContainer3.XamlChildren.Add(control);
			control = new BoxContainer
			{
				MinHeight = 5f
			};
			boxContainer3.XamlChildren.Add(control);
			Button button2 = new Button();
			button2.Name = "ScanButton";
			control = button2;
			context.RobustNameScope.Register("ScanButton", control);
			button2.Text = (string)new LocExtension("analysis-console-scan-button").ProvideValue();
			button2.ToolTip = (string)new LocExtension("analysis-console-scan-tooltip-info").ProvideValue();
			control = button2;
			boxContainer3.XamlChildren.Add(control);
			control = new BoxContainer
			{
				MinHeight = 5f
			};
			boxContainer3.XamlChildren.Add(control);
			Button button3 = new Button();
			button3.Name = "PrintButton";
			control = button3;
			context.RobustNameScope.Register("PrintButton", control);
			button3.Text = (string)new LocExtension("analysis-console-print-button").ProvideValue();
			button3.ToolTip = (string)new LocExtension("analysis-console-print-tooltip-info").ProvideValue();
			control = button3;
			boxContainer3.XamlChildren.Add(control);
			control = new BoxContainer
			{
				MinHeight = 10f
			};
			boxContainer3.XamlChildren.Add(control);
			Button button4 = new Button();
			button4.Name = "DestroyButton";
			control = button4;
			context.RobustNameScope.Register("DestroyButton", control);
			button4.Text = (string)new LocExtension("analysis-console-destroy-button").ProvideValue();
			button4.ToolTip = (string)new LocExtension("analysis-console-destroy-button-info").ProvideValue();
			control = button4;
			boxContainer3.XamlChildren.Add(control);
			control = boxContainer3;
			boxContainer2.XamlChildren.Add(control);
			BoxContainer boxContainer4 = new BoxContainer();
			boxContainer4.Orientation = 1;
			Label label = new Label();
			label.Name = "ProgressLabel";
			control = label;
			context.RobustNameScope.Register("ProgressLabel", control);
			control = label;
			boxContainer4.XamlChildren.Add(control);
			ProgressBar progressBar = new ProgressBar();
			progressBar.Name = "ProgressBar";
			control = progressBar;
			context.RobustNameScope.Register("ProgressBar", control);
			progressBar.MinValue = 0f;
			progressBar.MaxValue = 1f;
			progressBar.SetHeight = 20f;
			control = progressBar;
			boxContainer4.XamlChildren.Add(control);
			control = boxContainer4;
			boxContainer2.XamlChildren.Add(control);
			control = boxContainer2;
			boxContainer.XamlChildren.Add(control);
			VSeparator vseparator = new VSeparator();
			string item = "LowDivider";
			vseparator.StyleClasses.Add(item);
			control = vseparator;
			boxContainer.XamlChildren.Add(control);
			PanelContainer panelContainer = new PanelContainer();
			panelContainer.Margin = new Thickness(10f, 10f, 10f, 10f);
			panelContainer.HorizontalExpand = true;
			panelContainer.SizeFlagsStretchRatio = 3f;
			panelContainer.PanelOverride = new StyleBoxFlat
			{
				BackgroundColor = Color.FromXaml("#000000FF")
			};
			BoxContainer boxContainer5 = new BoxContainer();
			boxContainer5.Margin = new Thickness(10f, 10f, 10f, 10f);
			boxContainer5.Orientation = 0;
			BoxContainer boxContainer6 = new BoxContainer();
			boxContainer6.Orientation = 1;
			boxContainer6.HorizontalExpand = true;
			BoxContainer boxContainer7 = new BoxContainer();
			boxContainer7.VerticalExpand = true;
			RichTextLabel richTextLabel = new RichTextLabel();
			richTextLabel.Name = "Information";
			control = richTextLabel;
			context.RobustNameScope.Register("Information", control);
			control = richTextLabel;
			boxContainer7.XamlChildren.Add(control);
			control = boxContainer7;
			boxContainer6.XamlChildren.Add(control);
			control = boxContainer6;
			boxContainer5.XamlChildren.Add(control);
			BoxContainer boxContainer8 = new BoxContainer();
			boxContainer8.VerticalExpand = false;
			boxContainer8.Orientation = 1;
			boxContainer8.MaxSize = new Vector2(64f, 64f);
			SpriteView spriteView = new SpriteView();
			spriteView.Name = "ArtifactDisplay";
			control = spriteView;
			context.RobustNameScope.Register("ArtifactDisplay", control);
			spriteView.OverrideDirection = new Direction?(0);
			spriteView.VerticalExpand = false;
			spriteView.SetSize = new Vector2(64f, 64f);
			spriteView.MaxSize = new Vector2(64f, 64f);
			spriteView.Scale = new Vector2(2f, 2f);
			control = spriteView;
			boxContainer8.XamlChildren.Add(control);
			control = boxContainer8;
			boxContainer5.XamlChildren.Add(control);
			control = new BoxContainer
			{
				VerticalExpand = true
			};
			boxContainer5.XamlChildren.Add(control);
			control = boxContainer5;
			panelContainer.XamlChildren.Add(control);
			control = panelContainer;
			boxContainer.XamlChildren.Add(control);
			control = boxContainer;
			A_1.XamlChildren.Add(control);
			if ((control = (A_1 as Control)) != null)
			{
				context.RobustNameScope.Absorb(control.NameScope);
				control.NameScope = context.RobustNameScope;
			}
			context.RobustNameScope.Complete();
		}

		// Token: 0x06000031 RID: 49 RVA: 0x00002F98 File Offset: 0x00001198
		private static void !XamlIlPopulateTrampoline(AnalysisConsoleMenu A_0)
		{
			AnalysisConsoleMenu.Populate:Content.Client.Xenoarchaeology.Ui.AnalysisConsoleMenu.xaml(null, A_0);
		}

		// Token: 0x04000010 RID: 16
		[Nullable(1)]
		[Dependency]
		private readonly IEntityManager _ent;

		// Token: 0x04000011 RID: 17
		[Nullable(2)]
		public AnalysisDestroyWindow AnalysisDestroyWindow;
	}
}
