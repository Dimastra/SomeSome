using System;
using System.Runtime.CompilerServices;
using CompiledRobustXaml;
using Content.Client.UserInterface.Controls;
using Content.Shared.Borgs;
using Robust.Client.AutoGenerated;
using Robust.Client.UserInterface;
using Robust.Client.UserInterface.Controls;
using Robust.Shared.GameObjects;
using Robust.Shared.IoC;
using Robust.Shared.Localization;
using Robust.Shared.Maths;

namespace Content.Client.Borgs
{
	// Token: 0x0200041A RID: 1050
	[GenerateTypedNameReferences]
	public sealed class LawsMenu : FancyWindow
	{
		// Token: 0x1700054F RID: 1359
		// (get) Token: 0x060019BA RID: 6586 RVA: 0x0009388E File Offset: 0x00091A8E
		[Nullable(1)]
		public LawsBoundUserInterface Owner { [NullableContext(1)] get; }

		// Token: 0x060019BB RID: 6587 RVA: 0x00093898 File Offset: 0x00091A98
		[NullableContext(1)]
		public LawsMenu(LawsBoundUserInterface owner)
		{
			LawsMenu.!XamlIlPopulateTrampoline(this);
			IoCManager.InjectDependencies<LawsMenu>(this);
			this.Owner = owner;
			this.UpdateLaws();
			LawsComponent lawsComponent;
			if (this._entityManager.TryGetComponent<LawsComponent>(owner.Machine, ref lawsComponent))
			{
				this.StateLawsButton.Visible = lawsComponent.CanState;
			}
			this.StateLawsButton.OnPressed += delegate(BaseButton.ButtonEventArgs _)
			{
				this.StateLaws();
			};
		}

		// Token: 0x060019BC RID: 6588 RVA: 0x00093904 File Offset: 0x00091B04
		public void UpdateLaws()
		{
			LawsComponent lawsComponent;
			if (!this._entityManager.TryGetComponent<LawsComponent>(this.Owner.Machine, ref lawsComponent))
			{
				return;
			}
			this.Laws.DisposeAllChildren();
			foreach (string description in lawsComponent.Laws)
			{
				LawUIContainer lawUIContainer = new LawUIContainer();
				string @string = Loc.GetString("silicon-laws-law-heading", new ValueTuple<string, object>[]
				{
					new ValueTuple<string, object>("lawDisplayNumber", this.Laws.ChildCount + 1)
				});
				lawUIContainer.SetHeading(@string);
				lawUIContainer.SetDescription(description);
				this.Laws.AddChild(lawUIContainer);
			}
		}

		// Token: 0x060019BD RID: 6589 RVA: 0x000939CC File Offset: 0x00091BCC
		private void StateLaws()
		{
			this.Owner.StateLawsMessage();
		}

		// Token: 0x17000550 RID: 1360
		// (get) Token: 0x060019BE RID: 6590 RVA: 0x000939D9 File Offset: 0x00091BD9
		public Button StateLawsButton
		{
			get
			{
				return base.FindControl<Button>("StateLawsButton");
			}
		}

		// Token: 0x17000551 RID: 1361
		// (get) Token: 0x060019BF RID: 6591 RVA: 0x000939E6 File Offset: 0x00091BE6
		private BoxContainer Laws
		{
			get
			{
				return base.FindControl<BoxContainer>("Laws");
			}
		}

		// Token: 0x060019C1 RID: 6593 RVA: 0x000939FC File Offset: 0x00091BFC
		static void xaml(IServiceProvider A_0, FancyWindow A_1)
		{
			XamlIlContext.Context<FancyWindow> context = new XamlIlContext.Context<FancyWindow>(A_0, null, "resm:Content.Client.Borgs.LawsMenu.xaml?assembly=Content.Client");
			context.RootObject = A_1;
			context.IntermediateRoot = A_1;
			A_1.Title = (string)new LocExtension("law-window-title").ProvideValue();
			A_1.MinSize = new Vector2(400f, 300f);
			A_1.SetSize = new Vector2(500f, 500f);
			A_1.Resizable = true;
			BoxContainer boxContainer = new BoxContainer();
			boxContainer.Orientation = 1;
			boxContainer.HorizontalExpand = true;
			boxContainer.VerticalExpand = true;
			Button button = new Button();
			button.Name = "StateLawsButton";
			Control control = button;
			context.RobustNameScope.Register("StateLawsButton", control);
			button.Access = new AccessLevel?(0);
			button.Text = (string)new LocExtension("state-laws-button").ProvideValue();
			button.Margin = new Thickness(6f, 6f, 6f, 6f);
			control = button;
			boxContainer.XamlChildren.Add(control);
			BoxContainer boxContainer2 = new BoxContainer();
			boxContainer2.Orientation = 0;
			boxContainer2.HorizontalExpand = true;
			boxContainer2.VerticalExpand = true;
			boxContainer2.SizeFlagsStretchRatio = 2f;
			boxContainer2.SeparationOverride = new int?(10);
			ScrollContainer scrollContainer = new ScrollContainer();
			scrollContainer.HScrollEnabled = false;
			scrollContainer.HorizontalExpand = true;
			scrollContainer.VerticalExpand = true;
			BoxContainer boxContainer3 = new BoxContainer();
			boxContainer3.Name = "Laws";
			control = boxContainer3;
			context.RobustNameScope.Register("Laws", control);
			boxContainer3.Orientation = 1;
			boxContainer3.HorizontalExpand = true;
			boxContainer3.VerticalExpand = true;
			boxContainer3.Margin = new Thickness(0f, 0f, 0f, 12f);
			control = new Label
			{
				Text = (string)new LocExtension("silicon-laws-label").ProvideValue()
			};
			boxContainer3.XamlChildren.Add(control);
			control = boxContainer3;
			scrollContainer.XamlChildren.Add(control);
			control = scrollContainer;
			boxContainer2.XamlChildren.Add(control);
			control = boxContainer2;
			boxContainer.XamlChildren.Add(control);
			control = boxContainer;
			A_1.XamlChildren.Add(control);
			if ((control = (A_1 as Control)) != null)
			{
				context.RobustNameScope.Absorb(control.NameScope);
				control.NameScope = context.RobustNameScope;
			}
			context.RobustNameScope.Complete();
		}

		// Token: 0x060019C2 RID: 6594 RVA: 0x00093CC8 File Offset: 0x00091EC8
		private static void !XamlIlPopulateTrampoline(LawsMenu A_0)
		{
			LawsMenu.Populate:Content.Client.Borgs.LawsMenu.xaml(null, A_0);
		}

		// Token: 0x04000D11 RID: 3345
		[Nullable(1)]
		[Dependency]
		private readonly IEntityManager _entityManager;
	}
}
