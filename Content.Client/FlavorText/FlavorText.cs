using System;
using System.Runtime.CompilerServices;
using CompiledRobustXaml;
using Robust.Client.AutoGenerated;
using Robust.Client.UserInterface;
using Robust.Client.UserInterface.Controls;
using Robust.Shared.IoC;
using Robust.Shared.Maths;

namespace Content.Client.FlavorText
{
	// Token: 0x02000315 RID: 789
	[GenerateTypedNameReferences]
	public sealed class FlavorText : Control
	{
		// Token: 0x060013E2 RID: 5090 RVA: 0x00074F3F File Offset: 0x0007313F
		public FlavorText()
		{
			FlavorText.!XamlIlPopulateTrampoline(this);
			IoCManager.InjectDependencies<FlavorText>(this);
			this.CFlavorTextInput.OnTextChanged += delegate(LineEdit.LineEditEventArgs _)
			{
				this.FlavorTextChanged();
			};
		}

		// Token: 0x060013E3 RID: 5091 RVA: 0x00074F6B File Offset: 0x0007316B
		public void FlavorTextChanged()
		{
			Action<string> onFlavorTextChanged = this.OnFlavorTextChanged;
			if (onFlavorTextChanged == null)
			{
				return;
			}
			onFlavorTextChanged(this.CFlavorTextInput.Text);
		}

		// Token: 0x1700041F RID: 1055
		// (get) Token: 0x060013E4 RID: 5092 RVA: 0x00074F88 File Offset: 0x00073188
		private Control CFlavorText
		{
			get
			{
				return base.FindControl<Control>("CFlavorText");
			}
		}

		// Token: 0x17000420 RID: 1056
		// (get) Token: 0x060013E5 RID: 5093 RVA: 0x00074F95 File Offset: 0x00073195
		public LineEdit CFlavorTextInput
		{
			get
			{
				return base.FindControl<LineEdit>("CFlavorTextInput");
			}
		}

		// Token: 0x060013E7 RID: 5095 RVA: 0x00074FAC File Offset: 0x000731AC
		static void xaml(IServiceProvider A_0, Control A_1)
		{
			XamlIlContext.Context<Control> context = new XamlIlContext.Context<Control>(A_0, null, "resm:Content.Client.FlavorText.FlavorText.xaml?assembly=Content.Client");
			context.RootObject = A_1;
			context.IntermediateRoot = A_1;
			A_1.Name = "CFlavorText";
			context.RobustNameScope.Register("CFlavorText", A_1);
			BoxContainer boxContainer = new BoxContainer();
			boxContainer.Orientation = 1;
			boxContainer.HorizontalExpand = true;
			LineEdit lineEdit = new LineEdit();
			lineEdit.Name = "CFlavorTextInput";
			Control control = lineEdit;
			context.RobustNameScope.Register("CFlavorTextInput", control);
			lineEdit.Access = new AccessLevel?(0);
			lineEdit.MinSize = new Vector2(220f, 0f);
			lineEdit.HorizontalExpand = true;
			control = lineEdit;
			boxContainer.XamlChildren.Add(control);
			control = boxContainer;
			A_1.XamlChildren.Add(control);
			if ((control = (A_1 as Control)) != null)
			{
				context.RobustNameScope.Absorb(control.NameScope);
				control.NameScope = context.RobustNameScope;
			}
			context.RobustNameScope.Complete();
		}

		// Token: 0x060013E8 RID: 5096 RVA: 0x000750E8 File Offset: 0x000732E8
		private static void !XamlIlPopulateTrampoline(FlavorText A_0)
		{
			FlavorText.Populate:Content.Client.FlavorText.FlavorText.xaml(null, A_0);
		}

		// Token: 0x040009FB RID: 2555
		[Nullable(new byte[]
		{
			2,
			1
		})]
		public Action<string> OnFlavorTextChanged;
	}
}
