using System;
using CompiledRobustXaml;
using Robust.Client.AutoGenerated;
using Robust.Client.UserInterface;
using Robust.Client.UserInterface.Controls;
using Robust.Client.UserInterface.CustomControls;

namespace Content.Client.UserInterface.Systems.Sandbox.Windows
{
	// Token: 0x02000072 RID: 114
	[GenerateTypedNameReferences]
	public sealed class SandboxWindow : DefaultWindow
	{
		// Token: 0x06000235 RID: 565 RVA: 0x0000ED79 File Offset: 0x0000CF79
		public SandboxWindow()
		{
			SandboxWindow.!XamlIlPopulateTrampoline(this);
		}

		// Token: 0x1700004C RID: 76
		// (get) Token: 0x06000236 RID: 566 RVA: 0x0000ED87 File Offset: 0x0000CF87
		public Button RespawnButton
		{
			get
			{
				return base.FindControl<Button>("RespawnButton");
			}
		}

		// Token: 0x1700004D RID: 77
		// (get) Token: 0x06000237 RID: 567 RVA: 0x0000ED94 File Offset: 0x0000CF94
		public Button SpawnEntitiesButton
		{
			get
			{
				return base.FindControl<Button>("SpawnEntitiesButton");
			}
		}

		// Token: 0x1700004E RID: 78
		// (get) Token: 0x06000238 RID: 568 RVA: 0x0000EDA1 File Offset: 0x0000CFA1
		public Button SpawnTilesButton
		{
			get
			{
				return base.FindControl<Button>("SpawnTilesButton");
			}
		}

		// Token: 0x1700004F RID: 79
		// (get) Token: 0x06000239 RID: 569 RVA: 0x0000EDAE File Offset: 0x0000CFAE
		public Button SpawnDecalsButton
		{
			get
			{
				return base.FindControl<Button>("SpawnDecalsButton");
			}
		}

		// Token: 0x17000050 RID: 80
		// (get) Token: 0x0600023A RID: 570 RVA: 0x0000EDBB File Offset: 0x0000CFBB
		public Button GiveFullAccessButton
		{
			get
			{
				return base.FindControl<Button>("GiveFullAccessButton");
			}
		}

		// Token: 0x17000051 RID: 81
		// (get) Token: 0x0600023B RID: 571 RVA: 0x0000EDC8 File Offset: 0x0000CFC8
		public Button GiveAghostButton
		{
			get
			{
				return base.FindControl<Button>("GiveAghostButton");
			}
		}

		// Token: 0x17000052 RID: 82
		// (get) Token: 0x0600023C RID: 572 RVA: 0x0000EDD5 File Offset: 0x0000CFD5
		public Button ToggleLightButton
		{
			get
			{
				return base.FindControl<Button>("ToggleLightButton");
			}
		}

		// Token: 0x17000053 RID: 83
		// (get) Token: 0x0600023D RID: 573 RVA: 0x0000EDE2 File Offset: 0x0000CFE2
		public Button ToggleFovButton
		{
			get
			{
				return base.FindControl<Button>("ToggleFovButton");
			}
		}

		// Token: 0x17000054 RID: 84
		// (get) Token: 0x0600023E RID: 574 RVA: 0x0000EDEF File Offset: 0x0000CFEF
		public Button ToggleShadowsButton
		{
			get
			{
				return base.FindControl<Button>("ToggleShadowsButton");
			}
		}

		// Token: 0x17000055 RID: 85
		// (get) Token: 0x0600023F RID: 575 RVA: 0x0000EDFC File Offset: 0x0000CFFC
		public Button ToggleSubfloorButton
		{
			get
			{
				return base.FindControl<Button>("ToggleSubfloorButton");
			}
		}

		// Token: 0x17000056 RID: 86
		// (get) Token: 0x06000240 RID: 576 RVA: 0x0000EE09 File Offset: 0x0000D009
		public Button SuicideButton
		{
			get
			{
				return base.FindControl<Button>("SuicideButton");
			}
		}

		// Token: 0x17000057 RID: 87
		// (get) Token: 0x06000241 RID: 577 RVA: 0x0000EE16 File Offset: 0x0000D016
		public Button ShowMarkersButton
		{
			get
			{
				return base.FindControl<Button>("ShowMarkersButton");
			}
		}

		// Token: 0x17000058 RID: 88
		// (get) Token: 0x06000242 RID: 578 RVA: 0x0000EE23 File Offset: 0x0000D023
		public Button ShowBbButton
		{
			get
			{
				return base.FindControl<Button>("ShowBbButton");
			}
		}

		// Token: 0x17000059 RID: 89
		// (get) Token: 0x06000243 RID: 579 RVA: 0x0000EE30 File Offset: 0x0000D030
		public Button MachineLinkingButton
		{
			get
			{
				return base.FindControl<Button>("MachineLinkingButton");
			}
		}

		// Token: 0x06000244 RID: 580 RVA: 0x0000EE40 File Offset: 0x0000D040
		static void xaml(IServiceProvider A_0, SandboxWindow A_1)
		{
			XamlIlContext.Context<SandboxWindow> context = new XamlIlContext.Context<SandboxWindow>(A_0, null, "resm:Content.Client.UserInterface.Systems.Sandbox.Windows.SandboxWindow.xaml?assembly=Content.Client");
			context.RootObject = A_1;
			context.IntermediateRoot = A_1;
			A_1.Title = (string)new LocExtension("sandbox-window-title").ProvideValue();
			A_1.Resizable = false;
			BoxContainer boxContainer = new BoxContainer();
			boxContainer.Orientation = 1;
			boxContainer.SeparationOverride = new int?(4);
			Button button = new Button();
			button.Name = "RespawnButton";
			Control control = button;
			context.RobustNameScope.Register("RespawnButton", control);
			button.Access = new AccessLevel?(0);
			button.Text = (string)new LocExtension("sandbox-window-respawn-button").ProvideValue();
			control = button;
			boxContainer.XamlChildren.Add(control);
			Button button2 = new Button();
			button2.Name = "SpawnEntitiesButton";
			control = button2;
			context.RobustNameScope.Register("SpawnEntitiesButton", control);
			button2.Access = new AccessLevel?(0);
			button2.Text = (string)new LocExtension("sandbox-window-spawn-entities-button").ProvideValue();
			control = button2;
			boxContainer.XamlChildren.Add(control);
			Button button3 = new Button();
			button3.Name = "SpawnTilesButton";
			control = button3;
			context.RobustNameScope.Register("SpawnTilesButton", control);
			button3.Access = new AccessLevel?(0);
			button3.Text = (string)new LocExtension("sandbox-window-spawn-tiles-button").ProvideValue();
			control = button3;
			boxContainer.XamlChildren.Add(control);
			Button button4 = new Button();
			button4.Name = "SpawnDecalsButton";
			control = button4;
			context.RobustNameScope.Register("SpawnDecalsButton", control);
			button4.Access = new AccessLevel?(0);
			button4.Text = (string)new LocExtension("sandbox-window-spawn-decals-button").ProvideValue();
			control = button4;
			boxContainer.XamlChildren.Add(control);
			Button button5 = new Button();
			button5.Name = "GiveFullAccessButton";
			control = button5;
			context.RobustNameScope.Register("GiveFullAccessButton", control);
			button5.Access = new AccessLevel?(0);
			button5.Text = (string)new LocExtension("sandbox-window-grant-full-access-button").ProvideValue();
			control = button5;
			boxContainer.XamlChildren.Add(control);
			Button button6 = new Button();
			button6.Name = "GiveAghostButton";
			control = button6;
			context.RobustNameScope.Register("GiveAghostButton", control);
			button6.Access = new AccessLevel?(0);
			button6.Text = (string)new LocExtension("sandbox-window-ghost-button").ProvideValue();
			control = button6;
			boxContainer.XamlChildren.Add(control);
			Button button7 = new Button();
			button7.Name = "ToggleLightButton";
			control = button7;
			context.RobustNameScope.Register("ToggleLightButton", control);
			button7.Access = new AccessLevel?(0);
			button7.Text = (string)new LocExtension("sandbox-window-toggle-lights-button").ProvideValue();
			button7.ToggleMode = true;
			control = button7;
			boxContainer.XamlChildren.Add(control);
			Button button8 = new Button();
			button8.Name = "ToggleFovButton";
			control = button8;
			context.RobustNameScope.Register("ToggleFovButton", control);
			button8.Access = new AccessLevel?(0);
			button8.Text = (string)new LocExtension("sandbox-window-toggle-fov-button").ProvideValue();
			button8.ToggleMode = true;
			control = button8;
			boxContainer.XamlChildren.Add(control);
			Button button9 = new Button();
			button9.Name = "ToggleShadowsButton";
			control = button9;
			context.RobustNameScope.Register("ToggleShadowsButton", control);
			button9.Access = new AccessLevel?(0);
			button9.Text = (string)new LocExtension("sandbox-window-toggle-shadows-button").ProvideValue();
			button9.ToggleMode = true;
			control = button9;
			boxContainer.XamlChildren.Add(control);
			Button button10 = new Button();
			button10.Name = "ToggleSubfloorButton";
			control = button10;
			context.RobustNameScope.Register("ToggleSubfloorButton", control);
			button10.Access = new AccessLevel?(0);
			button10.Text = (string)new LocExtension("sandbox-window-toggle-subfloor-button").ProvideValue();
			button10.ToggleMode = true;
			control = button10;
			boxContainer.XamlChildren.Add(control);
			Button button11 = new Button();
			button11.Name = "SuicideButton";
			control = button11;
			context.RobustNameScope.Register("SuicideButton", control);
			button11.Access = new AccessLevel?(0);
			button11.Text = (string)new LocExtension("sandbox-window-toggle-suicide-button").ProvideValue();
			button11.ToggleMode = true;
			control = button11;
			boxContainer.XamlChildren.Add(control);
			Button button12 = new Button();
			button12.Name = "ShowMarkersButton";
			control = button12;
			context.RobustNameScope.Register("ShowMarkersButton", control);
			button12.Access = new AccessLevel?(0);
			button12.Text = (string)new LocExtension("sandbox-window-show-spawns-button").ProvideValue();
			button12.ToggleMode = true;
			control = button12;
			boxContainer.XamlChildren.Add(control);
			Button button13 = new Button();
			button13.Name = "ShowBbButton";
			control = button13;
			context.RobustNameScope.Register("ShowBbButton", control);
			button13.Access = new AccessLevel?(0);
			button13.Text = (string)new LocExtension("sandbox-window-show-bb-button").ProvideValue();
			button13.ToggleMode = true;
			control = button13;
			boxContainer.XamlChildren.Add(control);
			Button button14 = new Button();
			button14.Name = "MachineLinkingButton";
			control = button14;
			context.RobustNameScope.Register("MachineLinkingButton", control);
			button14.Access = new AccessLevel?(0);
			button14.Text = (string)new LocExtension("sandbox-window-link-machines-button").ProvideValue();
			button14.ToggleMode = true;
			control = button14;
			boxContainer.XamlChildren.Add(control);
			control = boxContainer;
			A_1.XamlChildren.Add(control);
			if ((control = (A_1 as Control)) != null)
			{
				context.RobustNameScope.Absorb(control.NameScope);
				control.NameScope = context.RobustNameScope;
			}
			context.RobustNameScope.Complete();
		}

		// Token: 0x06000245 RID: 581 RVA: 0x0000F544 File Offset: 0x0000D744
		private static void !XamlIlPopulateTrampoline(SandboxWindow A_0)
		{
			SandboxWindow.Populate:Content.Client.UserInterface.Systems.Sandbox.Windows.SandboxWindow.xaml(null, A_0);
		}
	}
}
