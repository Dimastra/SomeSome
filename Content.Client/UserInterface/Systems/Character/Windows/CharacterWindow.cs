using System;
using CompiledRobustXaml;
using Content.Client.UserInterface.Controls;
using Robust.Client.AutoGenerated;
using Robust.Client.UserInterface;
using Robust.Client.UserInterface.Controls;
using Robust.Client.UserInterface.CustomControls;
using Robust.Shared.Maths;

namespace Content.Client.UserInterface.Systems.Character.Windows
{
	// Token: 0x020000AF RID: 175
	[GenerateTypedNameReferences]
	public sealed class CharacterWindow : DefaultWindow
	{
		// Token: 0x06000492 RID: 1170 RVA: 0x0001A091 File Offset: 0x00018291
		public CharacterWindow()
		{
			CharacterWindow.!XamlIlPopulateTrampoline(this);
		}

		// Token: 0x170000B7 RID: 183
		// (get) Token: 0x06000493 RID: 1171 RVA: 0x0001A09F File Offset: 0x0001829F
		public SpriteView SpriteView
		{
			get
			{
				return base.FindControl<SpriteView>("SpriteView");
			}
		}

		// Token: 0x170000B8 RID: 184
		// (get) Token: 0x06000494 RID: 1172 RVA: 0x0001A0AC File Offset: 0x000182AC
		public Label NameLabel
		{
			get
			{
				return base.FindControl<Label>("NameLabel");
			}
		}

		// Token: 0x170000B9 RID: 185
		// (get) Token: 0x06000495 RID: 1173 RVA: 0x0001A0B9 File Offset: 0x000182B9
		public Label SubText
		{
			get
			{
				return base.FindControl<Label>("SubText");
			}
		}

		// Token: 0x170000BA RID: 186
		// (get) Token: 0x06000496 RID: 1174 RVA: 0x0001A0C6 File Offset: 0x000182C6
		public BoxContainer Objectives
		{
			get
			{
				return base.FindControl<BoxContainer>("Objectives");
			}
		}

		// Token: 0x06000497 RID: 1175 RVA: 0x0001A0D4 File Offset: 0x000182D4
		static void xaml(IServiceProvider A_0, CharacterWindow A_1)
		{
			XamlIlContext.Context<CharacterWindow> context = new XamlIlContext.Context<CharacterWindow>(A_0, null, "resm:Content.Client.UserInterface.Systems.Character.Windows.CharacterWindow.xaml?assembly=Content.Client");
			context.RootObject = A_1;
			context.IntermediateRoot = A_1;
			A_1.Title = (string)new LocExtension("character-info-title").ProvideValue();
			A_1.MinWidth = 400f;
			A_1.MinHeight = 545f;
			ScrollContainer scrollContainer = new ScrollContainer();
			BoxContainer boxContainer = new BoxContainer();
			boxContainer.Orientation = 1;
			BoxContainer boxContainer2 = new BoxContainer();
			boxContainer2.Orientation = 0;
			SpriteView spriteView = new SpriteView();
			spriteView.OverrideDirection = new Direction?(0);
			spriteView.Scale = new Vector2(2f, 2f);
			spriteView.Name = "SpriteView";
			Control control = spriteView;
			context.RobustNameScope.Register("SpriteView", control);
			spriteView.Access = new AccessLevel?(0);
			control = spriteView;
			boxContainer2.XamlChildren.Add(control);
			BoxContainer boxContainer3 = new BoxContainer();
			boxContainer3.Orientation = 1;
			boxContainer3.VerticalAlignment = 1;
			Label label = new Label();
			label.Name = "NameLabel";
			control = label;
			context.RobustNameScope.Register("NameLabel", control);
			label.Access = new AccessLevel?(0);
			control = label;
			boxContainer3.XamlChildren.Add(control);
			Label label2 = new Label();
			label2.Name = "SubText";
			control = label2;
			context.RobustNameScope.Register("SubText", control);
			label2.VerticalAlignment = 1;
			string item = "LabelSubText";
			label2.StyleClasses.Add(item);
			label2.Access = new AccessLevel?(0);
			control = label2;
			boxContainer3.XamlChildren.Add(control);
			control = boxContainer3;
			boxContainer2.XamlChildren.Add(control);
			control = boxContainer2;
			boxContainer.XamlChildren.Add(control);
			control = new Label
			{
				Text = (string)new LocExtension("character-info-objectives-label").ProvideValue(),
				HorizontalAlignment = 2
			};
			boxContainer.XamlChildren.Add(control);
			BoxContainer boxContainer4 = new BoxContainer();
			boxContainer4.Orientation = 1;
			boxContainer4.Name = "Objectives";
			control = boxContainer4;
			context.RobustNameScope.Register("Objectives", control);
			boxContainer4.Access = new AccessLevel?(0);
			control = boxContainer4;
			boxContainer.XamlChildren.Add(control);
			control = new Placeholder
			{
				PlaceholderText = (string)new LocExtension("character-info-roles-antagonist-text").ProvideValue()
			};
			boxContainer.XamlChildren.Add(control);
			control = boxContainer;
			scrollContainer.XamlChildren.Add(control);
			control = scrollContainer;
			A_1.XamlChildren.Add(control);
			if ((control = (A_1 as Control)) != null)
			{
				context.RobustNameScope.Absorb(control.NameScope);
				control.NameScope = context.RobustNameScope;
			}
			context.RobustNameScope.Complete();
		}

		// Token: 0x06000498 RID: 1176 RVA: 0x0001A40C File Offset: 0x0001860C
		private static void !XamlIlPopulateTrampoline(CharacterWindow A_0)
		{
			CharacterWindow.Populate:Content.Client.UserInterface.Systems.Character.Windows.CharacterWindow.xaml(null, A_0);
		}
	}
}
