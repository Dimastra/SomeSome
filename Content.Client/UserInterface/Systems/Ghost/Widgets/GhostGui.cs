using System;
using System.Runtime.CompilerServices;
using CompiledRobustXaml;
using Content.Client.UserInterface.Systems.Ghost.Controls;
using Robust.Client.AutoGenerated;
using Robust.Client.UserInterface;
using Robust.Client.UserInterface.Controls;
using Robust.Shared.Localization;

namespace Content.Client.UserInterface.Systems.Ghost.Widgets
{
	// Token: 0x02000086 RID: 134
	[NullableContext(2)]
	[Nullable(0)]
	[GenerateTypedNameReferences]
	public sealed class GhostGui : UIWidget
	{
		// Token: 0x17000081 RID: 129
		// (get) Token: 0x06000309 RID: 777 RVA: 0x00013171 File Offset: 0x00011371
		[Nullable(1)]
		public GhostTargetWindow TargetWindow { [NullableContext(1)] get; }

		// Token: 0x1400000E RID: 14
		// (add) Token: 0x0600030A RID: 778 RVA: 0x0001317C File Offset: 0x0001137C
		// (remove) Token: 0x0600030B RID: 779 RVA: 0x000131B4 File Offset: 0x000113B4
		public event Action RequestWarpsPressed;

		// Token: 0x1400000F RID: 15
		// (add) Token: 0x0600030C RID: 780 RVA: 0x000131EC File Offset: 0x000113EC
		// (remove) Token: 0x0600030D RID: 781 RVA: 0x00013224 File Offset: 0x00011424
		public event Action ReturnToBodyPressed;

		// Token: 0x14000010 RID: 16
		// (add) Token: 0x0600030E RID: 782 RVA: 0x0001325C File Offset: 0x0001145C
		// (remove) Token: 0x0600030F RID: 783 RVA: 0x00013294 File Offset: 0x00011494
		public event Action GhostRolesPressed;

		// Token: 0x14000011 RID: 17
		// (add) Token: 0x06000310 RID: 784 RVA: 0x000132CC File Offset: 0x000114CC
		// (remove) Token: 0x06000311 RID: 785 RVA: 0x00013304 File Offset: 0x00011504
		public event Action ReturnToRoundPressed;

		// Token: 0x06000312 RID: 786 RVA: 0x0001333C File Offset: 0x0001153C
		public GhostGui()
		{
			GhostGui.!XamlIlPopulateTrampoline(this);
			this.TargetWindow = new GhostTargetWindow();
			base.MouseFilter = 2;
			this.GhostWarpButton.OnPressed += delegate(BaseButton.ButtonEventArgs _)
			{
				Action requestWarpsPressed = this.RequestWarpsPressed;
				if (requestWarpsPressed == null)
				{
					return;
				}
				requestWarpsPressed();
			};
			this.ReturnToBodyButton.OnPressed += delegate(BaseButton.ButtonEventArgs _)
			{
				Action returnToBodyPressed = this.ReturnToBodyPressed;
				if (returnToBodyPressed == null)
				{
					return;
				}
				returnToBodyPressed();
			};
			this.GhostRolesButton.OnPressed += delegate(BaseButton.ButtonEventArgs _)
			{
				Action ghostRolesPressed = this.GhostRolesPressed;
				if (ghostRolesPressed == null)
				{
					return;
				}
				ghostRolesPressed();
			};
			this.ReturnToRound.OnPressed += delegate(BaseButton.ButtonEventArgs _)
			{
				Action returnToRoundPressed = this.ReturnToRoundPressed;
				if (returnToRoundPressed == null)
				{
					return;
				}
				returnToRoundPressed();
			};
		}

		// Token: 0x06000313 RID: 787 RVA: 0x000133C3 File Offset: 0x000115C3
		public void Hide()
		{
			this.TargetWindow.Close();
			base.Visible = false;
		}

		// Token: 0x06000314 RID: 788 RVA: 0x000133D8 File Offset: 0x000115D8
		public void Update(int? roles, bool? canReturnToBody)
		{
			this.ReturnToBodyButton.Disabled = ((!canReturnToBody) ?? true);
			if (roles != null)
			{
				this.GhostRolesButton.Text = Loc.GetString("ghost-gui-ghost-roles-button", new ValueTuple<string, object>[]
				{
					new ValueTuple<string, object>("count", roles)
				});
				int? num = roles;
				int num2 = 0;
				if (num.GetValueOrDefault() > num2 & num != null)
				{
					this.GhostRolesButton.StyleClasses.Add("Caution");
				}
				else
				{
					this.GhostRolesButton.StyleClasses.Remove("Caution");
				}
			}
			this.TargetWindow.Populate();
		}

		// Token: 0x06000315 RID: 789 RVA: 0x000134B6 File Offset: 0x000116B6
		protected override void Dispose(bool disposing)
		{
			base.Dispose(disposing);
			if (disposing)
			{
				this.TargetWindow.Dispose();
			}
		}

		// Token: 0x17000082 RID: 130
		// (get) Token: 0x06000316 RID: 790 RVA: 0x000134CD File Offset: 0x000116CD
		[Nullable(0)]
		private Button ReturnToBodyButton
		{
			[NullableContext(0)]
			get
			{
				return base.FindControl<Button>("ReturnToBodyButton");
			}
		}

		// Token: 0x17000083 RID: 131
		// (get) Token: 0x06000317 RID: 791 RVA: 0x000134DA File Offset: 0x000116DA
		[Nullable(0)]
		private Button GhostWarpButton
		{
			[NullableContext(0)]
			get
			{
				return base.FindControl<Button>("GhostWarpButton");
			}
		}

		// Token: 0x17000084 RID: 132
		// (get) Token: 0x06000318 RID: 792 RVA: 0x000134E7 File Offset: 0x000116E7
		[Nullable(0)]
		private Button GhostRolesButton
		{
			[NullableContext(0)]
			get
			{
				return base.FindControl<Button>("GhostRolesButton");
			}
		}

		// Token: 0x17000085 RID: 133
		// (get) Token: 0x06000319 RID: 793 RVA: 0x000134F4 File Offset: 0x000116F4
		[Nullable(0)]
		private Button ReturnToRound
		{
			[NullableContext(0)]
			get
			{
				return base.FindControl<Button>("ReturnToRound");
			}
		}

		// Token: 0x0600031E RID: 798 RVA: 0x0001354C File Offset: 0x0001174C
		static void xaml(IServiceProvider A_0, GhostGui A_1)
		{
			XamlIlContext.Context<GhostGui> context = new XamlIlContext.Context<GhostGui>(A_0, null, "resm:Content.Client.UserInterface.Systems.Ghost.Widgets.GhostGui.xaml?assembly=Content.Client");
			context.RootObject = A_1;
			context.IntermediateRoot = A_1;
			A_1.HorizontalAlignment = 2;
			BoxContainer boxContainer = new BoxContainer();
			boxContainer.Orientation = 0;
			Button button = new Button();
			button.Name = "ReturnToBodyButton";
			Control control = button;
			context.RobustNameScope.Register("ReturnToBodyButton", control);
			button.Text = (string)new LocExtension("ghost-gui-return-to-body-button").ProvideValue();
			control = button;
			boxContainer.XamlChildren.Add(control);
			Button button2 = new Button();
			button2.Name = "GhostWarpButton";
			control = button2;
			context.RobustNameScope.Register("GhostWarpButton", control);
			button2.Text = (string)new LocExtension("ghost-gui-ghost-warp-button").ProvideValue();
			control = button2;
			boxContainer.XamlChildren.Add(control);
			Button button3 = new Button();
			button3.Name = "GhostRolesButton";
			control = button3;
			context.RobustNameScope.Register("GhostRolesButton", control);
			control = button3;
			boxContainer.XamlChildren.Add(control);
			Button button4 = new Button();
			button4.Name = "ReturnToRound";
			control = button4;
			context.RobustNameScope.Register("ReturnToRound", control);
			button4.Text = (string)new LocExtension("ghost-gui-return-to-round-button").ProvideValue();
			control = button4;
			boxContainer.XamlChildren.Add(control);
			control = boxContainer;
			A_1.XamlChildren.Add(control);
			if ((control = (A_1 as Control)) != null)
			{
				context.RobustNameScope.Absorb(control.NameScope);
				control.NameScope = context.RobustNameScope;
			}
			context.RobustNameScope.Complete();
		}

		// Token: 0x0600031F RID: 799 RVA: 0x00013742 File Offset: 0x00011942
		private static void !XamlIlPopulateTrampoline(GhostGui A_0)
		{
			GhostGui.Populate:Content.Client.UserInterface.Systems.Ghost.Widgets.GhostGui.xaml(null, A_0);
		}
	}
}
