using System;
using System.Runtime.CompilerServices;
using CompiledRobustXaml;
using Robust.Client.AutoGenerated;
using Robust.Client.UserInterface;
using Robust.Client.UserInterface.Controls;
using Robust.Shared.Maths;

namespace Content.Client.UserInterface.Controls.FancyTree
{
	// Token: 0x020000E9 RID: 233
	[GenerateTypedNameReferences]
	public sealed class TreeItem : PanelContainer
	{
		// Token: 0x14000032 RID: 50
		// (add) Token: 0x060006B2 RID: 1714 RVA: 0x0002335C File Offset: 0x0002155C
		// (remove) Token: 0x060006B3 RID: 1715 RVA: 0x00023394 File Offset: 0x00021594
		[Nullable(new byte[]
		{
			2,
			1
		})]
		[Nullable(new byte[]
		{
			2,
			1
		})]
		public event Action<TreeItem> OnSelected;

		// Token: 0x14000033 RID: 51
		// (add) Token: 0x060006B4 RID: 1716 RVA: 0x000233CC File Offset: 0x000215CC
		// (remove) Token: 0x060006B5 RID: 1717 RVA: 0x00023404 File Offset: 0x00021604
		[Nullable(new byte[]
		{
			2,
			1
		})]
		[Nullable(new byte[]
		{
			2,
			1
		})]
		public event Action<TreeItem> OnDeselected;

		// Token: 0x1700012D RID: 301
		// (get) Token: 0x060006B6 RID: 1718 RVA: 0x00023439 File Offset: 0x00021639
		// (set) Token: 0x060006B7 RID: 1719 RVA: 0x00023441 File Offset: 0x00021641
		public bool Expanded { get; private set; }

		// Token: 0x060006B8 RID: 1720 RVA: 0x0002344C File Offset: 0x0002164C
		public TreeItem()
		{
			TreeItem.!XamlIlPopulateTrampoline(this);
			this.Button.StyleIdentifier = "tree-button";
			this.Body.OnChildAdded += this.OnItemAdded;
			this.Body.OnChildRemoved += this.OnItemRemoved;
		}

		// Token: 0x060006B9 RID: 1721 RVA: 0x000234A3 File Offset: 0x000216A3
		[NullableContext(1)]
		private void OnItemRemoved(Control obj)
		{
			this.Tree.QueueRowStyleUpdate();
			if (this.Body.ChildCount == 0)
			{
				this.Body.Visible = false;
				this.UpdateIcon();
			}
		}

		// Token: 0x060006BA RID: 1722 RVA: 0x000234D0 File Offset: 0x000216D0
		[NullableContext(1)]
		private void OnItemAdded(Control obj)
		{
			this.Tree.QueueRowStyleUpdate();
			if (this.Body.ChildCount == 1)
			{
				this.Body.Visible = (this.Expanded && this.Body.ChildCount != 0);
				this.UpdateIcon();
			}
		}

		// Token: 0x060006BB RID: 1723 RVA: 0x00023520 File Offset: 0x00021720
		public void SetExpanded(bool value)
		{
			if (this.Expanded == value)
			{
				return;
			}
			this.Expanded = value;
			this.Body.Visible = (this.Expanded && this.Body.ChildCount > 0);
			this.UpdateIcon();
			this.Tree.QueueRowStyleUpdate();
		}

		// Token: 0x060006BC RID: 1724 RVA: 0x00023574 File Offset: 0x00021774
		public void SetSelected(bool value)
		{
			if (value)
			{
				Action<TreeItem> onSelected = this.OnSelected;
				if (onSelected != null)
				{
					onSelected(this);
				}
				this.Button.AddStyleClass("selected");
				return;
			}
			Action<TreeItem> onDeselected = this.OnDeselected;
			if (onDeselected != null)
			{
				onDeselected(this);
			}
			this.Button.RemoveStyleClass("selected");
		}

		// Token: 0x060006BD RID: 1725 RVA: 0x000235CC File Offset: 0x000217CC
		public void UpdateIcon()
		{
			if (this.Body.ChildCount == 0)
			{
				this.Icon.Texture = this.Tree.IconNoChildren;
			}
			else
			{
				this.Icon.Texture = (this.Expanded ? this.Tree.IconExpanded : this.Tree.IconCollapsed);
			}
			this.Icon.Modulate = this.Tree.IconColor;
			this.Icon.Visible = (this.Icon.Texture != null || !this.Tree.HideEmptyIcon);
		}

		// Token: 0x1700012E RID: 302
		// (get) Token: 0x060006BE RID: 1726 RVA: 0x00023668 File Offset: 0x00021868
		public ContainerButton Button
		{
			get
			{
				return base.FindControl<ContainerButton>("Button");
			}
		}

		// Token: 0x1700012F RID: 303
		// (get) Token: 0x060006BF RID: 1727 RVA: 0x00023675 File Offset: 0x00021875
		public Control Padding
		{
			get
			{
				return base.FindControl<Control>("Padding");
			}
		}

		// Token: 0x17000130 RID: 304
		// (get) Token: 0x060006C0 RID: 1728 RVA: 0x00023682 File Offset: 0x00021882
		public TextureRect Icon
		{
			get
			{
				return base.FindControl<TextureRect>("Icon");
			}
		}

		// Token: 0x17000131 RID: 305
		// (get) Token: 0x060006C1 RID: 1729 RVA: 0x0000F55B File Offset: 0x0000D75B
		public Label Label
		{
			get
			{
				return base.FindControl<Label>("Label");
			}
		}

		// Token: 0x17000132 RID: 306
		// (get) Token: 0x060006C2 RID: 1730 RVA: 0x0002321F File Offset: 0x0002141F
		public BoxContainer Body
		{
			get
			{
				return base.FindControl<BoxContainer>("Body");
			}
		}

		// Token: 0x060006C3 RID: 1731 RVA: 0x00023690 File Offset: 0x00021890
		static void xaml(IServiceProvider A_0, TreeItem A_1)
		{
			XamlIlContext.Context<TreeItem> context = new XamlIlContext.Context<TreeItem>(A_0, null, "resm:Content.Client.UserInterface.Controls.FancyTree.TreeItem.xaml?assembly=Content.Client");
			context.RootObject = A_1;
			context.IntermediateRoot = A_1;
			BoxContainer boxContainer = new BoxContainer();
			boxContainer.Orientation = 1;
			ContainerButton containerButton = new ContainerButton();
			containerButton.Name = "Button";
			Control control = containerButton;
			context.RobustNameScope.Register("Button", control);
			containerButton.Access = new AccessLevel?(0);
			BoxContainer boxContainer2 = new BoxContainer();
			boxContainer2.Orientation = 0;
			Control control2 = new Control();
			control2.Name = "Padding";
			control = control2;
			context.RobustNameScope.Register("Padding", control);
			control2.Access = new AccessLevel?(0);
			control = control2;
			boxContainer2.XamlChildren.Add(control);
			TextureRect textureRect = new TextureRect();
			textureRect.Name = "Icon";
			control = textureRect;
			context.RobustNameScope.Register("Icon", control);
			textureRect.Access = new AccessLevel?(0);
			textureRect.Stretch = 4;
			textureRect.Visible = false;
			control = textureRect;
			boxContainer2.XamlChildren.Add(control);
			Label label = new Label();
			label.Margin = new Thickness(2f, 0f, 2f, 0f);
			label.Name = "Label";
			control = label;
			context.RobustNameScope.Register("Label", control);
			label.Access = new AccessLevel?(0);
			control = label;
			boxContainer2.XamlChildren.Add(control);
			control = boxContainer2;
			containerButton.XamlChildren.Add(control);
			control = containerButton;
			boxContainer.XamlChildren.Add(control);
			BoxContainer boxContainer3 = new BoxContainer();
			boxContainer3.Name = "Body";
			control = boxContainer3;
			context.RobustNameScope.Register("Body", control);
			boxContainer3.Access = new AccessLevel?(0);
			boxContainer3.Orientation = 1;
			boxContainer3.Visible = false;
			control = boxContainer3;
			boxContainer.XamlChildren.Add(control);
			control = boxContainer;
			A_1.XamlChildren.Add(control);
			control = new TreeLine();
			A_1.XamlChildren.Add(control);
			if ((control = (A_1 as Control)) != null)
			{
				context.RobustNameScope.Absorb(control.NameScope);
				control.NameScope = context.RobustNameScope;
			}
			context.RobustNameScope.Complete();
		}

		// Token: 0x060006C4 RID: 1732 RVA: 0x0002393E File Offset: 0x00021B3E
		private static void !XamlIlPopulateTrampoline(TreeItem A_0)
		{
			TreeItem.Populate:Content.Client.UserInterface.Controls.FancyTree.TreeItem.xaml(null, A_0);
		}

		// Token: 0x04000311 RID: 785
		[Nullable(1)]
		public const string StyleClassSelected = "selected";

		// Token: 0x04000312 RID: 786
		[Nullable(1)]
		public const string StyleIdentifierTreeButton = "tree-button";

		// Token: 0x04000313 RID: 787
		[Nullable(1)]
		public const string StyleClassEvenRow = "even-row";

		// Token: 0x04000314 RID: 788
		[Nullable(1)]
		public const string StyleClassOddRow = "odd-row";

		// Token: 0x04000315 RID: 789
		[Nullable(2)]
		public object Metadata;

		// Token: 0x04000316 RID: 790
		public int Index;

		// Token: 0x04000317 RID: 791
		[Nullable(1)]
		public FancyTree Tree;
	}
}
