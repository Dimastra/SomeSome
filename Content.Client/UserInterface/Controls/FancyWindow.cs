using System;
using System.Runtime.CompilerServices;
using CompiledRobustXaml;
using Robust.Client.AutoGenerated;
using Robust.Client.UserInterface;
using Robust.Client.UserInterface.Controls;
using Robust.Client.UserInterface.CustomControls;
using Robust.Shared.Analyzers;
using Robust.Shared.Maths;

namespace Content.Client.UserInterface.Controls
{
	// Token: 0x020000D5 RID: 213
	[GenerateTypedNameReferences]
	[Virtual]
	public class FancyWindow : BaseWindow
	{
		// Token: 0x060005F4 RID: 1524 RVA: 0x000206C4 File Offset: 0x0001E8C4
		public FancyWindow()
		{
			FancyWindow.!XamlIlPopulateTrampoline(this);
			this.CloseButton.OnPressed += delegate(BaseButton.ButtonEventArgs _)
			{
				this.Close();
			};
			this.XamlChildren = this.ContentsContainer.Children;
		}

		// Token: 0x170000F9 RID: 249
		// (get) Token: 0x060005F5 RID: 1525 RVA: 0x000206FA File Offset: 0x0001E8FA
		// (set) Token: 0x060005F6 RID: 1526 RVA: 0x00020707 File Offset: 0x0001E907
		[Nullable(2)]
		public string Title
		{
			[NullableContext(2)]
			get
			{
				return this.WindowTitle.Text;
			}
			[NullableContext(2)]
			set
			{
				this.WindowTitle.Text = value;
			}
		}

		// Token: 0x060005F7 RID: 1527 RVA: 0x00020718 File Offset: 0x0001E918
		protected override BaseWindow.DragMode GetDragModeFor(Vector2 relativeMousePos)
		{
			BaseWindow.DragMode dragMode = 1;
			if (base.Resizable)
			{
				if (relativeMousePos.Y < 7f)
				{
					dragMode = 2;
				}
				else if (relativeMousePos.Y > base.Size.Y - 7f)
				{
					dragMode = 4;
				}
				if (relativeMousePos.X < 7f)
				{
					dragMode |= 8;
				}
				else if (relativeMousePos.X > base.Size.X - 7f)
				{
					dragMode |= 16;
				}
			}
			return dragMode;
		}

		// Token: 0x170000FA RID: 250
		// (get) Token: 0x060005F8 RID: 1528 RVA: 0x0002078D File Offset: 0x0001E98D
		protected Label WindowTitle
		{
			get
			{
				return base.FindControl<Label>("WindowTitle");
			}
		}

		// Token: 0x170000FB RID: 251
		// (get) Token: 0x060005F9 RID: 1529 RVA: 0x0000AD39 File Offset: 0x00008F39
		protected TextureButton CloseButton
		{
			get
			{
				return base.FindControl<TextureButton>("CloseButton");
			}
		}

		// Token: 0x170000FC RID: 252
		// (get) Token: 0x060005FA RID: 1530 RVA: 0x0002079A File Offset: 0x0001E99A
		public Control ContentsContainer
		{
			get
			{
				return base.FindControl<Control>("ContentsContainer");
			}
		}

		// Token: 0x060005FC RID: 1532 RVA: 0x000207A8 File Offset: 0x0001E9A8
		static void xaml(IServiceProvider A_0, FancyWindow A_1)
		{
			XamlIlContext.Context<FancyWindow> context = new XamlIlContext.Context<FancyWindow>(A_0, null, "resm:Content.Client.UserInterface.Controls.FancyWindow.xaml?assembly=Content.Client");
			context.RootObject = A_1;
			context.IntermediateRoot = A_1;
			A_1.MouseFilter = 0;
			A_1.MinWidth = 200f;
			A_1.MinHeight = 150f;
			PanelContainer panelContainer = new PanelContainer();
			string item = "AngleRect";
			panelContainer.StyleClasses.Add(item);
			Control control = panelContainer;
			A_1.XamlChildren.Add(control);
			BoxContainer boxContainer = new BoxContainer();
			boxContainer.Orientation = 1;
			Control control2 = new Control();
			PanelContainer panelContainer2 = new PanelContainer();
			item = "WindowHeadingBackground";
			panelContainer2.StyleClasses.Add(item);
			control = panelContainer2;
			control2.XamlChildren.Add(control);
			BoxContainer boxContainer2 = new BoxContainer();
			boxContainer2.Margin = new Thickness(4f, 2f, 8f, 0f);
			boxContainer2.Orientation = 0;
			Label label = new Label();
			label.Name = "WindowTitle";
			control = label;
			context.RobustNameScope.Register("WindowTitle", control);
			label.HorizontalExpand = true;
			label.VAlign = 1;
			item = "FancyWindowTitle";
			label.StyleClasses.Add(item);
			control = label;
			boxContainer2.XamlChildren.Add(control);
			TextureButton textureButton = new TextureButton();
			textureButton.Name = "CloseButton";
			control = textureButton;
			context.RobustNameScope.Register("CloseButton", control);
			item = "windowCloseButton";
			textureButton.StyleClasses.Add(item);
			textureButton.VerticalAlignment = 2;
			control = textureButton;
			boxContainer2.XamlChildren.Add(control);
			control = boxContainer2;
			control2.XamlChildren.Add(control);
			control = control2;
			boxContainer.XamlChildren.Add(control);
			PanelContainer panelContainer3 = new PanelContainer();
			item = "LowDivider";
			panelContainer3.StyleClasses.Add(item);
			control = panelContainer3;
			boxContainer.XamlChildren.Add(control);
			Control control3 = new Control();
			control3.Access = new AccessLevel?(0);
			control3.Name = "ContentsContainer";
			control = control3;
			context.RobustNameScope.Register("ContentsContainer", control);
			control3.Margin = new Thickness(0f, 2f, 0f, 2f);
			control3.RectClipContent = true;
			control3.VerticalExpand = true;
			control = control3;
			boxContainer.XamlChildren.Add(control);
			control = boxContainer;
			A_1.XamlChildren.Add(control);
			if ((control = (A_1 as Control)) != null)
			{
				context.RobustNameScope.Absorb(control.NameScope);
				control.NameScope = context.RobustNameScope;
			}
			context.RobustNameScope.Complete();
		}

		// Token: 0x060005FD RID: 1533 RVA: 0x00020AA1 File Offset: 0x0001ECA1
		private static void !XamlIlPopulateTrampoline(FancyWindow A_0)
		{
			FancyWindow.Populate:Content.Client.UserInterface.Controls.FancyWindow.xaml(null, A_0);
		}

		// Token: 0x040002AD RID: 685
		private const int DRAG_MARGIN_SIZE = 7;
	}
}
