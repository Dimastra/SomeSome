using System;
using CompiledRobustXaml;
using Content.Client.UserInterface.Controls;
using Content.Client.UserInterface.Systems.Actions.Widgets;
using Content.Client.UserInterface.Systems.Alerts.Widgets;
using Content.Client.UserInterface.Systems.Chat.Widgets;
using Content.Client.UserInterface.Systems.Ghost.Widgets;
using Content.Client.UserInterface.Systems.Hotbar.Widgets;
using Content.Client.UserInterface.Systems.MenuBar.Widgets;
using Robust.Client.AutoGenerated;
using Robust.Client.Graphics;
using Robust.Client.UserInterface;
using Robust.Client.UserInterface.Controls;
using Robust.Shared.Maths;

namespace Content.Client.UserInterface.Screens
{
	// Token: 0x020000D0 RID: 208
	[GenerateTypedNameReferences]
	public sealed class SeparatedChatGameScreen : UIScreen
	{
		// Token: 0x060005D7 RID: 1495 RVA: 0x0001FF94 File Offset: 0x0001E194
		public SeparatedChatGameScreen()
		{
			SeparatedChatGameScreen.!XamlIlPopulateTrampoline(this);
			base.AutoscaleMaxResolution = new Vector2i(1080, 770);
			LayoutContainer.SetAnchorPreset(this.ScreenContainer, 15, false);
			LayoutContainer.SetAnchorPreset(this.ViewportContainer, 15, false);
			LayoutContainer.SetAnchorPreset(this.MainViewport, 15, false);
			LayoutContainer.SetAnchorAndMarginPreset(this.Actions, 2, 0, 10);
			LayoutContainer.SetAnchorAndMarginPreset(this.Ghost, 12, 0, 80);
			LayoutContainer.SetAnchorAndMarginPreset(this.Hotbar, 12, 0, 5);
			LayoutContainer.SetAnchorAndMarginPreset(this.Alerts, 6, 0, 10);
		}

		// Token: 0x170000EE RID: 238
		// (get) Token: 0x060005D8 RID: 1496 RVA: 0x00020029 File Offset: 0x0001E229
		private SeparatedChatGameScreen SeparatedChatHud
		{
			get
			{
				return base.FindControl<SeparatedChatGameScreen>("SeparatedChatHud");
			}
		}

		// Token: 0x170000EF RID: 239
		// (get) Token: 0x060005D9 RID: 1497 RVA: 0x00020036 File Offset: 0x0001E236
		private SplitContainer ScreenContainer
		{
			get
			{
				return base.FindControl<SplitContainer>("ScreenContainer");
			}
		}

		// Token: 0x170000F0 RID: 240
		// (get) Token: 0x060005DA RID: 1498 RVA: 0x0001FBF3 File Offset: 0x0001DDF3
		private LayoutContainer ViewportContainer
		{
			get
			{
				return base.FindControl<LayoutContainer>("ViewportContainer");
			}
		}

		// Token: 0x170000F1 RID: 241
		// (get) Token: 0x060005DB RID: 1499 RVA: 0x0001FC00 File Offset: 0x0001DE00
		private MainViewport MainViewport
		{
			get
			{
				return base.FindControl<MainViewport>("MainViewport");
			}
		}

		// Token: 0x170000F2 RID: 242
		// (get) Token: 0x060005DC RID: 1500 RVA: 0x0001FC1A File Offset: 0x0001DE1A
		private GhostGui Ghost
		{
			get
			{
				return base.FindControl<GhostGui>("Ghost");
			}
		}

		// Token: 0x170000F3 RID: 243
		// (get) Token: 0x060005DD RID: 1501 RVA: 0x0001FC27 File Offset: 0x0001DE27
		private HotbarGui Hotbar
		{
			get
			{
				return base.FindControl<HotbarGui>("Hotbar");
			}
		}

		// Token: 0x170000F4 RID: 244
		// (get) Token: 0x060005DE RID: 1502 RVA: 0x0001FC34 File Offset: 0x0001DE34
		private ActionsBar Actions
		{
			get
			{
				return base.FindControl<ActionsBar>("Actions");
			}
		}

		// Token: 0x170000F5 RID: 245
		// (get) Token: 0x060005DF RID: 1503 RVA: 0x0001FC4E File Offset: 0x0001DE4E
		private AlertsUI Alerts
		{
			get
			{
				return base.FindControl<AlertsUI>("Alerts");
			}
		}

		// Token: 0x170000F6 RID: 246
		// (get) Token: 0x060005E0 RID: 1504 RVA: 0x0001FC0D File Offset: 0x0001DE0D
		private GameTopMenuBar TopBar
		{
			get
			{
				return base.FindControl<GameTopMenuBar>("TopBar");
			}
		}

		// Token: 0x170000F7 RID: 247
		// (get) Token: 0x060005E1 RID: 1505 RVA: 0x00020043 File Offset: 0x0001E243
		private ChatBox Chat
		{
			get
			{
				return base.FindControl<ChatBox>("Chat");
			}
		}

		// Token: 0x060005E2 RID: 1506 RVA: 0x00020050 File Offset: 0x0001E250
		static void xaml(IServiceProvider A_0, SeparatedChatGameScreen A_1)
		{
			XamlIlContext.Context<SeparatedChatGameScreen> context = new XamlIlContext.Context<SeparatedChatGameScreen>(A_0, null, "resm:Content.Client.UserInterface.Screens.SeparatedChatGameScreen.xaml?assembly=Content.Client");
			context.RootObject = A_1;
			context.IntermediateRoot = A_1;
			A_1.Name = "SeparatedChatHud";
			context.RobustNameScope.Register("SeparatedChatHud", A_1);
			A_1.VerticalExpand = false;
			A_1.VerticalAlignment = 3;
			A_1.HorizontalAlignment = 2;
			SplitContainer splitContainer = new SplitContainer();
			splitContainer.Name = "ScreenContainer";
			Control control = splitContainer;
			context.RobustNameScope.Register("ScreenContainer", control);
			splitContainer.HorizontalExpand = true;
			splitContainer.VerticalExpand = true;
			LayoutContainer layoutContainer = new LayoutContainer();
			layoutContainer.Name = "ViewportContainer";
			control = layoutContainer;
			context.RobustNameScope.Register("ViewportContainer", control);
			layoutContainer.HorizontalExpand = true;
			layoutContainer.VerticalExpand = true;
			MainViewport mainViewport = new MainViewport();
			mainViewport.Name = "MainViewport";
			control = mainViewport;
			context.RobustNameScope.Register("MainViewport", control);
			control = mainViewport;
			layoutContainer.XamlChildren.Add(control);
			GhostGui ghostGui = new GhostGui();
			ghostGui.Name = "Ghost";
			control = ghostGui;
			context.RobustNameScope.Register("Ghost", control);
			ghostGui.Access = new AccessLevel?(1);
			control = ghostGui;
			layoutContainer.XamlChildren.Add(control);
			HotbarGui hotbarGui = new HotbarGui();
			hotbarGui.Name = "Hotbar";
			control = hotbarGui;
			context.RobustNameScope.Register("Hotbar", control);
			hotbarGui.Access = new AccessLevel?(1);
			control = hotbarGui;
			layoutContainer.XamlChildren.Add(control);
			ActionsBar actionsBar = new ActionsBar();
			actionsBar.Name = "Actions";
			control = actionsBar;
			context.RobustNameScope.Register("Actions", control);
			actionsBar.Access = new AccessLevel?(1);
			control = actionsBar;
			layoutContainer.XamlChildren.Add(control);
			AlertsUI alertsUI = new AlertsUI();
			alertsUI.Name = "Alerts";
			control = alertsUI;
			context.RobustNameScope.Register("Alerts", control);
			alertsUI.Access = new AccessLevel?(1);
			control = alertsUI;
			layoutContainer.XamlChildren.Add(control);
			control = layoutContainer;
			splitContainer.XamlChildren.Add(control);
			PanelContainer panelContainer = new PanelContainer();
			panelContainer.HorizontalExpand = true;
			panelContainer.PanelOverride = new StyleBoxFlat
			{
				BackgroundColor = Color.FromXaml("#2b2c2b")
			};
			BoxContainer boxContainer = new BoxContainer();
			boxContainer.Orientation = 1;
			boxContainer.HorizontalExpand = true;
			boxContainer.MinWidth = 300f;
			boxContainer.SeparationOverride = new int?(10);
			boxContainer.Margin = new Thickness(10f, 10f, 10f, 10f);
			GameTopMenuBar gameTopMenuBar = new GameTopMenuBar();
			gameTopMenuBar.Name = "TopBar";
			control = gameTopMenuBar;
			context.RobustNameScope.Register("TopBar", control);
			gameTopMenuBar.HorizontalExpand = true;
			gameTopMenuBar.Access = new AccessLevel?(1);
			control = gameTopMenuBar;
			boxContainer.XamlChildren.Add(control);
			ChatBox chatBox = new ChatBox();
			chatBox.VerticalExpand = true;
			chatBox.HorizontalExpand = true;
			chatBox.Name = "Chat";
			control = chatBox;
			context.RobustNameScope.Register("Chat", control);
			chatBox.Access = new AccessLevel?(1);
			control = chatBox;
			boxContainer.XamlChildren.Add(control);
			control = boxContainer;
			panelContainer.XamlChildren.Add(control);
			control = panelContainer;
			splitContainer.XamlChildren.Add(control);
			control = splitContainer;
			A_1.XamlChildren.Add(control);
			if ((control = (A_1 as Control)) != null)
			{
				context.RobustNameScope.Absorb(control.NameScope);
				control.NameScope = context.RobustNameScope;
			}
			context.RobustNameScope.Complete();
		}

		// Token: 0x060005E3 RID: 1507 RVA: 0x0002049A File Offset: 0x0001E69A
		private static void !XamlIlPopulateTrampoline(SeparatedChatGameScreen A_0)
		{
			SeparatedChatGameScreen.Populate:Content.Client.UserInterface.Screens.SeparatedChatGameScreen.xaml(null, A_0);
		}
	}
}
