using System;
using System.Runtime.CompilerServices;
using CompiledRobustXaml;
using Content.Client.UserInterface.Controls;
using Content.Shared.CCVar;
using Robust.Client.AutoGenerated;
using Robust.Client.UserInterface;
using Robust.Client.UserInterface.Controls;
using Robust.Shared.Configuration;
using Robust.Shared.IoC;
using Robust.Shared.Maths;

namespace Content.Client.Options.UI.Tabs
{
	// Token: 0x020001F9 RID: 505
	[GenerateTypedNameReferences]
	public sealed class AdminSettingsTab : Control
	{
		// Token: 0x06000CE5 RID: 3301 RVA: 0x0004B97B File Offset: 0x00049B7B
		public AdminSettingsTab()
		{
			AdminSettingsTab.!XamlIlPopulateTrampoline(this);
			IoCManager.InjectDependencies<AdminSettingsTab>(this);
			this.LoadData();
			this.AhelpSoundVolume.OnValueChanged += this.OnAhelpVolumeChanged;
		}

		// Token: 0x06000CE6 RID: 3302 RVA: 0x0004B9AD File Offset: 0x00049BAD
		protected override void Dispose(bool disposing)
		{
			this.AhelpSoundVolume.OnValueChanged -= this.OnAhelpVolumeChanged;
			base.Dispose(disposing);
		}

		// Token: 0x06000CE7 RID: 3303 RVA: 0x0004B9D0 File Offset: 0x00049BD0
		private void LoadData()
		{
			float cvar = this._cfg.GetCVar<float>(CCVars.BwoinkVolume);
			this.AhelpSoundVolume.Value = cvar;
			this.AhelpSoundVolumeLabel.Text = ((int)cvar).ToString();
		}

		// Token: 0x06000CE8 RID: 3304 RVA: 0x0004BA10 File Offset: 0x00049C10
		[NullableContext(1)]
		private void OnAhelpVolumeChanged(Range newValue)
		{
			this._cfg.SetCVar<float>(CCVars.BwoinkVolume, this.LV100ToDB(newValue.Value), false);
			this.AhelpSoundVolumeLabel.Text = ((int)newValue.Value).ToString();
		}

		// Token: 0x06000CE9 RID: 3305 RVA: 0x0004BA54 File Offset: 0x00049C54
		private float LV100ToDB(float lv100)
		{
			return MathF.Max(-10000000f, MathF.Log(lv100 / 100f, 10f) * 10f);
		}

		// Token: 0x1700029C RID: 668
		// (get) Token: 0x06000CEA RID: 3306 RVA: 0x0004BA77 File Offset: 0x00049C77
		private Slider AhelpSoundVolume
		{
			get
			{
				return base.FindControl<Slider>("AhelpSoundVolume");
			}
		}

		// Token: 0x1700029D RID: 669
		// (get) Token: 0x06000CEB RID: 3307 RVA: 0x0004BA84 File Offset: 0x00049C84
		private Label AhelpSoundVolumeLabel
		{
			get
			{
				return base.FindControl<Label>("AhelpSoundVolumeLabel");
			}
		}

		// Token: 0x1700029E RID: 670
		// (get) Token: 0x06000CEC RID: 3308 RVA: 0x0004BA91 File Offset: 0x00049C91
		private Button ResetButton
		{
			get
			{
				return base.FindControl<Button>("ResetButton");
			}
		}

		// Token: 0x1700029F RID: 671
		// (get) Token: 0x06000CED RID: 3309 RVA: 0x0004BA9E File Offset: 0x00049C9E
		private Button DefaultButton
		{
			get
			{
				return base.FindControl<Button>("DefaultButton");
			}
		}

		// Token: 0x170002A0 RID: 672
		// (get) Token: 0x06000CEE RID: 3310 RVA: 0x0004BAAB File Offset: 0x00049CAB
		private Button ApplyButton
		{
			get
			{
				return base.FindControl<Button>("ApplyButton");
			}
		}

		// Token: 0x06000CEF RID: 3311 RVA: 0x0004BAB8 File Offset: 0x00049CB8
		static void xaml(IServiceProvider A_0, Control A_1)
		{
			XamlIlContext.Context<Control> context = new XamlIlContext.Context<Control>(A_0, null, "resm:Content.Client.Options.UI.Tabs.AdminSettingsTab.xaml?assembly=Content.Client");
			context.RootObject = A_1;
			context.IntermediateRoot = A_1;
			BoxContainer boxContainer = new BoxContainer();
			boxContainer.Orientation = 1;
			BoxContainer boxContainer2 = new BoxContainer();
			boxContainer2.Orientation = 1;
			boxContainer2.Margin = new Thickness(5f, 0f, 0f, 0f);
			boxContainer2.VerticalExpand = true;
			BoxContainer boxContainer3 = new BoxContainer();
			boxContainer3.Orientation = 0;
			boxContainer3.Margin = new Thickness(0f, 3f, 0f, 0f);
			Control control = new Label
			{
				Text = "Громкость звука ахелпа",
				HorizontalExpand = true
			};
			boxContainer3.XamlChildren.Add(control);
			control = new Control
			{
				MinSize = new Vector2(8f, 0f)
			};
			boxContainer3.XamlChildren.Add(control);
			Slider slider = new Slider();
			slider.Name = "AhelpSoundVolume";
			control = slider;
			context.RobustNameScope.Register("AhelpSoundVolume", control);
			slider.MinValue = 0f;
			slider.MaxValue = 100f;
			slider.HorizontalExpand = true;
			slider.MinSize = new Vector2(80f, 0f);
			slider.Rounded = true;
			control = slider;
			boxContainer3.XamlChildren.Add(control);
			control = new Control
			{
				MinSize = new Vector2(8f, 0f)
			};
			boxContainer3.XamlChildren.Add(control);
			Label label = new Label();
			label.Name = "AhelpSoundVolumeLabel";
			control = label;
			context.RobustNameScope.Register("AhelpSoundVolumeLabel", control);
			label.MinSize = new Vector2(48f, 0f);
			control = label;
			boxContainer3.XamlChildren.Add(control);
			control = boxContainer3;
			boxContainer2.XamlChildren.Add(control);
			control = boxContainer2;
			boxContainer.XamlChildren.Add(control);
			BoxContainer boxContainer4 = new BoxContainer();
			boxContainer4.Orientation = 1;
			StripeBack stripeBack = new StripeBack();
			stripeBack.HasBottomEdge = false;
			stripeBack.HasMargins = false;
			BoxContainer boxContainer5 = new BoxContainer();
			boxContainer5.Orientation = 0;
			boxContainer5.Align = 2;
			boxContainer5.HorizontalExpand = true;
			boxContainer5.VerticalExpand = true;
			Button button = new Button();
			button.Name = "ResetButton";
			control = button;
			context.RobustNameScope.Register("ResetButton", control);
			button.Text = (string)new LocExtension("ui-options-reset-all").ProvideValue();
			string item = "Caution";
			button.StyleClasses.Add(item);
			button.HorizontalExpand = true;
			button.HorizontalAlignment = 3;
			control = button;
			boxContainer5.XamlChildren.Add(control);
			Button button2 = new Button();
			button2.Name = "DefaultButton";
			control = button2;
			context.RobustNameScope.Register("DefaultButton", control);
			button2.Text = (string)new LocExtension("ui-options-default").ProvideValue();
			button2.TextAlign = 1;
			button2.HorizontalAlignment = 3;
			control = button2;
			boxContainer5.XamlChildren.Add(control);
			control = new Control
			{
				MinSize = new Vector2(2f, 0f)
			};
			boxContainer5.XamlChildren.Add(control);
			Button button3 = new Button();
			button3.Name = "ApplyButton";
			control = button3;
			context.RobustNameScope.Register("ApplyButton", control);
			button3.Text = (string)new LocExtension("ui-options-apply").ProvideValue();
			button3.TextAlign = 1;
			button3.HorizontalAlignment = 3;
			control = button3;
			boxContainer5.XamlChildren.Add(control);
			control = boxContainer5;
			stripeBack.XamlChildren.Add(control);
			control = stripeBack;
			boxContainer4.XamlChildren.Add(control);
			control = boxContainer4;
			boxContainer.XamlChildren.Add(control);
			control = boxContainer;
			A_1.XamlChildren.Add(control);
			if ((control = (A_1 as Control)) != null)
			{
				context.RobustNameScope.Absorb(control.NameScope);
				control.NameScope = context.RobustNameScope;
			}
			context.RobustNameScope.Complete();
		}

		// Token: 0x06000CF0 RID: 3312 RVA: 0x0004BF6B File Offset: 0x0004A16B
		private static void !XamlIlPopulateTrampoline(AdminSettingsTab A_0)
		{
			AdminSettingsTab.Populate:Content.Client.Options.UI.Tabs.AdminSettingsTab.xaml(null, A_0);
		}

		// Token: 0x04000699 RID: 1689
		[Nullable(1)]
		[Dependency]
		private readonly IConfigurationManager _cfg;
	}
}
