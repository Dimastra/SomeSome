using System;
using System.Collections.Generic;
using System.Runtime.CompilerServices;
using CompiledRobustXaml;
using Robust.Client.AutoGenerated;
using Robust.Client.UserInterface;
using Robust.Client.UserInterface.Controls;
using Robust.Client.UserInterface.CustomControls;
using Robust.Shared.Maths;

namespace Content.Client.AirlockPainter.UI
{
	// Token: 0x02000483 RID: 1155
	[GenerateTypedNameReferences]
	public sealed class AirlockPainterWindow : DefaultWindow
	{
		// Token: 0x06001C75 RID: 7285 RVA: 0x000A4F40 File Offset: 0x000A3140
		public AirlockPainterWindow()
		{
			AirlockPainterWindow.!XamlIlPopulateTrampoline(this);
		}

		// Token: 0x06001C76 RID: 7286 RVA: 0x000A4F5C File Offset: 0x000A315C
		[NullableContext(1)]
		public void Populate(List<AirlockPainterEntry> entries, int selected)
		{
			if (!this.CurrentEntries.Equals(entries))
			{
				this.CurrentEntries = entries;
				this.SpriteList.Clear();
				foreach (AirlockPainterEntry airlockPainterEntry in entries)
				{
					this.SpriteList.AddItem(airlockPainterEntry.Name, airlockPainterEntry.Icon, true);
				}
			}
			this.SpriteList.OnItemSelected -= this.OnSpritePicked;
			this.SpriteList.get_IndexItem(selected).Selected = true;
			this.SpriteList.OnItemSelected += this.OnSpritePicked;
		}

		// Token: 0x170005E9 RID: 1513
		// (get) Token: 0x06001C77 RID: 7287 RVA: 0x000A5010 File Offset: 0x000A3210
		private Label SelectedSpriteLabel
		{
			get
			{
				return base.FindControl<Label>("SelectedSpriteLabel");
			}
		}

		// Token: 0x170005EA RID: 1514
		// (get) Token: 0x06001C78 RID: 7288 RVA: 0x000A501D File Offset: 0x000A321D
		private ItemList SpriteList
		{
			get
			{
				return base.FindControl<ItemList>("SpriteList");
			}
		}

		// Token: 0x06001C79 RID: 7289 RVA: 0x000A502C File Offset: 0x000A322C
		static void xaml(IServiceProvider A_0, DefaultWindow A_1)
		{
			XamlIlContext.Context<DefaultWindow> context = new XamlIlContext.Context<DefaultWindow>(A_0, null, "resm:Content.Client.AirlockPainter.UI.AirlockPainterWindow.xaml?assembly=Content.Client");
			context.RootObject = A_1;
			context.IntermediateRoot = A_1;
			A_1.MinSize = new Vector2(300f, 300f);
			A_1.SetSize = new Vector2(300f, 500f);
			A_1.Title = (string)new LocExtension("airlock-painter-window-title").ProvideValue();
			BoxContainer boxContainer = new BoxContainer();
			boxContainer.Orientation = 1;
			boxContainer.SeparationOverride = new int?(4);
			boxContainer.MinWidth = 150f;
			Label label = new Label();
			label.Name = "SelectedSpriteLabel";
			Control control = label;
			context.RobustNameScope.Register("SelectedSpriteLabel", control);
			label.Text = (string)new LocExtension("airlock-painter-selected-style").ProvideValue();
			control = label;
			boxContainer.XamlChildren.Add(control);
			ItemList itemList = new ItemList();
			itemList.Name = "SpriteList";
			control = itemList;
			context.RobustNameScope.Register("SpriteList", control);
			itemList.SizeFlagsStretchRatio = 8f;
			itemList.VerticalExpand = true;
			control = itemList;
			boxContainer.XamlChildren.Add(control);
			control = boxContainer;
			A_1.XamlChildren.Add(control);
			if ((control = (A_1 as Control)) != null)
			{
				context.RobustNameScope.Absorb(control.NameScope);
				control.NameScope = context.RobustNameScope;
			}
			context.RobustNameScope.Complete();
		}

		// Token: 0x06001C7A RID: 7290 RVA: 0x000A51D8 File Offset: 0x000A33D8
		private static void !XamlIlPopulateTrampoline(AirlockPainterWindow A_0)
		{
			AirlockPainterWindow.Populate:Content.Client.AirlockPainter.UI.AirlockPainterWindow.xaml(null, A_0);
		}

		// Token: 0x04000E3E RID: 3646
		[Nullable(new byte[]
		{
			2,
			1
		})]
		public Action<ItemList.ItemListSelectedEventArgs> OnSpritePicked;

		// Token: 0x04000E3F RID: 3647
		[Nullable(1)]
		private List<AirlockPainterEntry> CurrentEntries = new List<AirlockPainterEntry>();
	}
}
