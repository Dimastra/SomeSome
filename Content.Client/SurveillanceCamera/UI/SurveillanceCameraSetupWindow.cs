using System;
using System.Collections.Generic;
using System.Runtime.CompilerServices;
using CompiledRobustXaml;
using Content.Shared.DeviceNetwork;
using Robust.Client.AutoGenerated;
using Robust.Client.UserInterface;
using Robust.Client.UserInterface.Controls;
using Robust.Client.UserInterface.CustomControls;
using Robust.Shared.IoC;
using Robust.Shared.Localization;
using Robust.Shared.Prototypes;

namespace Content.Client.SurveillanceCamera.UI
{
	// Token: 0x0200010D RID: 269
	[GenerateTypedNameReferences]
	public sealed class SurveillanceCameraSetupWindow : DefaultWindow
	{
		// Token: 0x06000787 RID: 1927 RVA: 0x000276F0 File Offset: 0x000258F0
		public SurveillanceCameraSetupWindow()
		{
			SurveillanceCameraSetupWindow.!XamlIlPopulateTrampoline(this);
			IoCManager.InjectDependencies<SurveillanceCameraSetupWindow>(this);
			this.NetworkConfirm.OnPressed += delegate(BaseButton.ButtonEventArgs _)
			{
				this.OnNetworkConfirm(this.NetworkSelector.SelectedId);
			};
			this.NameConfirm.OnPressed += delegate(BaseButton.ButtonEventArgs _)
			{
				this.OnNameConfirm(this.DeviceName.Text);
			};
			this.NetworkSelector.OnItemSelected += delegate(OptionButton.ItemSelectedEventArgs args)
			{
				this.NetworkSelector.SelectId(args.Id);
			};
		}

		// Token: 0x06000788 RID: 1928 RVA: 0x00027755 File Offset: 0x00025955
		public void HideNameSelector()
		{
			this.NamingSection.Visible = false;
		}

		// Token: 0x06000789 RID: 1929 RVA: 0x00027764 File Offset: 0x00025964
		[NullableContext(1)]
		public void UpdateState(string name, bool disableNaming, bool disableNetworkSelector)
		{
			this.DeviceName.Text = name;
			this.DeviceName.Editable = !disableNaming;
			this.NameConfirm.Disabled = disableNaming;
			this.NetworkSelector.Disabled = disableNetworkSelector;
			this.NetworkConfirm.Disabled = disableNetworkSelector;
		}

		// Token: 0x0600078A RID: 1930 RVA: 0x000277B0 File Offset: 0x000259B0
		[NullableContext(1)]
		public void LoadAvailableNetworks(uint currentNetwork, List<string> networks)
		{
			this.NetworkSelector.Clear();
			if (networks.Count == 0)
			{
				this.NetworkSection.Visible = false;
				return;
			}
			int num = 0;
			List<ValueTuple<int, string>> list = new List<ValueTuple<int, string>>();
			foreach (string item in networks)
			{
				list.Add(new ValueTuple<int, string>(num, item));
				num++;
			}
			list.Sort(([TupleElementNames(new string[]
			{
				"id",
				"networkName"
			})] [Nullable(new byte[]
			{
				0,
				1
			})] ValueTuple<int, string> a, [TupleElementNames(new string[]
			{
				"id",
				"networkName"
			})] [Nullable(new byte[]
			{
				0,
				1
			})] ValueTuple<int, string> b) => string.Compare(a.Item2, b.Item2, StringComparison.Ordinal));
			foreach (ValueTuple<int, string> valueTuple in list)
			{
				int item2 = valueTuple.Item1;
				string item3 = valueTuple.Item2;
				DeviceFrequencyPrototype deviceFrequencyPrototype;
				if (this._prototypeManager.TryIndex<DeviceFrequencyPrototype>(item3, ref deviceFrequencyPrototype) && deviceFrequencyPrototype.Name != null)
				{
					this.NetworkSelector.AddItem(Loc.GetString(deviceFrequencyPrototype.Name), new int?(item2));
					if (deviceFrequencyPrototype.Frequency == currentNetwork)
					{
						this.NetworkSelector.SelectId(item2);
					}
					num++;
				}
			}
		}

		// Token: 0x1700014E RID: 334
		// (get) Token: 0x0600078B RID: 1931 RVA: 0x000278F0 File Offset: 0x00025AF0
		private BoxContainer NamingSection
		{
			get
			{
				return base.FindControl<BoxContainer>("NamingSection");
			}
		}

		// Token: 0x1700014F RID: 335
		// (get) Token: 0x0600078C RID: 1932 RVA: 0x000278FD File Offset: 0x00025AFD
		private LineEdit DeviceName
		{
			get
			{
				return base.FindControl<LineEdit>("DeviceName");
			}
		}

		// Token: 0x17000150 RID: 336
		// (get) Token: 0x0600078D RID: 1933 RVA: 0x0002790A File Offset: 0x00025B0A
		private Button NameConfirm
		{
			get
			{
				return base.FindControl<Button>("NameConfirm");
			}
		}

		// Token: 0x17000151 RID: 337
		// (get) Token: 0x0600078E RID: 1934 RVA: 0x00027917 File Offset: 0x00025B17
		private BoxContainer NetworkSection
		{
			get
			{
				return base.FindControl<BoxContainer>("NetworkSection");
			}
		}

		// Token: 0x17000152 RID: 338
		// (get) Token: 0x0600078F RID: 1935 RVA: 0x00027924 File Offset: 0x00025B24
		private OptionButton NetworkSelector
		{
			get
			{
				return base.FindControl<OptionButton>("NetworkSelector");
			}
		}

		// Token: 0x17000153 RID: 339
		// (get) Token: 0x06000790 RID: 1936 RVA: 0x00027931 File Offset: 0x00025B31
		private Button NetworkConfirm
		{
			get
			{
				return base.FindControl<Button>("NetworkConfirm");
			}
		}

		// Token: 0x06000794 RID: 1940 RVA: 0x00027984 File Offset: 0x00025B84
		static void xaml(IServiceProvider A_0, DefaultWindow A_1)
		{
			XamlIlContext.Context<DefaultWindow> context = new XamlIlContext.Context<DefaultWindow>(A_0, null, "resm:Content.Client.SurveillanceCamera.UI.SurveillanceCameraSetupWindow.xaml?assembly=Content.Client");
			context.RootObject = A_1;
			context.IntermediateRoot = A_1;
			A_1.Title = (string)new LocExtension("surveillance-camera-setup").ProvideValue();
			A_1.MinWidth = 400f;
			BoxContainer boxContainer = new BoxContainer();
			boxContainer.Orientation = 1;
			BoxContainer boxContainer2 = new BoxContainer();
			boxContainer2.Name = "NamingSection";
			Control control = boxContainer2;
			context.RobustNameScope.Register("NamingSection", control);
			LineEdit lineEdit = new LineEdit();
			lineEdit.HorizontalExpand = true;
			lineEdit.Name = "DeviceName";
			control = lineEdit;
			context.RobustNameScope.Register("DeviceName", control);
			control = lineEdit;
			boxContainer2.XamlChildren.Add(control);
			Button button = new Button();
			button.Name = "NameConfirm";
			control = button;
			context.RobustNameScope.Register("NameConfirm", control);
			button.Text = (string)new LocExtension("surveillance-camera-setup-ui-set").ProvideValue();
			control = button;
			boxContainer2.XamlChildren.Add(control);
			control = boxContainer2;
			boxContainer.XamlChildren.Add(control);
			BoxContainer boxContainer3 = new BoxContainer();
			boxContainer3.Name = "NetworkSection";
			control = boxContainer3;
			context.RobustNameScope.Register("NetworkSection", control);
			OptionButton optionButton = new OptionButton();
			optionButton.HorizontalExpand = true;
			optionButton.Name = "NetworkSelector";
			control = optionButton;
			context.RobustNameScope.Register("NetworkSelector", control);
			control = optionButton;
			boxContainer3.XamlChildren.Add(control);
			Button button2 = new Button();
			button2.Name = "NetworkConfirm";
			control = button2;
			context.RobustNameScope.Register("NetworkConfirm", control);
			button2.Text = (string)new LocExtension("surveillance-camera-setup-ui-set").ProvideValue();
			control = button2;
			boxContainer3.XamlChildren.Add(control);
			control = boxContainer3;
			boxContainer.XamlChildren.Add(control);
			control = boxContainer;
			A_1.XamlChildren.Add(control);
			if ((control = (A_1 as Control)) != null)
			{
				context.RobustNameScope.Absorb(control.NameScope);
				control.NameScope = context.RobustNameScope;
			}
			context.RobustNameScope.Complete();
		}

		// Token: 0x06000795 RID: 1941 RVA: 0x00027C0E File Offset: 0x00025E0E
		private static void !XamlIlPopulateTrampoline(SurveillanceCameraSetupWindow A_0)
		{
			SurveillanceCameraSetupWindow.Populate:Content.Client.SurveillanceCamera.UI.SurveillanceCameraSetupWindow.xaml(null, A_0);
		}

		// Token: 0x0400037A RID: 890
		[Nullable(1)]
		[Dependency]
		private readonly IPrototypeManager _prototypeManager;

		// Token: 0x0400037B RID: 891
		[Nullable(new byte[]
		{
			2,
			1
		})]
		public Action<string> OnNameConfirm;

		// Token: 0x0400037C RID: 892
		[Nullable(2)]
		public Action<int> OnNetworkConfirm;
	}
}
