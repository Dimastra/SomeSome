using System;
using System.Collections.Generic;
using System.Linq;
using System.Runtime.CompilerServices;
using CompiledRobustXaml;
using Content.Shared.Chemistry;
using Content.Shared.Chemistry.Reagent;
using Content.Shared.FixedPoint;
using Robust.Client.AutoGenerated;
using Robust.Client.Graphics;
using Robust.Client.UserInterface;
using Robust.Client.UserInterface.Controls;
using Robust.Client.UserInterface.CustomControls;
using Robust.Shared.GameObjects;
using Robust.Shared.IoC;
using Robust.Shared.Localization;
using Robust.Shared.Maths;
using Robust.Shared.Prototypes;

namespace Content.Client.Chemistry.UI
{
	// Token: 0x020003DB RID: 987
	[GenerateTypedNameReferences]
	public sealed class ReagentDispenserWindow : DefaultWindow
	{
		// Token: 0x1400008D RID: 141
		// (add) Token: 0x06001850 RID: 6224 RVA: 0x0008C348 File Offset: 0x0008A548
		// (remove) Token: 0x06001851 RID: 6225 RVA: 0x0008C380 File Offset: 0x0008A580
		[Nullable(new byte[]
		{
			2,
			1,
			1
		})]
		[Nullable(new byte[]
		{
			2,
			1,
			1
		})]
		public event Action<BaseButton.ButtonEventArgs, DispenseReagentButton> OnDispenseReagentButtonPressed;

		// Token: 0x1400008E RID: 142
		// (add) Token: 0x06001852 RID: 6226 RVA: 0x0008C3B8 File Offset: 0x0008A5B8
		// (remove) Token: 0x06001853 RID: 6227 RVA: 0x0008C3F0 File Offset: 0x0008A5F0
		[Nullable(new byte[]
		{
			2,
			1,
			1
		})]
		[Nullable(new byte[]
		{
			2,
			1,
			1
		})]
		public event Action<GUIMouseHoverEventArgs, DispenseReagentButton> OnDispenseReagentButtonMouseEntered;

		// Token: 0x1400008F RID: 143
		// (add) Token: 0x06001854 RID: 6228 RVA: 0x0008C428 File Offset: 0x0008A628
		// (remove) Token: 0x06001855 RID: 6229 RVA: 0x0008C460 File Offset: 0x0008A660
		[Nullable(new byte[]
		{
			2,
			1,
			1
		})]
		[Nullable(new byte[]
		{
			2,
			1,
			1
		})]
		public event Action<GUIMouseHoverEventArgs, DispenseReagentButton> OnDispenseReagentButtonMouseExited;

		// Token: 0x06001856 RID: 6230 RVA: 0x0008C498 File Offset: 0x0008A698
		public ReagentDispenserWindow()
		{
			ReagentDispenserWindow.!XamlIlPopulateTrampoline(this);
			IoCManager.InjectDependencies<ReagentDispenserWindow>(this);
			ButtonGroup group = new ButtonGroup();
			this.DispenseButton1.Group = group;
			this.DispenseButton5.Group = group;
			this.DispenseButton10.Group = group;
			this.DispenseButton15.Group = group;
			this.DispenseButton20.Group = group;
			this.DispenseButton25.Group = group;
			this.DispenseButton30.Group = group;
			this.DispenseButton50.Group = group;
			this.DispenseButton100.Group = group;
		}

		// Token: 0x06001857 RID: 6231 RVA: 0x0008C52C File Offset: 0x0008A72C
		[NullableContext(1)]
		public void UpdateReagentsList(List<string> inventory)
		{
			if (this.ChemicalList == null)
			{
				return;
			}
			if (inventory == null)
			{
				return;
			}
			this.ChemicalList.Children.Clear();
			foreach (string text in inventory.OrderBy(delegate(string r)
			{
				ReagentPrototype reagentPrototype2;
				this._prototypeManager.TryIndex<ReagentPrototype>(r, ref reagentPrototype2);
				if (reagentPrototype2 == null)
				{
					return null;
				}
				return reagentPrototype2.LocalizedName;
			}))
			{
				ReagentPrototype reagentPrototype;
				string text2 = this._prototypeManager.TryIndex<ReagentPrototype>(text, ref reagentPrototype) ? reagentPrototype.LocalizedName : Loc.GetString("reagent-dispenser-window-reagent-name-not-found-text");
				DispenseReagentButton button = new DispenseReagentButton(text, text2);
				button.OnPressed += delegate(BaseButton.ButtonEventArgs args)
				{
					Action<BaseButton.ButtonEventArgs, DispenseReagentButton> onDispenseReagentButtonPressed = this.OnDispenseReagentButtonPressed;
					if (onDispenseReagentButtonPressed == null)
					{
						return;
					}
					onDispenseReagentButtonPressed(args, button);
				};
				button.OnMouseEntered += delegate(GUIMouseHoverEventArgs args)
				{
					Action<GUIMouseHoverEventArgs, DispenseReagentButton> onDispenseReagentButtonMouseEntered = this.OnDispenseReagentButtonMouseEntered;
					if (onDispenseReagentButtonMouseEntered == null)
					{
						return;
					}
					onDispenseReagentButtonMouseEntered(args, button);
				};
				button.OnMouseExited += delegate(GUIMouseHoverEventArgs args)
				{
					Action<GUIMouseHoverEventArgs, DispenseReagentButton> onDispenseReagentButtonMouseExited = this.OnDispenseReagentButtonMouseExited;
					if (onDispenseReagentButtonMouseExited == null)
					{
						return;
					}
					onDispenseReagentButtonMouseExited(args, button);
				};
				this.ChemicalList.AddChild(button);
			}
		}

		// Token: 0x06001858 RID: 6232 RVA: 0x0008C638 File Offset: 0x0008A838
		[NullableContext(1)]
		public void UpdateState(BoundUserInterfaceState state)
		{
			ReagentDispenserBoundUserInterfaceState reagentDispenserBoundUserInterfaceState = (ReagentDispenserBoundUserInterfaceState)state;
			this.UpdateContainerInfo(reagentDispenserBoundUserInterfaceState, null);
			this.UpdateReagentsList(reagentDispenserBoundUserInterfaceState.Inventory);
			this.ClearButton.Disabled = (reagentDispenserBoundUserInterfaceState.OutputContainer == null);
			this.EjectButton.Disabled = (reagentDispenserBoundUserInterfaceState.OutputContainer == null);
			ReagentDispenserDispenseAmount selectedDispenseAmount = reagentDispenserBoundUserInterfaceState.SelectedDispenseAmount;
			if (selectedDispenseAmount <= ReagentDispenserDispenseAmount.U15)
			{
				if (selectedDispenseAmount <= ReagentDispenserDispenseAmount.U5)
				{
					if (selectedDispenseAmount == ReagentDispenserDispenseAmount.U1)
					{
						this.DispenseButton1.Pressed = true;
						return;
					}
					if (selectedDispenseAmount != ReagentDispenserDispenseAmount.U5)
					{
						return;
					}
					this.DispenseButton5.Pressed = true;
					return;
				}
				else
				{
					if (selectedDispenseAmount == ReagentDispenserDispenseAmount.U10)
					{
						this.DispenseButton10.Pressed = true;
						return;
					}
					if (selectedDispenseAmount != ReagentDispenserDispenseAmount.U15)
					{
						return;
					}
					this.DispenseButton15.Pressed = true;
					return;
				}
			}
			else if (selectedDispenseAmount <= ReagentDispenserDispenseAmount.U25)
			{
				if (selectedDispenseAmount == ReagentDispenserDispenseAmount.U20)
				{
					this.DispenseButton20.Pressed = true;
					return;
				}
				if (selectedDispenseAmount != ReagentDispenserDispenseAmount.U25)
				{
					return;
				}
				this.DispenseButton25.Pressed = true;
				return;
			}
			else
			{
				if (selectedDispenseAmount == ReagentDispenserDispenseAmount.U30)
				{
					this.DispenseButton30.Pressed = true;
					return;
				}
				if (selectedDispenseAmount == ReagentDispenserDispenseAmount.U50)
				{
					this.DispenseButton50.Pressed = true;
					return;
				}
				if (selectedDispenseAmount != ReagentDispenserDispenseAmount.U100)
				{
					return;
				}
				this.DispenseButton100.Pressed = true;
				return;
			}
		}

		// Token: 0x06001859 RID: 6233 RVA: 0x0008C740 File Offset: 0x0008A940
		[NullableContext(1)]
		public void UpdateContainerInfo(ReagentDispenserBoundUserInterfaceState state, [Nullable(2)] string highlightedReagentId = null)
		{
			this.ContainerInfo.Children.Clear();
			if (state.OutputContainer == null)
			{
				this.ContainerInfo.Children.Add(new Label
				{
					Text = Loc.GetString("reagent-dispenser-window-no-container-loaded-text")
				});
				return;
			}
			Control.OrderedChildCollection children = this.ContainerInfo.Children;
			BoxContainer boxContainer = new BoxContainer();
			boxContainer.Orientation = 0;
			boxContainer.Children.Add(new Label
			{
				Text = state.OutputContainer.DisplayName + ": "
			});
			Control.OrderedChildCollection children2 = boxContainer.Children;
			Label label = new Label();
			DefaultInterpolatedStringHandler defaultInterpolatedStringHandler = new DefaultInterpolatedStringHandler(1, 2);
			defaultInterpolatedStringHandler.AppendFormatted<FixedPoint2>(state.OutputContainer.CurrentVolume);
			defaultInterpolatedStringHandler.AppendLiteral("/");
			defaultInterpolatedStringHandler.AppendFormatted<FixedPoint2>(state.OutputContainer.MaxVolume);
			label.Text = defaultInterpolatedStringHandler.ToStringAndClear();
			label.StyleClasses.Add("LabelSecondaryColor");
			children2.Add(label);
			children.Add(boxContainer);
			foreach (ValueTuple<string, FixedPoint2> valueTuple in state.OutputContainer.Contents)
			{
				ReagentPrototype reagentPrototype;
				string str = this._prototypeManager.TryIndex<ReagentPrototype>(valueTuple.Item1, ref reagentPrototype) ? reagentPrototype.LocalizedName : Loc.GetString("reagent-dispenser-window-reagent-name-not-found-text");
				Label label2 = new Label
				{
					Text = str + ": "
				};
				Label label3 = new Label
				{
					Text = Loc.GetString("reagent-dispenser-window-quantity-label-text", new ValueTuple<string, object>[]
					{
						new ValueTuple<string, object>("quantity", valueTuple.Item2)
					}),
					StyleClasses = 
					{
						"LabelSecondaryColor"
					}
				};
				if (valueTuple.Item1 == highlightedReagentId)
				{
					label2.SetOnlyStyleClass("PowerStateGood");
					label3.SetOnlyStyleClass("PowerStateGood");
				}
				Control.OrderedChildCollection children3 = this.ContainerInfo.Children;
				BoxContainer boxContainer2 = new BoxContainer();
				boxContainer2.Orientation = 0;
				boxContainer2.Children.Add(label2);
				boxContainer2.Children.Add(label3);
				children3.Add(boxContainer2);
			}
		}

		// Token: 0x170004FF RID: 1279
		// (get) Token: 0x0600185A RID: 6234 RVA: 0x0008C97C File Offset: 0x0008AB7C
		public Button DispenseButton1
		{
			get
			{
				return base.FindControl<Button>("DispenseButton1");
			}
		}

		// Token: 0x17000500 RID: 1280
		// (get) Token: 0x0600185B RID: 6235 RVA: 0x0008C989 File Offset: 0x0008AB89
		public Button DispenseButton5
		{
			get
			{
				return base.FindControl<Button>("DispenseButton5");
			}
		}

		// Token: 0x17000501 RID: 1281
		// (get) Token: 0x0600185C RID: 6236 RVA: 0x0008C996 File Offset: 0x0008AB96
		public Button DispenseButton10
		{
			get
			{
				return base.FindControl<Button>("DispenseButton10");
			}
		}

		// Token: 0x17000502 RID: 1282
		// (get) Token: 0x0600185D RID: 6237 RVA: 0x0008C9A3 File Offset: 0x0008ABA3
		public Button DispenseButton15
		{
			get
			{
				return base.FindControl<Button>("DispenseButton15");
			}
		}

		// Token: 0x17000503 RID: 1283
		// (get) Token: 0x0600185E RID: 6238 RVA: 0x0008C9B0 File Offset: 0x0008ABB0
		public Button DispenseButton20
		{
			get
			{
				return base.FindControl<Button>("DispenseButton20");
			}
		}

		// Token: 0x17000504 RID: 1284
		// (get) Token: 0x0600185F RID: 6239 RVA: 0x0008C9BD File Offset: 0x0008ABBD
		public Button DispenseButton25
		{
			get
			{
				return base.FindControl<Button>("DispenseButton25");
			}
		}

		// Token: 0x17000505 RID: 1285
		// (get) Token: 0x06001860 RID: 6240 RVA: 0x0008C9CA File Offset: 0x0008ABCA
		public Button DispenseButton30
		{
			get
			{
				return base.FindControl<Button>("DispenseButton30");
			}
		}

		// Token: 0x17000506 RID: 1286
		// (get) Token: 0x06001861 RID: 6241 RVA: 0x0008C9D7 File Offset: 0x0008ABD7
		public Button DispenseButton50
		{
			get
			{
				return base.FindControl<Button>("DispenseButton50");
			}
		}

		// Token: 0x17000507 RID: 1287
		// (get) Token: 0x06001862 RID: 6242 RVA: 0x0008C9E4 File Offset: 0x0008ABE4
		public Button DispenseButton100
		{
			get
			{
				return base.FindControl<Button>("DispenseButton100");
			}
		}

		// Token: 0x17000508 RID: 1288
		// (get) Token: 0x06001863 RID: 6243 RVA: 0x0008C9F1 File Offset: 0x0008ABF1
		public GridContainer ChemicalList
		{
			get
			{
				return base.FindControl<GridContainer>("ChemicalList");
			}
		}

		// Token: 0x17000509 RID: 1289
		// (get) Token: 0x06001864 RID: 6244 RVA: 0x0001E1D6 File Offset: 0x0001C3D6
		public Button ClearButton
		{
			get
			{
				return base.FindControl<Button>("ClearButton");
			}
		}

		// Token: 0x1700050A RID: 1290
		// (get) Token: 0x06001865 RID: 6245 RVA: 0x000523E3 File Offset: 0x000505E3
		public Button EjectButton
		{
			get
			{
				return base.FindControl<Button>("EjectButton");
			}
		}

		// Token: 0x1700050B RID: 1291
		// (get) Token: 0x06001866 RID: 6246 RVA: 0x0008C9FE File Offset: 0x0008ABFE
		private BoxContainer ContainerInfo
		{
			get
			{
				return base.FindControl<BoxContainer>("ContainerInfo");
			}
		}

		// Token: 0x06001868 RID: 6248 RVA: 0x0008CA34 File Offset: 0x0008AC34
		static void xaml(IServiceProvider A_0, DefaultWindow A_1)
		{
			XamlIlContext.Context<DefaultWindow> context = new XamlIlContext.Context<DefaultWindow>(A_0, null, "resm:Content.Client.Chemistry.UI.ReagentDispenserWindow.xaml?assembly=Content.Client");
			context.RootObject = A_1;
			context.IntermediateRoot = A_1;
			A_1.Title = (string)new LocExtension("reagent-dispenser-bound-user-interface-title").ProvideValue();
			A_1.SetSize = new Vector2(590f, 450f);
			A_1.MinSize = new Vector2(590f, 450f);
			BoxContainer boxContainer = new BoxContainer();
			boxContainer.Orientation = 1;
			BoxContainer boxContainer2 = new BoxContainer();
			boxContainer2.Orientation = 0;
			Control control = new Label
			{
				Text = (string)new LocExtension("reagent-dispenser-window-amount-to-dispense-label").ProvideValue()
			};
			boxContainer2.XamlChildren.Add(control);
			control = new Control
			{
				MinSize = new Vector2(20f, 0f)
			};
			boxContainer2.XamlChildren.Add(control);
			Button button = new Button();
			button.Name = "DispenseButton1";
			control = button;
			context.RobustNameScope.Register("DispenseButton1", control);
			button.Access = new AccessLevel?(0);
			button.Text = "1";
			string item = "OpenRight";
			button.StyleClasses.Add(item);
			control = button;
			boxContainer2.XamlChildren.Add(control);
			Button button2 = new Button();
			button2.Name = "DispenseButton5";
			control = button2;
			context.RobustNameScope.Register("DispenseButton5", control);
			button2.Access = new AccessLevel?(0);
			button2.Text = "5";
			item = "OpenBoth";
			button2.StyleClasses.Add(item);
			control = button2;
			boxContainer2.XamlChildren.Add(control);
			Button button3 = new Button();
			button3.Name = "DispenseButton10";
			control = button3;
			context.RobustNameScope.Register("DispenseButton10", control);
			button3.Access = new AccessLevel?(0);
			button3.Text = "10";
			item = "OpenBoth";
			button3.StyleClasses.Add(item);
			control = button3;
			boxContainer2.XamlChildren.Add(control);
			Button button4 = new Button();
			button4.Name = "DispenseButton15";
			control = button4;
			context.RobustNameScope.Register("DispenseButton15", control);
			button4.Access = new AccessLevel?(0);
			button4.Text = "15";
			item = "OpenBoth";
			button4.StyleClasses.Add(item);
			control = button4;
			boxContainer2.XamlChildren.Add(control);
			Button button5 = new Button();
			button5.Name = "DispenseButton20";
			control = button5;
			context.RobustNameScope.Register("DispenseButton20", control);
			button5.Access = new AccessLevel?(0);
			button5.Text = "20";
			item = "OpenBoth";
			button5.StyleClasses.Add(item);
			control = button5;
			boxContainer2.XamlChildren.Add(control);
			Button button6 = new Button();
			button6.Name = "DispenseButton25";
			control = button6;
			context.RobustNameScope.Register("DispenseButton25", control);
			button6.Access = new AccessLevel?(0);
			button6.Text = "25";
			item = "OpenBoth";
			button6.StyleClasses.Add(item);
			control = button6;
			boxContainer2.XamlChildren.Add(control);
			Button button7 = new Button();
			button7.Name = "DispenseButton30";
			control = button7;
			context.RobustNameScope.Register("DispenseButton30", control);
			button7.Access = new AccessLevel?(0);
			button7.Text = "30";
			item = "OpenBoth";
			button7.StyleClasses.Add(item);
			control = button7;
			boxContainer2.XamlChildren.Add(control);
			Button button8 = new Button();
			button8.Name = "DispenseButton50";
			control = button8;
			context.RobustNameScope.Register("DispenseButton50", control);
			button8.Access = new AccessLevel?(0);
			button8.Text = "50";
			item = "OpenBoth";
			button8.StyleClasses.Add(item);
			control = button8;
			boxContainer2.XamlChildren.Add(control);
			Button button9 = new Button();
			button9.Name = "DispenseButton100";
			control = button9;
			context.RobustNameScope.Register("DispenseButton100", control);
			button9.Access = new AccessLevel?(0);
			button9.Text = "100";
			item = "OpenLeft";
			button9.StyleClasses.Add(item);
			control = button9;
			boxContainer2.XamlChildren.Add(control);
			control = boxContainer2;
			boxContainer.XamlChildren.Add(control);
			control = new Control
			{
				MinSize = new Vector2(0f, 10f)
			};
			boxContainer.XamlChildren.Add(control);
			GridContainer gridContainer = new GridContainer();
			gridContainer.Name = "ChemicalList";
			control = gridContainer;
			context.RobustNameScope.Register("ChemicalList", control);
			gridContainer.Access = new AccessLevel?(0);
			gridContainer.Columns = 4;
			control = gridContainer;
			boxContainer.XamlChildren.Add(control);
			control = new Control
			{
				MinSize = new Vector2(0f, 10f)
			};
			boxContainer.XamlChildren.Add(control);
			BoxContainer boxContainer3 = new BoxContainer();
			boxContainer3.Orientation = 0;
			control = new Label
			{
				Text = (string)new LocExtension("reagent-dispenser-window-container-label").ProvideValue()
			};
			boxContainer3.XamlChildren.Add(control);
			Button button10 = new Button();
			button10.Name = "ClearButton";
			control = button10;
			context.RobustNameScope.Register("ClearButton", control);
			button10.Access = new AccessLevel?(0);
			button10.Text = (string)new LocExtension("reagent-dispenser-window-clear-button").ProvideValue();
			item = "OpenRight";
			button10.StyleClasses.Add(item);
			control = button10;
			boxContainer3.XamlChildren.Add(control);
			Button button11 = new Button();
			button11.Name = "EjectButton";
			control = button11;
			context.RobustNameScope.Register("EjectButton", control);
			button11.Access = new AccessLevel?(0);
			button11.Text = (string)new LocExtension("reagent-dispenser-window-eject-button").ProvideValue();
			item = "OpenLeft";
			button11.StyleClasses.Add(item);
			control = button11;
			boxContainer3.XamlChildren.Add(control);
			control = boxContainer3;
			boxContainer.XamlChildren.Add(control);
			control = new Control
			{
				MinSize = new Vector2(0f, 10f)
			};
			boxContainer.XamlChildren.Add(control);
			PanelContainer panelContainer = new PanelContainer();
			panelContainer.VerticalExpand = true;
			panelContainer.SizeFlagsStretchRatio = 6f;
			panelContainer.MinSize = new Vector2(0f, 150f);
			panelContainer.PanelOverride = new StyleBoxFlat
			{
				BackgroundColor = Color.FromXaml("#1b1b1b")
			};
			BoxContainer boxContainer4 = new BoxContainer();
			boxContainer4.Name = "ContainerInfo";
			control = boxContainer4;
			context.RobustNameScope.Register("ContainerInfo", control);
			boxContainer4.Orientation = 1;
			boxContainer4.HorizontalExpand = true;
			control = new Label
			{
				Text = (string)new LocExtension("reagent-dispenser-window-no-container-loaded-text").ProvideValue()
			};
			boxContainer4.XamlChildren.Add(control);
			control = boxContainer4;
			panelContainer.XamlChildren.Add(control);
			control = panelContainer;
			boxContainer.XamlChildren.Add(control);
			control = boxContainer;
			A_1.XamlChildren.Add(control);
			if ((control = (A_1 as Control)) != null)
			{
				context.RobustNameScope.Absorb(control.NameScope);
				control.NameScope = context.RobustNameScope;
			}
			context.RobustNameScope.Complete();
		}

		// Token: 0x06001869 RID: 6249 RVA: 0x0008D2C0 File Offset: 0x0008B4C0
		private static void !XamlIlPopulateTrampoline(ReagentDispenserWindow A_0)
		{
			ReagentDispenserWindow.Populate:Content.Client.Chemistry.UI.ReagentDispenserWindow.xaml(null, A_0);
		}

		// Token: 0x04000C69 RID: 3177
		[Nullable(1)]
		[Dependency]
		private readonly IPrototypeManager _prototypeManager;
	}
}
