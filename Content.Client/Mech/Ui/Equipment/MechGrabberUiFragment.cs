using System;
using System.Runtime.CompilerServices;
using CompiledRobustXaml;
using Content.Shared.Mech;
using Robust.Client.AutoGenerated;
using Robust.Client.UserInterface;
using Robust.Client.UserInterface.Controls;
using Robust.Shared.GameObjects;
using Robust.Shared.IoC;
using Robust.Shared.Maths;

namespace Content.Client.Mech.Ui.Equipment
{
	// Token: 0x02000244 RID: 580
	[GenerateTypedNameReferences]
	public sealed class MechGrabberUiFragment : BoxContainer
	{
		// Token: 0x14000053 RID: 83
		// (add) Token: 0x06000EB5 RID: 3765 RVA: 0x00058DA4 File Offset: 0x00056FA4
		// (remove) Token: 0x06000EB6 RID: 3766 RVA: 0x00058DDC File Offset: 0x00056FDC
		[Nullable(2)]
		[method: NullableContext(2)]
		[Nullable(2)]
		public event Action<EntityUid> OnEjectAction;

		// Token: 0x06000EB7 RID: 3767 RVA: 0x00058E11 File Offset: 0x00057011
		public MechGrabberUiFragment()
		{
			MechGrabberUiFragment.!XamlIlPopulateTrampoline(this);
			IoCManager.InjectDependencies<MechGrabberUiFragment>(this);
		}

		// Token: 0x06000EB8 RID: 3768 RVA: 0x00058E28 File Offset: 0x00057028
		[NullableContext(1)]
		public void UpdateContents(MechGrabberUiState state)
		{
			Label spaceLabel = this.SpaceLabel;
			DefaultInterpolatedStringHandler defaultInterpolatedStringHandler = new DefaultInterpolatedStringHandler(1, 2);
			defaultInterpolatedStringHandler.AppendFormatted<int>(state.Contents.Count);
			defaultInterpolatedStringHandler.AppendLiteral("/");
			defaultInterpolatedStringHandler.AppendFormatted<int>(state.MaxContents);
			spaceLabel.Text = defaultInterpolatedStringHandler.ToStringAndClear();
			for (int i = 0; i < state.Contents.Count; i++)
			{
				EntityUid ent = state.Contents[i];
				MetaDataComponent metaDataComponent;
				if (this._entity.TryGetComponent<MetaDataComponent>(ent, ref metaDataComponent))
				{
					this.ItemList.AddItem(metaDataComponent.EntityName, null, true);
					this.ItemList.get_IndexItem(i).OnSelected += delegate(ItemList.Item _)
					{
						Action<EntityUid> onEjectAction = this.OnEjectAction;
						if (onEjectAction == null)
						{
							return;
						}
						onEjectAction(ent);
					};
				}
			}
		}

		// Token: 0x17000321 RID: 801
		// (get) Token: 0x06000EB9 RID: 3769 RVA: 0x00058EF6 File Offset: 0x000570F6
		private ItemList ItemList
		{
			get
			{
				return base.FindControl<ItemList>("ItemList");
			}
		}

		// Token: 0x17000322 RID: 802
		// (get) Token: 0x06000EBA RID: 3770 RVA: 0x00058F03 File Offset: 0x00057103
		private Label SpaceLabel
		{
			get
			{
				return base.FindControl<Label>("SpaceLabel");
			}
		}

		// Token: 0x06000EBB RID: 3771 RVA: 0x00058F10 File Offset: 0x00057110
		static void xaml(IServiceProvider A_0, MechGrabberUiFragment A_1)
		{
			XamlIlContext.Context<MechGrabberUiFragment> context = new XamlIlContext.Context<MechGrabberUiFragment>(A_0, null, "resm:Content.Client.Mech.Ui.Equipment.MechGrabberUiFragment.xaml?assembly=Content.Client");
			context.RootObject = A_1;
			context.IntermediateRoot = A_1;
			A_1.Margin = new Thickness(1f, 0f, 2f, 0f);
			A_1.HorizontalExpand = true;
			A_1.VerticalExpand = true;
			BoxContainer boxContainer = new BoxContainer();
			boxContainer.Orientation = 1;
			boxContainer.HorizontalExpand = true;
			boxContainer.VerticalExpand = true;
			ItemList itemList = new ItemList();
			itemList.Name = "ItemList";
			Control control = itemList;
			context.RobustNameScope.Register("ItemList", control);
			itemList.VerticalExpand = true;
			itemList.MinHeight = 120f;
			itemList.HorizontalExpand = true;
			itemList.SelectMode = 3;
			control = itemList;
			boxContainer.XamlChildren.Add(control);
			Label label = new Label();
			label.Name = "SpaceLabel";
			control = label;
			context.RobustNameScope.Register("SpaceLabel", control);
			label.HorizontalAlignment = 3;
			string item = "LabelSubText";
			label.StyleClasses.Add(item);
			control = label;
			boxContainer.XamlChildren.Add(control);
			control = boxContainer;
			A_1.XamlChildren.Add(control);
			if ((control = (A_1 as Control)) != null)
			{
				context.RobustNameScope.Absorb(control.NameScope);
				control.NameScope = context.RobustNameScope;
			}
			context.RobustNameScope.Complete();
		}

		// Token: 0x06000EBC RID: 3772 RVA: 0x000590C3 File Offset: 0x000572C3
		private static void !XamlIlPopulateTrampoline(MechGrabberUiFragment A_0)
		{
			MechGrabberUiFragment.Populate:Content.Client.Mech.Ui.Equipment.MechGrabberUiFragment.xaml(null, A_0);
		}

		// Token: 0x04000749 RID: 1865
		[Nullable(1)]
		[Dependency]
		private readonly IEntityManager _entity;
	}
}
