using System;
using System.Runtime.CompilerServices;
using CompiledRobustXaml;
using Robust.Client.AutoGenerated;
using Robust.Client.UserInterface;
using Robust.Client.UserInterface.Controls;
using Robust.Client.UserInterface.CustomControls;
using Robust.Shared.Localization;
using Robust.Shared.Maths;

namespace Content.Client.Atmos.UI
{
	// Token: 0x0200043F RID: 1087
	[GenerateTypedNameReferences]
	public sealed class GasThermomachineWindow : DefaultWindow
	{
		// Token: 0x06001ADE RID: 6878 RVA: 0x0009A6E8 File Offset: 0x000988E8
		public GasThermomachineWindow()
		{
			GasThermomachineWindow.!XamlIlPopulateTrampoline(this);
			Control spinboxHBox = this.SpinboxHBox;
			FloatSpinBox floatSpinBox = new FloatSpinBox(0.1f, 2);
			floatSpinBox.MaxWidth = 150f;
			floatSpinBox.HorizontalExpand = true;
			FloatSpinBox floatSpinBox2 = floatSpinBox;
			this.TemperatureSpinbox = floatSpinBox;
			spinboxHBox.AddChild(floatSpinBox2);
		}

		// Token: 0x06001ADF RID: 6879 RVA: 0x0009A739 File Offset: 0x00098939
		public void SetActive(bool active)
		{
			this.Active = active;
			if (active)
			{
				this.ToggleStatusButton.Text = Loc.GetString("comp-gas-thermomachine-ui-status-enabled");
				return;
			}
			this.ToggleStatusButton.Text = Loc.GetString("comp-gas-thermomachine-ui-status-disabled");
		}

		// Token: 0x06001AE0 RID: 6880 RVA: 0x0009A770 File Offset: 0x00098970
		public void SetTemperature(float temperature)
		{
			this.TemperatureSpinbox.Value = temperature;
		}

		// Token: 0x1700058B RID: 1419
		// (get) Token: 0x06001AE1 RID: 6881 RVA: 0x0009A77E File Offset: 0x0009897E
		private BoxContainer VboxContainer
		{
			get
			{
				return base.FindControl<BoxContainer>("VboxContainer");
			}
		}

		// Token: 0x1700058C RID: 1420
		// (get) Token: 0x06001AE2 RID: 6882 RVA: 0x00098ADF File Offset: 0x00096CDF
		public Button ToggleStatusButton
		{
			get
			{
				return base.FindControl<Button>("ToggleStatusButton");
			}
		}

		// Token: 0x1700058D RID: 1421
		// (get) Token: 0x06001AE3 RID: 6883 RVA: 0x0009A78B File Offset: 0x0009898B
		private BoxContainer SpinboxHBox
		{
			get
			{
				return base.FindControl<BoxContainer>("SpinboxHBox");
			}
		}

		// Token: 0x06001AE4 RID: 6884 RVA: 0x0009A798 File Offset: 0x00098998
		static void xaml(IServiceProvider A_0, DefaultWindow A_1)
		{
			XamlIlContext.Context<DefaultWindow> context = new XamlIlContext.Context<DefaultWindow>(A_0, null, "resm:Content.Client.Atmos.UI.GasThermomachineWindow.xaml?assembly=Content.Client");
			context.RootObject = A_1;
			context.IntermediateRoot = A_1;
			A_1.MinSize = new Vector2(300f, 120f);
			A_1.Title = (string)new LocExtension("comp-gas-thermomachine-ui-title-freezer").ProvideValue();
			BoxContainer boxContainer = new BoxContainer();
			boxContainer.Name = "VboxContainer";
			Control control = boxContainer;
			context.RobustNameScope.Register("VboxContainer", control);
			boxContainer.Orientation = 1;
			boxContainer.Margin = new Thickness(5f, 5f, 5f, 5f);
			boxContainer.SeparationOverride = new int?(10);
			BoxContainer boxContainer2 = new BoxContainer();
			boxContainer2.Orientation = 0;
			boxContainer2.HorizontalExpand = true;
			control = new Label
			{
				Text = (string)new LocExtension("comp-gas-thermomachine-ui-toggle").ProvideValue()
			};
			boxContainer2.XamlChildren.Add(control);
			control = new Control
			{
				MinSize = new Vector2(5f, 0f)
			};
			boxContainer2.XamlChildren.Add(control);
			Button button = new Button();
			button.Access = new AccessLevel?(0);
			button.Name = "ToggleStatusButton";
			control = button;
			context.RobustNameScope.Register("ToggleStatusButton", control);
			control = button;
			boxContainer2.XamlChildren.Add(control);
			control = boxContainer2;
			boxContainer.XamlChildren.Add(control);
			BoxContainer boxContainer3 = new BoxContainer();
			boxContainer3.Name = "SpinboxHBox";
			control = boxContainer3;
			context.RobustNameScope.Register("SpinboxHBox", control);
			boxContainer3.Orientation = 0;
			control = new Label
			{
				Text = (string)new LocExtension("comp-gas-thermomachine-ui-temperature").ProvideValue()
			};
			boxContainer3.XamlChildren.Add(control);
			control = boxContainer3;
			boxContainer.XamlChildren.Add(control);
			control = boxContainer;
			A_1.XamlChildren.Add(control);
			if ((control = (A_1 as Control)) != null)
			{
				context.RobustNameScope.Absorb(control.NameScope);
				control.NameScope = context.RobustNameScope;
			}
			context.RobustNameScope.Complete();
		}

		// Token: 0x06001AE5 RID: 6885 RVA: 0x0009AA16 File Offset: 0x00098C16
		private static void !XamlIlPopulateTrampoline(GasThermomachineWindow A_0)
		{
			GasThermomachineWindow.Populate:Content.Client.Atmos.UI.GasThermomachineWindow.xaml(null, A_0);
		}

		// Token: 0x04000D7D RID: 3453
		public bool Active = true;

		// Token: 0x04000D7E RID: 3454
		[Nullable(1)]
		public FloatSpinBox TemperatureSpinbox;
	}
}
