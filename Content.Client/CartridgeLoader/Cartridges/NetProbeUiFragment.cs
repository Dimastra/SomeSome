using System;
using System.Collections.Generic;
using System.Runtime.CompilerServices;
using CompiledRobustXaml;
using Content.Shared.CartridgeLoader.Cartridges;
using Robust.Client.AutoGenerated;
using Robust.Client.Graphics;
using Robust.Client.UserInterface;
using Robust.Client.UserInterface.Controls;
using Robust.Shared.Maths;

namespace Content.Client.CartridgeLoader.Cartridges
{
	// Token: 0x020003FD RID: 1021
	[GenerateTypedNameReferences]
	public sealed class NetProbeUiFragment : BoxContainer
	{
		// Token: 0x06001910 RID: 6416 RVA: 0x0008FA98 File Offset: 0x0008DC98
		public NetProbeUiFragment()
		{
			NetProbeUiFragment.!XamlIlPopulateTrampoline(this);
			base.Orientation = 1;
			base.HorizontalExpand = true;
			base.VerticalExpand = true;
			this.HeaderPanel.PanelOverride = this._styleBox;
		}

		// Token: 0x06001911 RID: 6417 RVA: 0x0008FB2C File Offset: 0x0008DD2C
		[NullableContext(1)]
		public void UpdateState(List<ProbedNetworkDevice> devices)
		{
			this.ProbedDeviceContainer.RemoveAllChildren();
			devices.Reverse();
			this.ScrollContainer.HScrollEnabled = (devices.Count > 9);
			foreach (ProbedNetworkDevice device in devices)
			{
				this.AddProbedDevice(device);
			}
		}

		// Token: 0x06001912 RID: 6418 RVA: 0x0008FBA0 File Offset: 0x0008DDA0
		[NullableContext(1)]
		private void AddProbedDevice(ProbedNetworkDevice device)
		{
			BoxContainer boxContainer = new BoxContainer();
			boxContainer.HorizontalExpand = true;
			boxContainer.Orientation = 0;
			boxContainer.Margin = new Thickness(4f);
			boxContainer.AddChild(new Label
			{
				Text = device.Name,
				HorizontalExpand = true,
				ClipText = true
			});
			boxContainer.AddChild(new Label
			{
				Text = device.Address,
				HorizontalExpand = true,
				ClipText = true
			});
			boxContainer.AddChild(new Label
			{
				Text = device.Frequency,
				HorizontalExpand = true,
				ClipText = true
			});
			boxContainer.AddChild(new Label
			{
				Text = device.NetId,
				HorizontalExpand = true,
				ClipText = true
			});
			this.ProbedDeviceContainer.AddChild(boxContainer);
		}

		// Token: 0x17000525 RID: 1317
		// (get) Token: 0x06001913 RID: 6419 RVA: 0x0008FC7E File Offset: 0x0008DE7E
		private PanelContainer HeaderPanel
		{
			get
			{
				return base.FindControl<PanelContainer>("HeaderPanel");
			}
		}

		// Token: 0x17000526 RID: 1318
		// (get) Token: 0x06001914 RID: 6420 RVA: 0x0008FC8B File Offset: 0x0008DE8B
		private ScrollContainer ScrollContainer
		{
			get
			{
				return base.FindControl<ScrollContainer>("ScrollContainer");
			}
		}

		// Token: 0x17000527 RID: 1319
		// (get) Token: 0x06001915 RID: 6421 RVA: 0x0008FC98 File Offset: 0x0008DE98
		private BoxContainer ProbedDeviceContainer
		{
			get
			{
				return base.FindControl<BoxContainer>("ProbedDeviceContainer");
			}
		}

		// Token: 0x06001916 RID: 6422 RVA: 0x0008FCA8 File Offset: 0x0008DEA8
		static void xaml(IServiceProvider A_0, NetProbeUiFragment A_1)
		{
			XamlIlContext.Context<NetProbeUiFragment> context = new XamlIlContext.Context<NetProbeUiFragment>(A_0, null, "resm:Content.Client.CartridgeLoader.Cartridges.NetProbeUiFragment.xaml?assembly=Content.Client");
			context.RootObject = A_1;
			context.IntermediateRoot = A_1;
			A_1.Margin = new Thickness(1f, 0f, 2f, 0f);
			PanelContainer panelContainer = new PanelContainer();
			string item = "BackgroundDark";
			panelContainer.StyleClasses.Add(item);
			Control control = panelContainer;
			A_1.XamlChildren.Add(control);
			BoxContainer boxContainer = new BoxContainer();
			boxContainer.Orientation = 1;
			boxContainer.HorizontalExpand = true;
			boxContainer.VerticalExpand = true;
			BoxContainer boxContainer2 = new BoxContainer();
			boxContainer2.Orientation = 1;
			boxContainer2.MinHeight = 32f;
			boxContainer2.MaxHeight = 32f;
			boxContainer2.VerticalAlignment = 1;
			boxContainer2.Margin = new Thickness(3f, 0f, 3f, 0f);
			PanelContainer panelContainer2 = new PanelContainer();
			panelContainer2.Name = "HeaderPanel";
			control = panelContainer2;
			context.RobustNameScope.Register("HeaderPanel", control);
			BoxContainer boxContainer3 = new BoxContainer();
			boxContainer3.Orientation = 0;
			boxContainer3.HorizontalExpand = true;
			boxContainer3.Margin = new Thickness(4f, 4f, 4f, 4f);
			control = new Label
			{
				HorizontalExpand = true,
				Text = (string)new LocExtension("net-probe-label-name").ProvideValue()
			};
			boxContainer3.XamlChildren.Add(control);
			control = new Label
			{
				HorizontalExpand = true,
				Text = (string)new LocExtension("net-probe-label-address").ProvideValue()
			};
			boxContainer3.XamlChildren.Add(control);
			control = new Label
			{
				HorizontalExpand = true,
				Text = (string)new LocExtension("net-probe-label-frequency").ProvideValue()
			};
			boxContainer3.XamlChildren.Add(control);
			control = new Label
			{
				HorizontalExpand = true,
				Text = (string)new LocExtension("net-probe-label-network").ProvideValue()
			};
			boxContainer3.XamlChildren.Add(control);
			control = boxContainer3;
			panelContainer2.XamlChildren.Add(control);
			control = panelContainer2;
			boxContainer2.XamlChildren.Add(control);
			control = boxContainer2;
			boxContainer.XamlChildren.Add(control);
			ScrollContainer scrollContainer = new ScrollContainer();
			scrollContainer.Name = "ScrollContainer";
			control = scrollContainer;
			context.RobustNameScope.Register("ScrollContainer", control);
			scrollContainer.HorizontalExpand = true;
			scrollContainer.VerticalExpand = true;
			BoxContainer boxContainer4 = new BoxContainer();
			boxContainer4.Orientation = 1;
			boxContainer4.Name = "ProbedDeviceContainer";
			control = boxContainer4;
			context.RobustNameScope.Register("ProbedDeviceContainer", control);
			boxContainer4.HorizontalExpand = true;
			boxContainer4.VerticalExpand = true;
			boxContainer4.VerticalAlignment = 1;
			boxContainer4.Margin = new Thickness(3f, 0f, 3f, 0f);
			control = boxContainer4;
			scrollContainer.XamlChildren.Add(control);
			control = scrollContainer;
			boxContainer.XamlChildren.Add(control);
			control = boxContainer;
			A_1.XamlChildren.Add(control);
			if ((control = (A_1 as Control)) != null)
			{
				context.RobustNameScope.Absorb(control.NameScope);
				control.NameScope = context.RobustNameScope;
			}
			context.RobustNameScope.Complete();
		}

		// Token: 0x06001917 RID: 6423 RVA: 0x00090072 File Offset: 0x0008E272
		private static void !XamlIlPopulateTrampoline(NetProbeUiFragment A_0)
		{
			NetProbeUiFragment.Populate:Content.Client.CartridgeLoader.Cartridges.NetProbeUiFragment.xaml(null, A_0);
		}

		// Token: 0x04000CD0 RID: 3280
		[Nullable(1)]
		private readonly StyleBoxFlat _styleBox = new StyleBoxFlat
		{
			BackgroundColor = Color.Transparent,
			BorderColor = Color.FromHex("#5a5a5a", null),
			BorderThickness = new Thickness(0f, 0f, 0f, 1f)
		};
	}
}
