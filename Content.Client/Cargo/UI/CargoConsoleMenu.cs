using System;
using System.Collections.Generic;
using System.Linq;
using System.Runtime.CompilerServices;
using CompiledRobustXaml;
using Content.Client.UserInterface.Controls;
using Content.Shared.Cargo;
using Content.Shared.Cargo.Prototypes;
using Robust.Client.AutoGenerated;
using Robust.Client.GameObjects;
using Robust.Client.Graphics;
using Robust.Client.UserInterface;
using Robust.Client.UserInterface.Controls;
using Robust.Shared.Localization;
using Robust.Shared.Maths;
using Robust.Shared.Prototypes;

namespace Content.Client.Cargo.UI
{
	// Token: 0x02000403 RID: 1027
	[GenerateTypedNameReferences]
	public sealed class CargoConsoleMenu : FancyWindow
	{
		// Token: 0x14000096 RID: 150
		// (add) Token: 0x0600192F RID: 6447 RVA: 0x00090604 File Offset: 0x0008E804
		// (remove) Token: 0x06001930 RID: 6448 RVA: 0x0009063C File Offset: 0x0008E83C
		[Nullable(new byte[]
		{
			2,
			1
		})]
		[Nullable(new byte[]
		{
			2,
			1
		})]
		public event Action<BaseButton.ButtonEventArgs> OnItemSelected;

		// Token: 0x14000097 RID: 151
		// (add) Token: 0x06001931 RID: 6449 RVA: 0x00090674 File Offset: 0x0008E874
		// (remove) Token: 0x06001932 RID: 6450 RVA: 0x000906AC File Offset: 0x0008E8AC
		[Nullable(new byte[]
		{
			2,
			1
		})]
		[Nullable(new byte[]
		{
			2,
			1
		})]
		public event Action<BaseButton.ButtonEventArgs> OnOrderApproved;

		// Token: 0x14000098 RID: 152
		// (add) Token: 0x06001933 RID: 6451 RVA: 0x000906E4 File Offset: 0x0008E8E4
		// (remove) Token: 0x06001934 RID: 6452 RVA: 0x0009071C File Offset: 0x0008E91C
		[Nullable(new byte[]
		{
			2,
			1
		})]
		[Nullable(new byte[]
		{
			2,
			1
		})]
		public event Action<BaseButton.ButtonEventArgs> OnOrderCanceled;

		// Token: 0x06001935 RID: 6453 RVA: 0x00090754 File Offset: 0x0008E954
		[NullableContext(1)]
		public CargoConsoleMenu(IPrototypeManager protoManager, SpriteSystem spriteSystem)
		{
			CargoConsoleMenu.!XamlIlPopulateTrampoline(this);
			this._protoManager = protoManager;
			this._spriteSystem = spriteSystem;
			base.Title = Loc.GetString("cargo-console-menu-title");
			this.SearchBar.OnTextChanged += this.OnSearchBarTextChanged;
			this.Categories.OnItemSelected += this.OnCategoryItemSelected;
		}

		// Token: 0x06001936 RID: 6454 RVA: 0x000907C4 File Offset: 0x0008E9C4
		[NullableContext(1)]
		private void OnCategoryItemSelected(OptionButton.ItemSelectedEventArgs args)
		{
			this.SetCategoryText(args.Id);
			this.PopulateProducts();
		}

		// Token: 0x06001937 RID: 6455 RVA: 0x000907D8 File Offset: 0x0008E9D8
		[NullableContext(1)]
		private void OnSearchBarTextChanged(LineEdit.LineEditEventArgs args)
		{
			this.PopulateProducts();
		}

		// Token: 0x06001938 RID: 6456 RVA: 0x000907E0 File Offset: 0x0008E9E0
		private void SetCategoryText(int id)
		{
			this._category = ((id == 0) ? null : this._categoryStrings[id]);
			this.Categories.SelectId(id);
		}

		// Token: 0x1700052A RID: 1322
		// (get) Token: 0x06001939 RID: 6457 RVA: 0x00090806 File Offset: 0x0008EA06
		[Nullable(1)]
		public IEnumerable<CargoProductPrototype> ProductPrototypes
		{
			[NullableContext(1)]
			get
			{
				return this._protoManager.EnumeratePrototypes<CargoProductPrototype>();
			}
		}

		// Token: 0x0600193A RID: 6458 RVA: 0x00090814 File Offset: 0x0008EA14
		public void PopulateProducts()
		{
			this.Products.RemoveAllChildren();
			List<CargoProductPrototype> list = this.ProductPrototypes.ToList<CargoProductPrototype>();
			list.Sort((CargoProductPrototype x, CargoProductPrototype y) => string.Compare(x.Name, y.Name, StringComparison.CurrentCultureIgnoreCase));
			string text = this.SearchBar.Text.Trim().ToLowerInvariant();
			foreach (CargoProductPrototype cargoProductPrototype in list)
			{
				if ((text.Length == 0 && this._category == null) || (text.Length != 0 && cargoProductPrototype.Name.ToLowerInvariant().Contains(text)) || (text.Length == 0 && this._category != null && cargoProductPrototype.Category.Equals(this._category)))
				{
					CargoProductRow cargoProductRow = new CargoProductRow
					{
						Product = cargoProductPrototype,
						ProductName = 
						{
							Text = cargoProductPrototype.Name
						},
						MainButton = 
						{
							ToolTip = cargoProductPrototype.Description
						},
						PointCost = 
						{
							Text = Loc.GetString("cargo-console-menu-points-amount", new ValueTuple<string, object>[]
							{
								new ValueTuple<string, object>("amount", cargoProductPrototype.PointCost.ToString())
							})
						},
						Icon = 
						{
							Texture = this._spriteSystem.Frame0(cargoProductPrototype.Icon)
						}
					};
					cargoProductRow.MainButton.OnPressed += delegate(BaseButton.ButtonEventArgs args)
					{
						Action<BaseButton.ButtonEventArgs> onItemSelected = this.OnItemSelected;
						if (onItemSelected == null)
						{
							return;
						}
						onItemSelected(args);
					};
					this.Products.AddChild(cargoProductRow);
				}
			}
		}

		// Token: 0x0600193B RID: 6459 RVA: 0x000909C8 File Offset: 0x0008EBC8
		public void PopulateCategories()
		{
			this._categoryStrings.Clear();
			this.Categories.Clear();
			foreach (CargoProductPrototype cargoProductPrototype in this.ProductPrototypes)
			{
				if (!this._categoryStrings.Contains(cargoProductPrototype.Category))
				{
					this._categoryStrings.Add(Loc.GetString(cargoProductPrototype.Category));
				}
			}
			this._categoryStrings.Sort();
			this._categoryStrings.Insert(0, Loc.GetString("cargo-console-menu-populate-categories-all-text"));
			foreach (string text in this._categoryStrings)
			{
				this.Categories.AddItem(text, null);
			}
		}

		// Token: 0x0600193C RID: 6460 RVA: 0x00090AC0 File Offset: 0x0008ECC0
		[NullableContext(1)]
		public void PopulateOrders(IEnumerable<CargoOrderData> orders)
		{
			this.Orders.DisposeAllChildren();
			this.Requests.DisposeAllChildren();
			foreach (CargoOrderData cargoOrderData in orders)
			{
				CargoProductPrototype cargoProductPrototype = this._protoManager.Index<CargoProductPrototype>(cargoOrderData.ProductId);
				string name = cargoProductPrototype.Name;
				CargoOrderRow cargoOrderRow = new CargoOrderRow
				{
					Order = cargoOrderData,
					Icon = 
					{
						Texture = this._spriteSystem.Frame0(cargoProductPrototype.Icon)
					},
					ProductName = 
					{
						Text = Loc.GetString("cargo-console-menu-populate-orders-cargo-order-row-product-name-text", new ValueTuple<string, object>[]
						{
							new ValueTuple<string, object>("productName", name),
							new ValueTuple<string, object>("orderAmount", cargoOrderData.Amount),
							new ValueTuple<string, object>("orderRequester", cargoOrderData.Requester)
						})
					},
					Description = 
					{
						Text = Loc.GetString("cargo-console-menu-order-reason-description", new ValueTuple<string, object>[]
						{
							new ValueTuple<string, object>("reason", cargoOrderData.Reason)
						})
					}
				};
				cargoOrderRow.Cancel.OnPressed += delegate(BaseButton.ButtonEventArgs args)
				{
					Action<BaseButton.ButtonEventArgs> onOrderCanceled = this.OnOrderCanceled;
					if (onOrderCanceled == null)
					{
						return;
					}
					onOrderCanceled(args);
				};
				if (cargoOrderData.Approved)
				{
					cargoOrderRow.Approve.Visible = false;
					cargoOrderRow.Cancel.Visible = false;
					this.Orders.AddChild(cargoOrderRow);
				}
				else
				{
					cargoOrderRow.Approve.OnPressed += delegate(BaseButton.ButtonEventArgs args)
					{
						Action<BaseButton.ButtonEventArgs> onOrderApproved = this.OnOrderApproved;
						if (onOrderApproved == null)
						{
							return;
						}
						onOrderApproved(args);
					};
					this.Requests.AddChild(cargoOrderRow);
				}
			}
		}

		// Token: 0x0600193D RID: 6461 RVA: 0x00090C74 File Offset: 0x0008EE74
		public void UpdateCargoCapacity(int count, int capacity)
		{
			Label shuttleCapacityLabel = this.ShuttleCapacityLabel;
			DefaultInterpolatedStringHandler defaultInterpolatedStringHandler = new DefaultInterpolatedStringHandler(1, 2);
			defaultInterpolatedStringHandler.AppendFormatted<int>(count);
			defaultInterpolatedStringHandler.AppendLiteral("/");
			defaultInterpolatedStringHandler.AppendFormatted<int>(capacity);
			shuttleCapacityLabel.Text = defaultInterpolatedStringHandler.ToStringAndClear();
		}

		// Token: 0x0600193E RID: 6462 RVA: 0x00090CB8 File Offset: 0x0008EEB8
		[NullableContext(1)]
		public void UpdateBankData(string name, int points)
		{
			this.AccountNameLabel.Text = name;
			this.PointsLabel.Text = Loc.GetString("cargo-console-menu-points-amount", new ValueTuple<string, object>[]
			{
				new ValueTuple<string, object>("amount", points.ToString())
			});
		}

		// Token: 0x1700052B RID: 1323
		// (get) Token: 0x0600193F RID: 6463 RVA: 0x00090D04 File Offset: 0x0008EF04
		private Label AccountNameLabel
		{
			get
			{
				return base.FindControl<Label>("AccountNameLabel");
			}
		}

		// Token: 0x1700052C RID: 1324
		// (get) Token: 0x06001940 RID: 6464 RVA: 0x00090D11 File Offset: 0x0008EF11
		private Label PointsLabel
		{
			get
			{
				return base.FindControl<Label>("PointsLabel");
			}
		}

		// Token: 0x1700052D RID: 1325
		// (get) Token: 0x06001941 RID: 6465 RVA: 0x00090D1E File Offset: 0x0008EF1E
		private Label ShuttleCapacityLabel
		{
			get
			{
				return base.FindControl<Label>("ShuttleCapacityLabel");
			}
		}

		// Token: 0x1700052E RID: 1326
		// (get) Token: 0x06001942 RID: 6466 RVA: 0x00090D2B File Offset: 0x0008EF2B
		private OptionButton Categories
		{
			get
			{
				return base.FindControl<OptionButton>("Categories");
			}
		}

		// Token: 0x1700052F RID: 1327
		// (get) Token: 0x06001943 RID: 6467 RVA: 0x0001E1C9 File Offset: 0x0001C3C9
		private LineEdit SearchBar
		{
			get
			{
				return base.FindControl<LineEdit>("SearchBar");
			}
		}

		// Token: 0x17000530 RID: 1328
		// (get) Token: 0x06001944 RID: 6468 RVA: 0x00090D38 File Offset: 0x0008EF38
		private BoxContainer Products
		{
			get
			{
				return base.FindControl<BoxContainer>("Products");
			}
		}

		// Token: 0x17000531 RID: 1329
		// (get) Token: 0x06001945 RID: 6469 RVA: 0x00090D45 File Offset: 0x0008EF45
		private BoxContainer Requests
		{
			get
			{
				return base.FindControl<BoxContainer>("Requests");
			}
		}

		// Token: 0x17000532 RID: 1330
		// (get) Token: 0x06001946 RID: 6470 RVA: 0x00090D52 File Offset: 0x0008EF52
		private BoxContainer Orders
		{
			get
			{
				return base.FindControl<BoxContainer>("Orders");
			}
		}

		// Token: 0x0600194A RID: 6474 RVA: 0x00090D98 File Offset: 0x0008EF98
		static void xaml(IServiceProvider A_0, FancyWindow A_1)
		{
			XamlIlContext.Context<FancyWindow> context = new XamlIlContext.Context<FancyWindow>(A_0, null, "resm:Content.Client.Cargo.UI.CargoConsoleMenu.xaml?assembly=Content.Client");
			context.RootObject = A_1;
			context.IntermediateRoot = A_1;
			A_1.SetSize = new Vector2(600f, 600f);
			A_1.MinSize = new Vector2(600f, 600f);
			BoxContainer boxContainer = new BoxContainer();
			boxContainer.Orientation = 1;
			boxContainer.Margin = new Thickness(5f, 0f, 5f, 0f);
			BoxContainer boxContainer2 = new BoxContainer();
			boxContainer2.Orientation = 0;
			Label label = new Label();
			label.Text = (string)new LocExtension("cargo-console-menu-account-name-label").ProvideValue();
			string item = "LabelKeyText";
			label.StyleClasses.Add(item);
			Control control = label;
			boxContainer2.XamlChildren.Add(control);
			Label label2 = new Label();
			label2.Name = "AccountNameLabel";
			control = label2;
			context.RobustNameScope.Register("AccountNameLabel", control);
			label2.Text = (string)new LocExtension("cargo-console-menu-account-name-none-text").ProvideValue();
			control = label2;
			boxContainer2.XamlChildren.Add(control);
			control = boxContainer2;
			boxContainer.XamlChildren.Add(control);
			BoxContainer boxContainer3 = new BoxContainer();
			boxContainer3.Orientation = 0;
			Label label3 = new Label();
			label3.Text = (string)new LocExtension("cargo-console-menu-points-label").ProvideValue();
			item = "LabelKeyText";
			label3.StyleClasses.Add(item);
			control = label3;
			boxContainer3.XamlChildren.Add(control);
			Label label4 = new Label();
			label4.Name = "PointsLabel";
			control = label4;
			context.RobustNameScope.Register("PointsLabel", control);
			label4.Text = "$0";
			control = label4;
			boxContainer3.XamlChildren.Add(control);
			control = boxContainer3;
			boxContainer.XamlChildren.Add(control);
			BoxContainer boxContainer4 = new BoxContainer();
			boxContainer4.Orientation = 0;
			Label label5 = new Label();
			label5.Text = (string)new LocExtension("cargo-console-menu-order-capacity-label").ProvideValue();
			item = "LabelKeyText";
			label5.StyleClasses.Add(item);
			control = label5;
			boxContainer4.XamlChildren.Add(control);
			Label label6 = new Label();
			label6.Name = "ShuttleCapacityLabel";
			control = label6;
			context.RobustNameScope.Register("ShuttleCapacityLabel", control);
			label6.Text = "0/20";
			control = label6;
			boxContainer4.XamlChildren.Add(control);
			control = boxContainer4;
			boxContainer.XamlChildren.Add(control);
			BoxContainer boxContainer5 = new BoxContainer();
			boxContainer5.Orientation = 0;
			OptionButton optionButton = new OptionButton();
			optionButton.Name = "Categories";
			control = optionButton;
			context.RobustNameScope.Register("Categories", control);
			optionButton.Prefix = (string)new LocExtension("cargo-console-menu-categories-label").ProvideValue();
			optionButton.HorizontalExpand = true;
			control = optionButton;
			boxContainer5.XamlChildren.Add(control);
			LineEdit lineEdit = new LineEdit();
			lineEdit.Name = "SearchBar";
			control = lineEdit;
			context.RobustNameScope.Register("SearchBar", control);
			lineEdit.PlaceHolder = (string)new LocExtension("cargo-console-menu-search-bar-placeholder").ProvideValue();
			lineEdit.HorizontalExpand = true;
			control = lineEdit;
			boxContainer5.XamlChildren.Add(control);
			control = boxContainer5;
			boxContainer.XamlChildren.Add(control);
			ScrollContainer scrollContainer = new ScrollContainer();
			scrollContainer.HorizontalExpand = true;
			scrollContainer.VerticalExpand = true;
			scrollContainer.SizeFlagsStretchRatio = 6f;
			BoxContainer boxContainer6 = new BoxContainer();
			boxContainer6.Name = "Products";
			control = boxContainer6;
			context.RobustNameScope.Register("Products", control);
			boxContainer6.Orientation = 1;
			boxContainer6.HorizontalExpand = true;
			boxContainer6.VerticalExpand = true;
			control = boxContainer6;
			scrollContainer.XamlChildren.Add(control);
			control = scrollContainer;
			boxContainer.XamlChildren.Add(control);
			PanelContainer panelContainer = new PanelContainer();
			panelContainer.VerticalExpand = true;
			panelContainer.SizeFlagsStretchRatio = 6f;
			panelContainer.PanelOverride = new StyleBoxFlat
			{
				BackgroundColor = Color.FromXaml("#000000")
			};
			ScrollContainer scrollContainer2 = new ScrollContainer();
			scrollContainer2.VerticalExpand = true;
			BoxContainer boxContainer7 = new BoxContainer();
			boxContainer7.Orientation = 1;
			control = new Label
			{
				Text = (string)new LocExtension("cargo-console-menu-requests-label").ProvideValue()
			};
			boxContainer7.XamlChildren.Add(control);
			BoxContainer boxContainer8 = new BoxContainer();
			boxContainer8.Name = "Requests";
			control = boxContainer8;
			context.RobustNameScope.Register("Requests", control);
			boxContainer8.Orientation = 1;
			boxContainer8.VerticalExpand = true;
			control = boxContainer8;
			boxContainer7.XamlChildren.Add(control);
			control = new Label
			{
				Text = (string)new LocExtension("cargo-console-menu-orders-label").ProvideValue()
			};
			boxContainer7.XamlChildren.Add(control);
			BoxContainer boxContainer9 = new BoxContainer();
			boxContainer9.Name = "Orders";
			control = boxContainer9;
			context.RobustNameScope.Register("Orders", control);
			boxContainer9.Orientation = 1;
			item = "transparentItemList";
			boxContainer9.StyleClasses.Add(item);
			boxContainer9.VerticalExpand = true;
			control = boxContainer9;
			boxContainer7.XamlChildren.Add(control);
			control = boxContainer7;
			scrollContainer2.XamlChildren.Add(control);
			control = scrollContainer2;
			panelContainer.XamlChildren.Add(control);
			control = panelContainer;
			boxContainer.XamlChildren.Add(control);
			control = new TextureButton
			{
				VerticalExpand = true
			};
			boxContainer.XamlChildren.Add(control);
			control = boxContainer;
			A_1.XamlChildren.Add(control);
			if ((control = (A_1 as Control)) != null)
			{
				context.RobustNameScope.Absorb(control.NameScope);
				control.NameScope = context.RobustNameScope;
			}
			context.RobustNameScope.Complete();
		}

		// Token: 0x0600194B RID: 6475 RVA: 0x0009141C File Offset: 0x0008F61C
		private static void !XamlIlPopulateTrampoline(CargoConsoleMenu A_0)
		{
			CargoConsoleMenu.Populate:Content.Client.Cargo.UI.CargoConsoleMenu.xaml(null, A_0);
		}

		// Token: 0x04000CD8 RID: 3288
		[Nullable(1)]
		private IPrototypeManager _protoManager;

		// Token: 0x04000CD9 RID: 3289
		[Nullable(1)]
		private SpriteSystem _spriteSystem;

		// Token: 0x04000CDD RID: 3293
		[Nullable(1)]
		private readonly List<string> _categoryStrings = new List<string>();

		// Token: 0x04000CDE RID: 3294
		[Nullable(2)]
		private string _category;
	}
}
