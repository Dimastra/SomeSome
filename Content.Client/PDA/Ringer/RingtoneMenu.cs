using System;
using System.Runtime.CompilerServices;
using CompiledRobustXaml;
using Content.Shared.PDA;
using Robust.Client.AutoGenerated;
using Robust.Client.UserInterface;
using Robust.Client.UserInterface.Controls;
using Robust.Client.UserInterface.CustomControls;
using Robust.Shared.Maths;

namespace Content.Client.PDA.Ringer
{
	// Token: 0x020001C8 RID: 456
	[GenerateTypedNameReferences]
	public sealed class RingtoneMenu : DefaultWindow
	{
		// Token: 0x06000BFE RID: 3070 RVA: 0x00045420 File Offset: 0x00043620
		public RingtoneMenu()
		{
			RingtoneMenu.!XamlIlPopulateTrampoline(this);
			this.RingerNoteInputs = new LineEdit[]
			{
				this.RingerNoteOneInput,
				this.RingerNoteTwoInput,
				this.RingerNoteThreeInput,
				this.RingerNoteFourInput
			};
			for (int i = 0; i < this.RingerNoteInputs.Length; i++)
			{
				LineEdit input = this.RingerNoteInputs[i];
				int index = i;
				input.OnTextChanged += delegate(LineEdit.LineEditEventArgs _)
				{
					input.Text = input.Text.ToUpper();
					if (!RingtoneMenu.IsNote(input.Text))
					{
						input.Text = this.PreviousNoteInputs[index];
					}
					else
					{
						this.PreviousNoteInputs[index] = input.Text;
					}
					input.CursorPosition = input.Text.Length;
				};
			}
		}

		// Token: 0x06000BFF RID: 3071 RVA: 0x00003C56 File Offset: 0x00001E56
		protected override BaseWindow.DragMode GetDragModeFor(Vector2 relativeMousePos)
		{
			return 1;
		}

		// Token: 0x06000C00 RID: 3072 RVA: 0x000454E4 File Offset: 0x000436E4
		[NullableContext(1)]
		public static bool IsNote(string input)
		{
			input = input.Replace("#", "sharp");
			Note note;
			return Enum.TryParse<Note>(input, true, out note);
		}

		// Token: 0x17000263 RID: 611
		// (get) Token: 0x06000C01 RID: 3073 RVA: 0x0004550C File Offset: 0x0004370C
		private Label Indent_0Label
		{
			get
			{
				return base.FindControl<Label>("Indent_0Label");
			}
		}

		// Token: 0x17000264 RID: 612
		// (get) Token: 0x06000C02 RID: 3074 RVA: 0x00045519 File Offset: 0x00043719
		public LineEdit RingerNoteOneInput
		{
			get
			{
				return base.FindControl<LineEdit>("RingerNoteOneInput");
			}
		}

		// Token: 0x17000265 RID: 613
		// (get) Token: 0x06000C03 RID: 3075 RVA: 0x00045526 File Offset: 0x00043726
		private Label Indent_1Label
		{
			get
			{
				return base.FindControl<Label>("Indent_1Label");
			}
		}

		// Token: 0x17000266 RID: 614
		// (get) Token: 0x06000C04 RID: 3076 RVA: 0x00045533 File Offset: 0x00043733
		public LineEdit RingerNoteTwoInput
		{
			get
			{
				return base.FindControl<LineEdit>("RingerNoteTwoInput");
			}
		}

		// Token: 0x17000267 RID: 615
		// (get) Token: 0x06000C05 RID: 3077 RVA: 0x00045540 File Offset: 0x00043740
		private Label Indent_2Label
		{
			get
			{
				return base.FindControl<Label>("Indent_2Label");
			}
		}

		// Token: 0x17000268 RID: 616
		// (get) Token: 0x06000C06 RID: 3078 RVA: 0x0004554D File Offset: 0x0004374D
		public LineEdit RingerNoteThreeInput
		{
			get
			{
				return base.FindControl<LineEdit>("RingerNoteThreeInput");
			}
		}

		// Token: 0x17000269 RID: 617
		// (get) Token: 0x06000C07 RID: 3079 RVA: 0x0004555A File Offset: 0x0004375A
		private Label Indent_3Label
		{
			get
			{
				return base.FindControl<Label>("Indent_3Label");
			}
		}

		// Token: 0x1700026A RID: 618
		// (get) Token: 0x06000C08 RID: 3080 RVA: 0x00045567 File Offset: 0x00043767
		public LineEdit RingerNoteFourInput
		{
			get
			{
				return base.FindControl<LineEdit>("RingerNoteFourInput");
			}
		}

		// Token: 0x1700026B RID: 619
		// (get) Token: 0x06000C09 RID: 3081 RVA: 0x00045574 File Offset: 0x00043774
		public Button TestRingerButton
		{
			get
			{
				return base.FindControl<Button>("TestRingerButton");
			}
		}

		// Token: 0x1700026C RID: 620
		// (get) Token: 0x06000C0A RID: 3082 RVA: 0x00045581 File Offset: 0x00043781
		public Button SetRingerButton
		{
			get
			{
				return base.FindControl<Button>("SetRingerButton");
			}
		}

		// Token: 0x06000C0B RID: 3083 RVA: 0x00045590 File Offset: 0x00043790
		static void xaml(IServiceProvider A_0, DefaultWindow A_1)
		{
			XamlIlContext.Context<DefaultWindow> context = new XamlIlContext.Context<DefaultWindow>(A_0, null, "resm:Content.Client.PDA.Ringer.RingtoneMenu.xaml?assembly=Content.Client");
			context.RootObject = A_1;
			context.IntermediateRoot = A_1;
			A_1.Title = (string)new LocExtension("comp-ringer-ui-menu-title").ProvideValue();
			A_1.MinSize = new Vector2(256f, 128f);
			A_1.SetSize = new Vector2(256f, 128f);
			BoxContainer boxContainer = new BoxContainer();
			boxContainer.Orientation = 1;
			boxContainer.VerticalExpand = true;
			boxContainer.HorizontalExpand = true;
			boxContainer.HorizontalAlignment = 2;
			boxContainer.MinSize = new Vector2(50f, 50f);
			PanelContainer panelContainer = new PanelContainer();
			BoxContainer boxContainer2 = new BoxContainer();
			boxContainer2.Orientation = 0;
			boxContainer2.VerticalExpand = true;
			boxContainer2.HorizontalExpand = true;
			boxContainer2.HorizontalAlignment = 2;
			boxContainer2.MinSize = new Vector2(120f, 0f);
			Label label = new Label();
			label.Name = "Indent_0Label";
			Control control = label;
			context.RobustNameScope.Register("Indent_0Label", control);
			label.HorizontalAlignment = 2;
			label.VerticalAlignment = 2;
			label.Text = "♪";
			control = label;
			boxContainer2.XamlChildren.Add(control);
			LineEdit lineEdit = new LineEdit();
			lineEdit.Name = "RingerNoteOneInput";
			control = lineEdit;
			context.RobustNameScope.Register("RingerNoteOneInput", control);
			lineEdit.Access = new AccessLevel?(0);
			lineEdit.MinSize = new Vector2(40f, 0f);
			lineEdit.HorizontalAlignment = 2;
			lineEdit.VerticalAlignment = 2;
			control = lineEdit;
			boxContainer2.XamlChildren.Add(control);
			Label label2 = new Label();
			label2.Name = "Indent_1Label";
			control = label2;
			context.RobustNameScope.Register("Indent_1Label", control);
			label2.HorizontalAlignment = 2;
			label2.VerticalAlignment = 2;
			label2.Text = "-";
			control = label2;
			boxContainer2.XamlChildren.Add(control);
			LineEdit lineEdit2 = new LineEdit();
			lineEdit2.Name = "RingerNoteTwoInput";
			control = lineEdit2;
			context.RobustNameScope.Register("RingerNoteTwoInput", control);
			lineEdit2.Access = new AccessLevel?(0);
			lineEdit2.MinSize = new Vector2(40f, 0f);
			lineEdit2.HorizontalAlignment = 2;
			lineEdit2.VerticalAlignment = 2;
			control = lineEdit2;
			boxContainer2.XamlChildren.Add(control);
			Label label3 = new Label();
			label3.Name = "Indent_2Label";
			control = label3;
			context.RobustNameScope.Register("Indent_2Label", control);
			label3.HorizontalAlignment = 2;
			label3.VerticalAlignment = 2;
			label3.Text = "-";
			control = label3;
			boxContainer2.XamlChildren.Add(control);
			LineEdit lineEdit3 = new LineEdit();
			lineEdit3.Name = "RingerNoteThreeInput";
			control = lineEdit3;
			context.RobustNameScope.Register("RingerNoteThreeInput", control);
			lineEdit3.Access = new AccessLevel?(0);
			lineEdit3.MinSize = new Vector2(40f, 0f);
			lineEdit3.HorizontalAlignment = 2;
			lineEdit3.VerticalAlignment = 2;
			control = lineEdit3;
			boxContainer2.XamlChildren.Add(control);
			Label label4 = new Label();
			label4.Name = "Indent_3Label";
			control = label4;
			context.RobustNameScope.Register("Indent_3Label", control);
			label4.HorizontalAlignment = 2;
			label4.VerticalAlignment = 2;
			label4.Text = "-";
			control = label4;
			boxContainer2.XamlChildren.Add(control);
			LineEdit lineEdit4 = new LineEdit();
			lineEdit4.Name = "RingerNoteFourInput";
			control = lineEdit4;
			context.RobustNameScope.Register("RingerNoteFourInput", control);
			lineEdit4.Access = new AccessLevel?(0);
			lineEdit4.MinSize = new Vector2(40f, 0f);
			lineEdit4.HorizontalAlignment = 2;
			lineEdit4.VerticalAlignment = 2;
			control = lineEdit4;
			boxContainer2.XamlChildren.Add(control);
			control = boxContainer2;
			panelContainer.XamlChildren.Add(control);
			control = panelContainer;
			boxContainer.XamlChildren.Add(control);
			PanelContainer panelContainer2 = new PanelContainer();
			BoxContainer boxContainer3 = new BoxContainer();
			boxContainer3.Orientation = 0;
			boxContainer3.VerticalExpand = true;
			boxContainer3.HorizontalExpand = true;
			boxContainer3.HorizontalAlignment = 2;
			boxContainer3.MinSize = new Vector2(120f, 50f);
			Button button = new Button();
			button.Name = "TestRingerButton";
			control = button;
			context.RobustNameScope.Register("TestRingerButton", control);
			button.Access = new AccessLevel?(0);
			button.Text = (string)new LocExtension("comp-ringer-ui-test-ringtone-button").ProvideValue();
			button.HorizontalAlignment = 2;
			button.VerticalAlignment = 2;
			control = button;
			boxContainer3.XamlChildren.Add(control);
			Button button2 = new Button();
			button2.Name = "SetRingerButton";
			control = button2;
			context.RobustNameScope.Register("SetRingerButton", control);
			button2.Access = new AccessLevel?(0);
			button2.Text = (string)new LocExtension("comp-ringer-ui-set-ringtone-button").ProvideValue();
			button2.HorizontalAlignment = 2;
			button2.VerticalAlignment = 2;
			control = button2;
			boxContainer3.XamlChildren.Add(control);
			control = boxContainer3;
			panelContainer2.XamlChildren.Add(control);
			control = panelContainer2;
			boxContainer.XamlChildren.Add(control);
			control = boxContainer;
			A_1.XamlChildren.Add(control);
			if ((control = (A_1 as Control)) != null)
			{
				context.RobustNameScope.Absorb(control.NameScope);
				control.NameScope = context.RobustNameScope;
			}
			context.RobustNameScope.Complete();
		}

		// Token: 0x06000C0C RID: 3084 RVA: 0x00045BF3 File Offset: 0x00043DF3
		private static void !XamlIlPopulateTrampoline(RingtoneMenu A_0)
		{
			RingtoneMenu.Populate:Content.Client.PDA.Ringer.RingtoneMenu.xaml(null, A_0);
		}

		// Token: 0x040005BD RID: 1469
		[Nullable(1)]
		public string[] PreviousNoteInputs = new string[]
		{
			"A",
			"A",
			"A",
			"A"
		};

		// Token: 0x040005BE RID: 1470
		[Nullable(1)]
		public LineEdit[] RingerNoteInputs;
	}
}
