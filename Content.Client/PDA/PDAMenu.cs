using System;
using System.Collections.Generic;
using System.Runtime.CompilerServices;
using CompiledRobustXaml;
using Content.Client.Message;
using Content.Client.UserInterface.Controls;
using Content.Shared.CartridgeLoader;
using Content.Shared.PDA;
using Robust.Client.AutoGenerated;
using Robust.Client.UserInterface;
using Robust.Client.UserInterface.Controls;
using Robust.Shared.GameObjects;
using Robust.Shared.Localization;
using Robust.Shared.Maths;
using Robust.Shared.Utility;

namespace Content.Client.PDA
{
	// Token: 0x020001BE RID: 446
	[GenerateTypedNameReferences]
	public sealed class PDAMenu : PDAWindow
	{
		// Token: 0x1400004B RID: 75
		// (add) Token: 0x06000B79 RID: 2937 RVA: 0x000426CC File Offset: 0x000408CC
		// (remove) Token: 0x06000B7A RID: 2938 RVA: 0x00042704 File Offset: 0x00040904
		[Nullable(2)]
		[method: NullableContext(2)]
		[Nullable(2)]
		public event Action<EntityUid> OnProgramItemPressed;

		// Token: 0x1400004C RID: 76
		// (add) Token: 0x06000B7B RID: 2939 RVA: 0x0004273C File Offset: 0x0004093C
		// (remove) Token: 0x06000B7C RID: 2940 RVA: 0x00042774 File Offset: 0x00040974
		[Nullable(2)]
		[method: NullableContext(2)]
		[Nullable(2)]
		public event Action<EntityUid> OnUninstallButtonPressed;

		// Token: 0x1400004D RID: 77
		// (add) Token: 0x06000B7D RID: 2941 RVA: 0x000427AC File Offset: 0x000409AC
		// (remove) Token: 0x06000B7E RID: 2942 RVA: 0x000427E4 File Offset: 0x000409E4
		[Nullable(2)]
		[method: NullableContext(2)]
		[Nullable(2)]
		public event Action<EntityUid> OnInstallButtonPressed;

		// Token: 0x06000B7F RID: 2943 RVA: 0x0004281C File Offset: 0x00040A1C
		public PDAMenu()
		{
			PDAMenu.!XamlIlPopulateTrampoline(this);
			this.ViewContainer.OnChildAdded += delegate(Control control)
			{
				control.Visible = false;
			};
			this.HomeButton.IconTexture = new SpriteSpecifier.Texture(new ResourcePath("/Textures/Interface/home.png", "/"));
			this.FlashLightToggleButton.IconTexture = new SpriteSpecifier.Texture(new ResourcePath("/Textures/Interface/light.png", "/"));
			this.EjectPenButton.IconTexture = new SpriteSpecifier.Texture(new ResourcePath("/Textures/Interface/pencil.png", "/"));
			this.EjectIdButton.IconTexture = new SpriteSpecifier.Texture(new ResourcePath("/Textures/Interface/eject.png", "/"));
			this.ProgramCloseButton.IconTexture = new SpriteSpecifier.Texture(new ResourcePath("/Textures/Interface/Nano/cross.svg.png", "/"));
			this.HomeButton.OnPressed += delegate(BaseButton.ButtonEventArgs _)
			{
				this.ToHomeScreen();
			};
			this.ProgramListButton.OnPressed += delegate(BaseButton.ButtonEventArgs _)
			{
				this.HomeButton.IsCurrent = false;
				this.ProgramListButton.IsCurrent = true;
				this.SettingsButton.IsCurrent = false;
				this.ProgramTitle.IsCurrent = false;
				this.ChangeView(1);
			};
			this.SettingsButton.OnPressed += delegate(BaseButton.ButtonEventArgs _)
			{
				this.HomeButton.IsCurrent = false;
				this.ProgramListButton.IsCurrent = false;
				this.SettingsButton.IsCurrent = true;
				this.ProgramTitle.IsCurrent = false;
				this.ChangeView(2);
			};
			this.ProgramTitle.OnPressed += delegate(BaseButton.ButtonEventArgs _)
			{
				this.HomeButton.IsCurrent = false;
				this.ProgramListButton.IsCurrent = false;
				this.SettingsButton.IsCurrent = false;
				this.ProgramTitle.IsCurrent = true;
				this.ChangeView(3);
			};
			this.ProgramCloseButton.OnPressed += delegate(BaseButton.ButtonEventArgs _)
			{
				this.HideProgramHeader();
				this.ToHomeScreen();
			};
			this.HideAllViews();
			this.ToHomeScreen();
		}

		// Token: 0x06000B80 RID: 2944 RVA: 0x0004297C File Offset: 0x00040B7C
		[NullableContext(1)]
		public void UpdateState(PDAUpdateState state)
		{
			this.FlashLightToggleButton.IsActive = state.FlashlightEnabled;
			if (state.PDAOwnerInfo.ActualOwnerName != null)
			{
				this.PdaOwnerLabel.SetMarkup(Loc.GetString("comp-pda-ui-owner", new ValueTuple<string, object>[]
				{
					new ValueTuple<string, object>("ActualOwnerName", state.PDAOwnerInfo.ActualOwnerName)
				}));
			}
			if (state.PDAOwnerInfo.IdOwner != null || state.PDAOwnerInfo.JobTitle != null)
			{
				this.IdInfoLabel.SetMarkup(Loc.GetString("comp-pda-ui", new ValueTuple<string, object>[]
				{
					new ValueTuple<string, object>("Owner", state.PDAOwnerInfo.IdOwner ?? Loc.GetString("comp-pda-ui-unknown")),
					new ValueTuple<string, object>("JobTitle", state.PDAOwnerInfo.JobTitle ?? Loc.GetString("comp-pda-ui-unassigned"))
				}));
			}
			else
			{
				this.IdInfoLabel.SetMarkup(Loc.GetString("comp-pda-ui-blank"));
			}
			this.StationNameLabel.SetMarkup(Loc.GetString("comp-pda-ui-station", new ValueTuple<string, object>[]
			{
				new ValueTuple<string, object>("Station", state.StationName ?? Loc.GetString("comp-pda-ui-unknown"))
			}));
			Label addressLabel = this.AddressLabel;
			string address = state.Address;
			addressLabel.Text = (((address != null) ? address.ToUpper() : null) ?? " - ");
			this.EjectIdButton.IsActive = (state.PDAOwnerInfo.IdOwner != null || state.PDAOwnerInfo.JobTitle != null);
			this.EjectPenButton.IsActive = state.HasPen;
			this.ActivateUplinkButton.Visible = state.HasUplink;
			this.ActivateMusicButton.Visible = state.CanPlayMusic;
		}

		// Token: 0x06000B81 RID: 2945 RVA: 0x00042B40 File Offset: 0x00040D40
		public void UpdateAvailablePrograms([Nullable(new byte[]
		{
			1,
			0,
			1
		})] List<ValueTuple<EntityUid, CartridgeComponent>> programs)
		{
			this.ProgramList.RemoveAllChildren();
			if (programs.Count == 0)
			{
				this.ProgramList.AddChild(new Label
				{
					Text = Loc.GetString("comp-pda-io-no-programs-available"),
					HorizontalAlignment = 2,
					VerticalAlignment = 2,
					VerticalExpand = true
				});
				return;
			}
			BoxContainer boxContainer = this.CreateProgramListRow();
			int num = 1;
			this.ProgramList.AddChild(boxContainer);
			foreach (ValueTuple<EntityUid, CartridgeComponent> valueTuple in programs)
			{
				EntityUid uid = valueTuple.Item1;
				CartridgeComponent item = valueTuple.Item2;
				if (num % 2 != 0)
				{
					boxContainer = this.CreateProgramListRow();
					this.ProgramList.AddChild(boxContainer);
				}
				PDAProgramItem pdaprogramItem = new PDAProgramItem();
				if (item.Icon != null)
				{
					pdaprogramItem.Icon.SetFromSpriteSpecifier(item.Icon);
				}
				pdaprogramItem.OnPressed += delegate(BaseButton.ButtonEventArgs _)
				{
					Action<EntityUid> onProgramItemPressed = this.OnProgramItemPressed;
					if (onProgramItemPressed == null)
					{
						return;
					}
					onProgramItemPressed(uid);
				};
				InstallationStatus installationStatus = item.InstallationStatus;
				if (installationStatus != InstallationStatus.Cartridge)
				{
					if (installationStatus == InstallationStatus.Installed)
					{
						pdaprogramItem.InstallButton.Visible = true;
						pdaprogramItem.InstallButton.Text = Loc.GetString("cartridge-bound-user-interface-uninstall-button");
						pdaprogramItem.InstallButton.OnPressed += delegate(BaseButton.ButtonEventArgs _)
						{
							Action<EntityUid> onUninstallButtonPressed = this.OnUninstallButtonPressed;
							if (onUninstallButtonPressed == null)
							{
								return;
							}
							onUninstallButtonPressed(uid);
						};
					}
				}
				else
				{
					pdaprogramItem.InstallButton.Visible = true;
					pdaprogramItem.InstallButton.Text = Loc.GetString("cartridge-bound-user-interface-install-button");
					pdaprogramItem.InstallButton.OnPressed += delegate(BaseButton.ButtonEventArgs _)
					{
						Action<EntityUid> onInstallButtonPressed = this.OnInstallButtonPressed;
						if (onInstallButtonPressed == null)
						{
							return;
						}
						onInstallButtonPressed(uid);
					};
				}
				pdaprogramItem.ProgramName.Text = Loc.GetString(item.ProgramName);
				pdaprogramItem.SetHeight = 20f;
				boxContainer.AddChild(pdaprogramItem);
				num++;
			}
			if (num % 2 == 0)
			{
				boxContainer.AddChild(new Control
				{
					HorizontalExpand = true
				});
			}
		}

		// Token: 0x06000B82 RID: 2946 RVA: 0x00042D3C File Offset: 0x00040F3C
		public void ToHomeScreen()
		{
			this.HomeButton.IsCurrent = true;
			this.ProgramListButton.IsCurrent = false;
			this.SettingsButton.IsCurrent = false;
			this.ProgramTitle.IsCurrent = false;
			this.ChangeView(0);
		}

		// Token: 0x06000B83 RID: 2947 RVA: 0x00042D75 File Offset: 0x00040F75
		public void HideProgramHeader()
		{
			this.ProgramTitle.IsCurrent = false;
			this.ProgramTitle.Visible = false;
			this.ProgramCloseButton.Visible = false;
			this.ProgramListButton.Visible = true;
			this.SettingsButton.Visible = true;
		}

		// Token: 0x06000B84 RID: 2948 RVA: 0x00042DB4 File Offset: 0x00040FB4
		[NullableContext(1)]
		public void ToProgramView(string title)
		{
			this.HomeButton.IsCurrent = false;
			this.ProgramListButton.IsCurrent = false;
			this.SettingsButton.IsCurrent = false;
			this.ProgramTitle.IsCurrent = false;
			this.ProgramTitle.IsCurrent = true;
			this.ProgramTitle.Visible = true;
			this.ProgramCloseButton.Visible = true;
			this.ProgramListButton.Visible = false;
			this.SettingsButton.Visible = false;
			this.ProgramTitle.LabelText = title;
			this.ChangeView(3);
		}

		// Token: 0x06000B85 RID: 2949 RVA: 0x00042E40 File Offset: 0x00041040
		public void ChangeView(int view)
		{
			if (this.ViewContainer.ChildCount <= view)
			{
				return;
			}
			this.ViewContainer.GetChild(this._currentView).Visible = false;
			this.ViewContainer.GetChild(view).Visible = true;
			this._currentView = view;
		}

		// Token: 0x06000B86 RID: 2950 RVA: 0x00042E8C File Offset: 0x0004108C
		[NullableContext(1)]
		private BoxContainer CreateProgramListRow()
		{
			return new BoxContainer
			{
				Orientation = 0,
				HorizontalExpand = true
			};
		}

		// Token: 0x06000B87 RID: 2951 RVA: 0x00042EA4 File Offset: 0x000410A4
		private void HideAllViews()
		{
			foreach (Control control in this.ViewContainer.Children)
			{
				control.Visible = false;
			}
		}

		// Token: 0x17000228 RID: 552
		// (get) Token: 0x06000B88 RID: 2952 RVA: 0x00042EFC File Offset: 0x000410FC
		private BoxContainer NavigationBar
		{
			get
			{
				return base.FindControl<BoxContainer>("NavigationBar");
			}
		}

		// Token: 0x17000229 RID: 553
		// (get) Token: 0x06000B89 RID: 2953 RVA: 0x00042F09 File Offset: 0x00041109
		private PDANavigationButton HomeButton
		{
			get
			{
				return base.FindControl<PDANavigationButton>("HomeButton");
			}
		}

		// Token: 0x1700022A RID: 554
		// (get) Token: 0x06000B8A RID: 2954 RVA: 0x00042F16 File Offset: 0x00041116
		public PDANavigationButton ProgramListButton
		{
			get
			{
				return base.FindControl<PDANavigationButton>("ProgramListButton");
			}
		}

		// Token: 0x1700022B RID: 555
		// (get) Token: 0x06000B8B RID: 2955 RVA: 0x00042F23 File Offset: 0x00041123
		private PDANavigationButton SettingsButton
		{
			get
			{
				return base.FindControl<PDANavigationButton>("SettingsButton");
			}
		}

		// Token: 0x1700022C RID: 556
		// (get) Token: 0x06000B8C RID: 2956 RVA: 0x00042F30 File Offset: 0x00041130
		public PDANavigationButton ProgramTitle
		{
			get
			{
				return base.FindControl<PDANavigationButton>("ProgramTitle");
			}
		}

		// Token: 0x1700022D RID: 557
		// (get) Token: 0x06000B8D RID: 2957 RVA: 0x00042F3D File Offset: 0x0004113D
		public PDANavigationButton ProgramCloseButton
		{
			get
			{
				return base.FindControl<PDANavigationButton>("ProgramCloseButton");
			}
		}

		// Token: 0x1700022E RID: 558
		// (get) Token: 0x06000B8E RID: 2958 RVA: 0x00042F4A File Offset: 0x0004114A
		public PDANavigationButton FlashLightToggleButton
		{
			get
			{
				return base.FindControl<PDANavigationButton>("FlashLightToggleButton");
			}
		}

		// Token: 0x1700022F RID: 559
		// (get) Token: 0x06000B8F RID: 2959 RVA: 0x00042F57 File Offset: 0x00041157
		public PDANavigationButton EjectPenButton
		{
			get
			{
				return base.FindControl<PDANavigationButton>("EjectPenButton");
			}
		}

		// Token: 0x17000230 RID: 560
		// (get) Token: 0x06000B90 RID: 2960 RVA: 0x00042F64 File Offset: 0x00041164
		public PDANavigationButton EjectIdButton
		{
			get
			{
				return base.FindControl<PDANavigationButton>("EjectIdButton");
			}
		}

		// Token: 0x17000231 RID: 561
		// (get) Token: 0x06000B91 RID: 2961 RVA: 0x00042F71 File Offset: 0x00041171
		public BoxContainer ViewContainer
		{
			get
			{
				return base.FindControl<BoxContainer>("ViewContainer");
			}
		}

		// Token: 0x17000232 RID: 562
		// (get) Token: 0x06000B92 RID: 2962 RVA: 0x00042F7E File Offset: 0x0004117E
		public RichTextLabel PdaOwnerLabel
		{
			get
			{
				return base.FindControl<RichTextLabel>("PdaOwnerLabel");
			}
		}

		// Token: 0x17000233 RID: 563
		// (get) Token: 0x06000B93 RID: 2963 RVA: 0x00042F8B File Offset: 0x0004118B
		public RichTextLabel IdInfoLabel
		{
			get
			{
				return base.FindControl<RichTextLabel>("IdInfoLabel");
			}
		}

		// Token: 0x17000234 RID: 564
		// (get) Token: 0x06000B94 RID: 2964 RVA: 0x00042F98 File Offset: 0x00041198
		public RichTextLabel StationNameLabel
		{
			get
			{
				return base.FindControl<RichTextLabel>("StationNameLabel");
			}
		}

		// Token: 0x17000235 RID: 565
		// (get) Token: 0x06000B95 RID: 2965 RVA: 0x00042FA5 File Offset: 0x000411A5
		private BoxContainer ProgramList
		{
			get
			{
				return base.FindControl<BoxContainer>("ProgramList");
			}
		}

		// Token: 0x17000236 RID: 566
		// (get) Token: 0x06000B96 RID: 2966 RVA: 0x00042FB2 File Offset: 0x000411B2
		private BoxContainer Settings
		{
			get
			{
				return base.FindControl<BoxContainer>("Settings");
			}
		}

		// Token: 0x17000237 RID: 567
		// (get) Token: 0x06000B97 RID: 2967 RVA: 0x00042FBF File Offset: 0x000411BF
		public PDASettingsButton AccessRingtoneButton
		{
			get
			{
				return base.FindControl<PDASettingsButton>("AccessRingtoneButton");
			}
		}

		// Token: 0x17000238 RID: 568
		// (get) Token: 0x06000B98 RID: 2968 RVA: 0x00042FCC File Offset: 0x000411CC
		public PDASettingsButton CrewManifestButton
		{
			get
			{
				return base.FindControl<PDASettingsButton>("CrewManifestButton");
			}
		}

		// Token: 0x17000239 RID: 569
		// (get) Token: 0x06000B99 RID: 2969 RVA: 0x00042FD9 File Offset: 0x000411D9
		public PDASettingsButton ActivateUplinkButton
		{
			get
			{
				return base.FindControl<PDASettingsButton>("ActivateUplinkButton");
			}
		}

		// Token: 0x1700023A RID: 570
		// (get) Token: 0x06000B9A RID: 2970 RVA: 0x00042FE6 File Offset: 0x000411E6
		public PDASettingsButton ActivateMusicButton
		{
			get
			{
				return base.FindControl<PDASettingsButton>("ActivateMusicButton");
			}
		}

		// Token: 0x1700023B RID: 571
		// (get) Token: 0x06000B9B RID: 2971 RVA: 0x00042FF3 File Offset: 0x000411F3
		public BoxContainer ProgramView
		{
			get
			{
				return base.FindControl<BoxContainer>("ProgramView");
			}
		}

		// Token: 0x1700023C RID: 572
		// (get) Token: 0x06000B9C RID: 2972 RVA: 0x00043000 File Offset: 0x00041200
		private BoxContainer ContentFooter
		{
			get
			{
				return base.FindControl<BoxContainer>("ContentFooter");
			}
		}

		// Token: 0x1700023D RID: 573
		// (get) Token: 0x06000B9D RID: 2973 RVA: 0x0004300D File Offset: 0x0004120D
		private Label AddressLabel
		{
			get
			{
				return base.FindControl<Label>("AddressLabel");
			}
		}

		// Token: 0x06000BA3 RID: 2979 RVA: 0x000430DC File Offset: 0x000412DC
		static void xaml(IServiceProvider A_0, PDAWindow A_1)
		{
			XamlIlContext.Context<PDAWindow> context = new XamlIlContext.Context<PDAWindow>(A_0, null, "resm:Content.Client.PDA.PDAMenu.xaml?assembly=Content.Client");
			context.RootObject = A_1;
			context.IntermediateRoot = A_1;
			A_1.MinSize = new Vector2(576f, 450f);
			A_1.SetSize = new Vector2(576f, 450f);
			BoxContainer boxContainer = new BoxContainer();
			boxContainer.Name = "NavigationBar";
			Control control = boxContainer;
			context.RobustNameScope.Register("NavigationBar", control);
			boxContainer.HorizontalExpand = true;
			boxContainer.MinHeight = 32f;
			boxContainer.Margin = new Thickness(1f, 1f, 3f, 0f);
			PDANavigationButton pdanavigationButton = new PDANavigationButton();
			pdanavigationButton.Name = "HomeButton";
			control = pdanavigationButton;
			context.RobustNameScope.Register("HomeButton", control);
			pdanavigationButton.SetWidth = 32f;
			pdanavigationButton.CurrentTabBorderThickness = new Thickness(0f, 0f, 2f, 0f);
			pdanavigationButton.IsCurrent = true;
			control = pdanavigationButton;
			boxContainer.XamlChildren.Add(control);
			PDANavigationButton pdanavigationButton2 = new PDANavigationButton();
			pdanavigationButton2.Name = "ProgramListButton";
			control = pdanavigationButton2;
			context.RobustNameScope.Register("ProgramListButton", control);
			pdanavigationButton2.Access = new AccessLevel?(0);
			pdanavigationButton2.MinWidth = 100f;
			pdanavigationButton2.LabelText = (string)new LocExtension("comp-pda-io-program-list-button").ProvideValue();
			control = pdanavigationButton2;
			boxContainer.XamlChildren.Add(control);
			PDANavigationButton pdanavigationButton3 = new PDANavigationButton();
			pdanavigationButton3.Name = "SettingsButton";
			control = pdanavigationButton3;
			context.RobustNameScope.Register("SettingsButton", control);
			pdanavigationButton3.MinWidth = 100f;
			pdanavigationButton3.LabelText = (string)new LocExtension("comp-pda-io-settings-button").ProvideValue();
			control = pdanavigationButton3;
			boxContainer.XamlChildren.Add(control);
			PDANavigationButton pdanavigationButton4 = new PDANavigationButton();
			pdanavigationButton4.Name = "ProgramTitle";
			control = pdanavigationButton4;
			context.RobustNameScope.Register("ProgramTitle", control);
			pdanavigationButton4.Access = new AccessLevel?(0);
			pdanavigationButton4.BorderThickness = new Thickness(0f, 0f, 0f, 2f);
			pdanavigationButton4.CurrentTabBorderThickness = new Thickness(2f, 0f, 0f, 2f);
			pdanavigationButton4.ActiveBgColor = "#202023";
			pdanavigationButton4.Visible = false;
			control = pdanavigationButton4;
			boxContainer.XamlChildren.Add(control);
			control = new PDANavigationButton
			{
				HorizontalExpand = true
			};
			boxContainer.XamlChildren.Add(control);
			PDANavigationButton pdanavigationButton5 = new PDANavigationButton();
			pdanavigationButton5.Name = "ProgramCloseButton";
			control = pdanavigationButton5;
			context.RobustNameScope.Register("ProgramCloseButton", control);
			pdanavigationButton5.Access = new AccessLevel?(0);
			pdanavigationButton5.IconScale = new Vector2(0.5f, 0.5f);
			pdanavigationButton5.BorderThickness = new Thickness(0f, 0f, 2f, 2f);
			pdanavigationButton5.Visible = false;
			pdanavigationButton5.IsActive = false;
			pdanavigationButton5.SetWidth = 32f;
			control = pdanavigationButton5;
			boxContainer.XamlChildren.Add(control);
			PDANavigationButton pdanavigationButton6 = new PDANavigationButton();
			pdanavigationButton6.Name = "FlashLightToggleButton";
			control = pdanavigationButton6;
			context.RobustNameScope.Register("FlashLightToggleButton", control);
			pdanavigationButton6.Access = new AccessLevel?(0);
			pdanavigationButton6.ToggleMode = true;
			pdanavigationButton6.ActiveFgColor = "#EAEFBB";
			pdanavigationButton6.SetWidth = 32f;
			control = pdanavigationButton6;
			boxContainer.XamlChildren.Add(control);
			PDANavigationButton pdanavigationButton7 = new PDANavigationButton();
			pdanavigationButton7.Name = "EjectPenButton";
			control = pdanavigationButton7;
			context.RobustNameScope.Register("EjectPenButton", control);
			pdanavigationButton7.Access = new AccessLevel?(0);
			pdanavigationButton7.SetWidth = 32f;
			control = pdanavigationButton7;
			boxContainer.XamlChildren.Add(control);
			PDANavigationButton pdanavigationButton8 = new PDANavigationButton();
			pdanavigationButton8.Name = "EjectIdButton";
			control = pdanavigationButton8;
			context.RobustNameScope.Register("EjectIdButton", control);
			pdanavigationButton8.Access = new AccessLevel?(0);
			pdanavigationButton8.SetWidth = 32f;
			control = pdanavigationButton8;
			boxContainer.XamlChildren.Add(control);
			control = boxContainer;
			A_1.XamlChildren.Add(control);
			BoxContainer boxContainer2 = new BoxContainer();
			boxContainer2.Name = "ViewContainer";
			control = boxContainer2;
			context.RobustNameScope.Register("ViewContainer", control);
			boxContainer2.HorizontalExpand = true;
			boxContainer2.VerticalExpand = true;
			boxContainer2.Access = new AccessLevel?(0);
			BoxContainer boxContainer3 = new BoxContainer();
			boxContainer3.Orientation = 1;
			boxContainer3.VerticalExpand = true;
			boxContainer3.HorizontalExpand = true;
			boxContainer3.MinSize = new Vector2(50f, 50f);
			boxContainer3.Margin = new Thickness(8f, 8f, 8f, 8f);
			RichTextLabel richTextLabel = new RichTextLabel();
			richTextLabel.Name = "PdaOwnerLabel";
			control = richTextLabel;
			context.RobustNameScope.Register("PdaOwnerLabel", control);
			richTextLabel.Access = new AccessLevel?(0);
			control = richTextLabel;
			boxContainer3.XamlChildren.Add(control);
			RichTextLabel richTextLabel2 = new RichTextLabel();
			richTextLabel2.Name = "IdInfoLabel";
			control = richTextLabel2;
			context.RobustNameScope.Register("IdInfoLabel", control);
			richTextLabel2.Access = new AccessLevel?(0);
			richTextLabel2.HorizontalExpand = true;
			control = richTextLabel2;
			boxContainer3.XamlChildren.Add(control);
			PanelContainer panelContainer = new PanelContainer();
			BoxContainer boxContainer4 = new BoxContainer();
			boxContainer4.Orientation = 0;
			RichTextLabel richTextLabel3 = new RichTextLabel();
			richTextLabel3.Name = "StationNameLabel";
			control = richTextLabel3;
			context.RobustNameScope.Register("StationNameLabel", control);
			richTextLabel3.Access = new AccessLevel?(0);
			richTextLabel3.HorizontalExpand = true;
			control = richTextLabel3;
			boxContainer4.XamlChildren.Add(control);
			control = boxContainer4;
			panelContainer.XamlChildren.Add(control);
			control = panelContainer;
			boxContainer3.XamlChildren.Add(control);
			control = boxContainer3;
			boxContainer2.XamlChildren.Add(control);
			ScrollContainer scrollContainer = new ScrollContainer();
			scrollContainer.HorizontalExpand = true;
			scrollContainer.VerticalExpand = true;
			scrollContainer.HScrollEnabled = true;
			BoxContainer boxContainer5 = new BoxContainer();
			boxContainer5.Orientation = 1;
			boxContainer5.VerticalExpand = true;
			boxContainer5.HorizontalExpand = true;
			boxContainer5.MinSize = new Vector2(50f, 50f);
			boxContainer5.Name = "ProgramList";
			control = boxContainer5;
			context.RobustNameScope.Register("ProgramList", control);
			boxContainer5.Margin = new Thickness(4f, 4f, 4f, 4f);
			control = boxContainer5;
			scrollContainer.XamlChildren.Add(control);
			control = scrollContainer;
			boxContainer2.XamlChildren.Add(control);
			ScrollContainer scrollContainer2 = new ScrollContainer();
			scrollContainer2.HorizontalExpand = true;
			scrollContainer2.VerticalExpand = true;
			scrollContainer2.HScrollEnabled = true;
			BoxContainer boxContainer6 = new BoxContainer();
			boxContainer6.Orientation = 1;
			boxContainer6.VerticalExpand = true;
			boxContainer6.HorizontalExpand = true;
			boxContainer6.MinSize = new Vector2(50f, 50f);
			boxContainer6.Name = "Settings";
			control = boxContainer6;
			context.RobustNameScope.Register("Settings", control);
			PDASettingsButton pdasettingsButton = new PDASettingsButton();
			pdasettingsButton.Name = "AccessRingtoneButton";
			control = pdasettingsButton;
			context.RobustNameScope.Register("AccessRingtoneButton", control);
			pdasettingsButton.Access = new AccessLevel?(0);
			pdasettingsButton.Text = (string)new LocExtension("comp-pda-ui-ringtone-button").ProvideValue();
			pdasettingsButton.Description = (string)new LocExtension("comp-pda-ui-ringtone-button-description").ProvideValue();
			control = pdasettingsButton;
			boxContainer6.XamlChildren.Add(control);
			PDASettingsButton pdasettingsButton2 = new PDASettingsButton();
			pdasettingsButton2.Name = "CrewManifestButton";
			control = pdasettingsButton2;
			context.RobustNameScope.Register("CrewManifestButton", control);
			pdasettingsButton2.Access = new AccessLevel?(0);
			pdasettingsButton2.Text = (string)new LocExtension("crew-manifest-button-label").ProvideValue();
			pdasettingsButton2.Description = (string)new LocExtension("crew-manifest-button-description").ProvideValue();
			pdasettingsButton2.Visible = false;
			control = pdasettingsButton2;
			boxContainer6.XamlChildren.Add(control);
			PDASettingsButton pdasettingsButton3 = new PDASettingsButton();
			pdasettingsButton3.Name = "ActivateUplinkButton";
			control = pdasettingsButton3;
			context.RobustNameScope.Register("ActivateUplinkButton", control);
			pdasettingsButton3.Access = new AccessLevel?(0);
			pdasettingsButton3.Text = (string)new LocExtension("pda-bound-user-interface-uplink-tab-title").ProvideValue();
			pdasettingsButton3.Description = (string)new LocExtension("pda-bound-user-interface-uplink-tab-description").ProvideValue();
			control = pdasettingsButton3;
			boxContainer6.XamlChildren.Add(control);
			PDASettingsButton pdasettingsButton4 = new PDASettingsButton();
			pdasettingsButton4.Name = "ActivateMusicButton";
			control = pdasettingsButton4;
			context.RobustNameScope.Register("ActivateMusicButton", control);
			pdasettingsButton4.Access = new AccessLevel?(0);
			pdasettingsButton4.Text = (string)new LocExtension("pda-bound-user-interface-music-button").ProvideValue();
			pdasettingsButton4.Description = (string)new LocExtension("pda-bound-user-interface-music-button-description").ProvideValue();
			control = pdasettingsButton4;
			boxContainer6.XamlChildren.Add(control);
			control = boxContainer6;
			scrollContainer2.XamlChildren.Add(control);
			control = scrollContainer2;
			boxContainer2.XamlChildren.Add(control);
			BoxContainer boxContainer7 = new BoxContainer();
			boxContainer7.Orientation = 1;
			boxContainer7.VerticalExpand = true;
			boxContainer7.HorizontalExpand = true;
			boxContainer7.Name = "ProgramView";
			control = boxContainer7;
			context.RobustNameScope.Register("ProgramView", control);
			boxContainer7.Access = new AccessLevel?(0);
			control = boxContainer7;
			boxContainer2.XamlChildren.Add(control);
			control = boxContainer2;
			A_1.XamlChildren.Add(control);
			BoxContainer boxContainer8 = new BoxContainer();
			boxContainer8.Name = "ContentFooter";
			control = boxContainer8;
			context.RobustNameScope.Register("ContentFooter", control);
			boxContainer8.HorizontalExpand = true;
			boxContainer8.SetHeight = 28f;
			boxContainer8.Margin = new Thickness(1f, 0f, 2f, 1f);
			StripeBack stripeBack = new StripeBack();
			stripeBack.HasBottomEdge = false;
			stripeBack.HasMargins = false;
			stripeBack.HorizontalExpand = true;
			Label label = new Label();
			label.Text = "Robust#OS ™";
			label.VerticalAlignment = 2;
			label.Margin = new Thickness(6f, 0f, 6f, 0f);
			string item = "PDAContentFooterText";
			label.StyleClasses.Add(item);
			control = label;
			stripeBack.XamlChildren.Add(control);
			Label label2 = new Label();
			label2.Name = "AddressLabel";
			control = label2;
			context.RobustNameScope.Register("AddressLabel", control);
			label2.VerticalAlignment = 2;
			label2.HorizontalAlignment = 3;
			label2.Margin = new Thickness(6f, 0f, 6f, 0f);
			item = "PDAContentFooterText";
			label2.StyleClasses.Add(item);
			control = label2;
			stripeBack.XamlChildren.Add(control);
			control = stripeBack;
			boxContainer8.XamlChildren.Add(control);
			control = boxContainer8;
			A_1.XamlChildren.Add(control);
			if ((control = (A_1 as Control)) != null)
			{
				context.RobustNameScope.Absorb(control.NameScope);
				control.NameScope = context.RobustNameScope;
			}
			context.RobustNameScope.Complete();
		}

		// Token: 0x06000BA4 RID: 2980 RVA: 0x00043D90 File Offset: 0x00041F90
		private static void !XamlIlPopulateTrampoline(PDAMenu A_0)
		{
			PDAMenu.Populate:Content.Client.PDA.PDAMenu.xaml(null, A_0);
		}

		// Token: 0x04000597 RID: 1431
		public const int HomeView = 0;

		// Token: 0x04000598 RID: 1432
		public const int ProgramListView = 1;

		// Token: 0x04000599 RID: 1433
		public const int SettingsView = 2;

		// Token: 0x0400059A RID: 1434
		public const int ProgramContentView = 3;

		// Token: 0x0400059B RID: 1435
		private int _currentView;
	}
}
