using System;
using System.Runtime.CompilerServices;
using CompiledRobustXaml;
using Content.Client.Resources;
using Content.Client.Stylesheets;
using Content.Client.UserInterface.Controls;
using Robust.Client.AutoGenerated;
using Robust.Client.ResourceManagement;
using Robust.Client.UserInterface;
using Robust.Client.UserInterface.Controls;
using Robust.Client.UserInterface.CustomControls;
using Robust.Shared.IoC;
using Robust.Shared.Maths;
using Robust.Shared.Utility;

namespace Content.Client.Changelog
{
	// Token: 0x020003F6 RID: 1014
	[GenerateTypedNameReferences]
	public sealed class ChangelogWindow : BaseWindow
	{
		// Token: 0x060018E3 RID: 6371 RVA: 0x0008EB82 File Offset: 0x0008CD82
		public ChangelogWindow()
		{
			IoCManager.InjectDependencies<ChangelogWindow>(this);
			ChangelogWindow.!XamlIlPopulateTrampoline(this);
			base.Stylesheet = IoCManager.Resolve<IStylesheetManager>().SheetSpace;
			this.CloseButton.OnPressed += delegate(BaseButton.ButtonEventArgs _)
			{
				this.Close();
			};
		}

		// Token: 0x060018E4 RID: 6372 RVA: 0x0008EBBE File Offset: 0x0008CDBE
		protected override void Opened()
		{
			base.Opened();
			this._changelog.SaveNewReadId();
			this.PopulateChangelog();
		}

		// Token: 0x060018E5 RID: 6373 RVA: 0x0008EBD8 File Offset: 0x0008CDD8
		private void PopulateChangelog()
		{
			ChangelogWindow.<PopulateChangelog>d__4 <PopulateChangelog>d__;
			<PopulateChangelog>d__.<>t__builder = AsyncVoidMethodBuilder.Create();
			<PopulateChangelog>d__.<>4__this = this;
			<PopulateChangelog>d__.<>1__state = -1;
			<PopulateChangelog>d__.<>t__builder.Start<ChangelogWindow.<PopulateChangelog>d__4>(ref <PopulateChangelog>d__);
		}

		// Token: 0x060018E6 RID: 6374 RVA: 0x0008EC10 File Offset: 0x0008CE10
		[NullableContext(1)]
		private TextureRect GetIcon(ChangelogManager.ChangelogLineType type)
		{
			ValueTuple<string, string> valueTuple;
			switch (type)
			{
			case ChangelogManager.ChangelogLineType.Add:
				valueTuple = new ValueTuple<string, string>("plus.svg.192dpi.png", "#6ED18D");
				break;
			case ChangelogManager.ChangelogLineType.Remove:
				valueTuple = new ValueTuple<string, string>("minus.svg.192dpi.png", "#D16E6E");
				break;
			case ChangelogManager.ChangelogLineType.Fix:
				valueTuple = new ValueTuple<string, string>("bug.svg.192dpi.png", "#D1BA6E");
				break;
			case ChangelogManager.ChangelogLineType.Tweak:
				valueTuple = new ValueTuple<string, string>("wrench.svg.192dpi.png", "#6E96D1");
				break;
			default:
				throw new ArgumentOutOfRangeException("type", type, null);
			}
			ValueTuple<string, string> valueTuple2 = valueTuple;
			string item = valueTuple2.Item1;
			string item2 = valueTuple2.Item2;
			return new TextureRect
			{
				Texture = this._resourceCache.GetTexture(new ResourcePath("/Textures/Interface/Changelog/" + item, "/")),
				VerticalAlignment = 1,
				TextureScale = new ValueTuple<float, float>(0.5f, 0.5f),
				Margin = new Thickness(2f, 4f, 6f, 2f),
				ModulateSelfOverride = new Color?(Color.FromHex(item2, null))
			};
		}

		// Token: 0x060018E7 RID: 6375 RVA: 0x00003C56 File Offset: 0x00001E56
		protected override BaseWindow.DragMode GetDragModeFor(Vector2 relativeMousePos)
		{
			return 1;
		}

		// Token: 0x1700051F RID: 1311
		// (get) Token: 0x060018E8 RID: 6376 RVA: 0x0000AD39 File Offset: 0x00008F39
		private TextureButton CloseButton
		{
			get
			{
				return base.FindControl<TextureButton>("CloseButton");
			}
		}

		// Token: 0x17000520 RID: 1312
		// (get) Token: 0x060018E9 RID: 6377 RVA: 0x0008ED28 File Offset: 0x0008CF28
		private BoxContainer ChangelogBody
		{
			get
			{
				return base.FindControl<BoxContainer>("ChangelogBody");
			}
		}

		// Token: 0x17000521 RID: 1313
		// (get) Token: 0x060018EA RID: 6378 RVA: 0x0008ED35 File Offset: 0x0008CF35
		private Label VersionLabel
		{
			get
			{
				return base.FindControl<Label>("VersionLabel");
			}
		}

		// Token: 0x060018ED RID: 6381 RVA: 0x0008ED68 File Offset: 0x0008CF68
		static void xaml(IServiceProvider A_0, ChangelogWindow A_1)
		{
			XamlIlContext.Context<ChangelogWindow> context = new XamlIlContext.Context<ChangelogWindow>(A_0, null, "resm:Content.Client.Changelog.ChangelogWindow.xaml?assembly=Content.Client");
			context.RootObject = A_1;
			context.IntermediateRoot = A_1;
			A_1.SetSize = new Vector2(500f, 400f);
			A_1.MouseFilter = 0;
			PanelContainer panelContainer = new PanelContainer();
			string item = "AngleRect";
			panelContainer.StyleClasses.Add(item);
			Control control = panelContainer;
			A_1.XamlChildren.Add(control);
			BoxContainer boxContainer = new BoxContainer();
			boxContainer.Orientation = 1;
			BoxContainer boxContainer2 = new BoxContainer();
			boxContainer2.Orientation = 0;
			Label label = new Label();
			label.Margin = new Thickness(6f, 0f, 0f, 0f);
			label.HorizontalExpand = true;
			label.Text = (string)new LocExtension("changelog-window-title").ProvideValue();
			label.VAlign = 1;
			item = "LabelHeading";
			label.StyleClasses.Add(item);
			control = label;
			boxContainer2.XamlChildren.Add(control);
			TextureButton textureButton = new TextureButton();
			textureButton.Margin = new Thickness(0f, 0f, 8f, 0f);
			textureButton.Name = "CloseButton";
			control = textureButton;
			context.RobustNameScope.Register("CloseButton", control);
			item = "windowCloseButton";
			textureButton.StyleClasses.Add(item);
			textureButton.VerticalAlignment = 2;
			control = textureButton;
			boxContainer2.XamlChildren.Add(control);
			control = boxContainer2;
			boxContainer.XamlChildren.Add(control);
			control = new HighDivider();
			boxContainer.XamlChildren.Add(control);
			ScrollContainer scrollContainer = new ScrollContainer();
			scrollContainer.VerticalExpand = true;
			scrollContainer.HScrollEnabled = false;
			BoxContainer boxContainer3 = new BoxContainer();
			boxContainer3.Orientation = 1;
			boxContainer3.Name = "ChangelogBody";
			control = boxContainer3;
			context.RobustNameScope.Register("ChangelogBody", control);
			control = boxContainer3;
			scrollContainer.XamlChildren.Add(control);
			control = scrollContainer;
			boxContainer.XamlChildren.Add(control);
			PanelContainer panelContainer2 = new PanelContainer();
			item = "LowDivider";
			panelContainer2.StyleClasses.Add(item);
			control = panelContainer2;
			boxContainer.XamlChildren.Add(control);
			Label label2 = new Label();
			label2.Name = "VersionLabel";
			control = label2;
			context.RobustNameScope.Register("VersionLabel", control);
			label2.HorizontalAlignment = 3;
			item = "LabelSubText";
			label2.StyleClasses.Add(item);
			label2.Margin = new Thickness(4f, 0f, 4f, 0f);
			control = label2;
			boxContainer.XamlChildren.Add(control);
			control = boxContainer;
			A_1.XamlChildren.Add(control);
			if ((control = (A_1 as Control)) != null)
			{
				context.RobustNameScope.Absorb(control.NameScope);
				control.NameScope = context.RobustNameScope;
			}
			context.RobustNameScope.Complete();
		}

		// Token: 0x060018EE RID: 6382 RVA: 0x0008F0BB File Offset: 0x0008D2BB
		private static void !XamlIlPopulateTrampoline(ChangelogWindow A_0)
		{
			ChangelogWindow.Populate:Content.Client.Changelog.ChangelogWindow.xaml(null, A_0);
		}

		// Token: 0x04000CBF RID: 3263
		[Nullable(1)]
		[Dependency]
		private readonly ChangelogManager _changelog;

		// Token: 0x04000CC0 RID: 3264
		[Nullable(1)]
		[Dependency]
		private readonly IResourceCache _resourceCache;
	}
}
