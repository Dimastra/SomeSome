using System;
using System.Runtime.CompilerServices;
using CompiledRobustXaml;
using Content.Shared.Fluids;
using Robust.Client.AutoGenerated;
using Robust.Client.UserInterface;
using Robust.Client.UserInterface.Controls;
using Robust.Shared.GameObjects;
using Robust.Shared.Maths;
using Robust.Shared.Timing;

namespace Content.Client.Fluids.UI
{
	// Token: 0x02000314 RID: 788
	[GenerateTypedNameReferences]
	public sealed class AbsorbentItemStatus : Control
	{
		// Token: 0x060013DD RID: 5085 RVA: 0x00074D95 File Offset: 0x00072F95
		[NullableContext(1)]
		public AbsorbentItemStatus(EntityUid uid, IEntityManager entManager)
		{
			AbsorbentItemStatus.!XamlIlPopulateTrampoline(this);
			this._uid = uid;
			this._entManager = entManager;
		}

		// Token: 0x060013DE RID: 5086 RVA: 0x00074DB4 File Offset: 0x00072FB4
		protected override void FrameUpdate(FrameEventArgs args)
		{
			base.FrameUpdate(args);
			AbsorbentComponent absorbentComponent;
			if (!this._entManager.TryGetComponent<AbsorbentComponent>(this._uid, ref absorbentComponent))
			{
				return;
			}
			this.PercentBar.Value = absorbentComponent.Progress;
		}

		// Token: 0x1700041E RID: 1054
		// (get) Token: 0x060013DF RID: 5087 RVA: 0x00074DEF File Offset: 0x00072FEF
		private ProgressBar PercentBar
		{
			get
			{
				return base.FindControl<ProgressBar>("PercentBar");
			}
		}

		// Token: 0x060013E0 RID: 5088 RVA: 0x00074DFC File Offset: 0x00072FFC
		static void xaml(IServiceProvider A_0, Control A_1)
		{
			XamlIlContext.Context<Control> context = new XamlIlContext.Context<Control>(A_0, null, "resm:Content.Client.Fluids.UI.AbsorbentItemStatus.xaml?assembly=Content.Client");
			context.RootObject = A_1;
			context.IntermediateRoot = A_1;
			BoxContainer boxContainer = new BoxContainer();
			boxContainer.Orientation = 0;
			ProgressBar progressBar = new ProgressBar();
			progressBar.HorizontalExpand = true;
			progressBar.Name = "PercentBar";
			Control control = progressBar;
			context.RobustNameScope.Register("PercentBar", control);
			progressBar.MinSize = new Vector2(20f, 20f);
			progressBar.VerticalAlignment = 2;
			progressBar.Margin = new Thickness(2f, 8f, 4f, 2f);
			progressBar.MaxValue = 1f;
			progressBar.MinValue = 0f;
			control = progressBar;
			boxContainer.XamlChildren.Add(control);
			control = boxContainer;
			A_1.XamlChildren.Add(control);
			if ((control = (A_1 as Control)) != null)
			{
				context.RobustNameScope.Absorb(control.NameScope);
				control.NameScope = context.RobustNameScope;
			}
			context.RobustNameScope.Complete();
		}

		// Token: 0x060013E1 RID: 5089 RVA: 0x00074F36 File Offset: 0x00073136
		private static void !XamlIlPopulateTrampoline(AbsorbentItemStatus A_0)
		{
			AbsorbentItemStatus.Populate:Content.Client.Fluids.UI.AbsorbentItemStatus.xaml(null, A_0);
		}

		// Token: 0x040009F9 RID: 2553
		[Nullable(1)]
		private readonly IEntityManager _entManager;

		// Token: 0x040009FA RID: 2554
		private readonly EntityUid _uid;
	}
}
