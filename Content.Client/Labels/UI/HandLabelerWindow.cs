using System;
using System.Runtime.CompilerServices;
using CompiledRobustXaml;
using Robust.Client.AutoGenerated;
using Robust.Client.UserInterface;
using Robust.Client.UserInterface.Controls;
using Robust.Client.UserInterface.CustomControls;

namespace Content.Client.Labels.UI
{
	// Token: 0x0200028C RID: 652
	[GenerateTypedNameReferences]
	public sealed class HandLabelerWindow : DefaultWindow
	{
		// Token: 0x14000060 RID: 96
		// (add) Token: 0x06001097 RID: 4247 RVA: 0x000635C8 File Offset: 0x000617C8
		// (remove) Token: 0x06001098 RID: 4248 RVA: 0x00063600 File Offset: 0x00061800
		[Nullable(new byte[]
		{
			2,
			1
		})]
		[Nullable(new byte[]
		{
			2,
			1
		})]
		public event Action<string> OnLabelEntered;

		// Token: 0x06001099 RID: 4249 RVA: 0x00063635 File Offset: 0x00061835
		public HandLabelerWindow()
		{
			HandLabelerWindow.!XamlIlPopulateTrampoline(this);
			this.LabelLineEdit.OnTextEntered += delegate(LineEdit.LineEditEventArgs e)
			{
				Action<string> onLabelEntered = this.OnLabelEntered;
				if (onLabelEntered == null)
				{
					return;
				}
				onLabelEntered(e.Text);
			};
		}

		// Token: 0x0600109A RID: 4250 RVA: 0x0006365A File Offset: 0x0006185A
		[NullableContext(1)]
		public void SetCurrentLabel(string label)
		{
			this.LabelLineEdit.Text = label;
		}

		// Token: 0x17000392 RID: 914
		// (get) Token: 0x0600109B RID: 4251 RVA: 0x00063668 File Offset: 0x00061868
		private Label CurrentTextLabel
		{
			get
			{
				return base.FindControl<Label>("CurrentTextLabel");
			}
		}

		// Token: 0x17000393 RID: 915
		// (get) Token: 0x0600109C RID: 4252 RVA: 0x00063675 File Offset: 0x00061875
		private LineEdit LabelLineEdit
		{
			get
			{
				return base.FindControl<LineEdit>("LabelLineEdit");
			}
		}

		// Token: 0x0600109E RID: 4254 RVA: 0x0006369C File Offset: 0x0006189C
		static void xaml(IServiceProvider A_0, DefaultWindow A_1)
		{
			XamlIlContext.Context<DefaultWindow> context = new XamlIlContext.Context<DefaultWindow>(A_0, null, "resm:Content.Client.Labels.UI.HandLabelerWindow.xaml?assembly=Content.Client");
			context.RootObject = A_1;
			context.IntermediateRoot = A_1;
			A_1.Title = "Hand Labeler";
			BoxContainer boxContainer = new BoxContainer();
			boxContainer.Orientation = 1;
			boxContainer.SeparationOverride = new int?(4);
			boxContainer.MinWidth = 150f;
			Label label = new Label();
			label.Name = "CurrentTextLabel";
			Control control = label;
			context.RobustNameScope.Register("CurrentTextLabel", control);
			label.Text = (string)new LocExtension("hand-labeler-current-text-label").ProvideValue();
			control = label;
			boxContainer.XamlChildren.Add(control);
			LineEdit lineEdit = new LineEdit();
			lineEdit.Name = "LabelLineEdit";
			control = lineEdit;
			context.RobustNameScope.Register("LabelLineEdit", control);
			control = lineEdit;
			boxContainer.XamlChildren.Add(control);
			control = boxContainer;
			A_1.XamlChildren.Add(control);
			if ((control = (A_1 as Control)) != null)
			{
				context.RobustNameScope.Absorb(control.NameScope);
				control.NameScope = context.RobustNameScope;
			}
			context.RobustNameScope.Complete();
		}

		// Token: 0x0600109F RID: 4255 RVA: 0x000637F7 File Offset: 0x000619F7
		private static void !XamlIlPopulateTrampoline(HandLabelerWindow A_0)
		{
			HandLabelerWindow.Populate:Content.Client.Labels.UI.HandLabelerWindow.xaml(null, A_0);
		}
	}
}
