using System;
using System.Runtime.CompilerServices;
using CompiledRobustXaml;
using Content.Shared.Chemistry.Reagent;
using Robust.Client.AutoGenerated;
using Robust.Client.Console;
using Robust.Client.UserInterface;
using Robust.Client.UserInterface.Controls;
using Robust.Client.UserInterface.CustomControls;
using Robust.Shared.GameObjects;
using Robust.Shared.IoC;
using Robust.Shared.Localization;
using Robust.Shared.Maths;
using Robust.Shared.Prototypes;

namespace Content.Client.Administration.UI.ManageSolutions
{
	// Token: 0x020004BC RID: 1212
	[GenerateTypedNameReferences]
	public sealed class AddReagentWindow : DefaultWindow
	{
		// Token: 0x06001E89 RID: 7817 RVA: 0x000B2D30 File Offset: 0x000B0F30
		[NullableContext(1)]
		public AddReagentWindow(EntityUid targetEntity, string targetSolution)
		{
			IoCManager.InjectDependencies<AddReagentWindow>(this);
			AddReagentWindow.!XamlIlPopulateTrampoline(this);
			base.Title = Loc.GetString("admin-add-reagent-window-title", new ValueTuple<string, object>[]
			{
				new ValueTuple<string, object>("solution", targetSolution)
			});
			this._targetEntity = targetEntity;
			this._targetSolution = targetSolution;
			this.QuantityBox.AddChild(this._quantitySpin);
			this.ReagentList.OnItemSelected += this.ReagentListSelected;
			this.ReagentList.OnItemDeselected += this.ReagentListDeselected;
			this.SearchBar.OnTextChanged += delegate(LineEdit.LineEditEventArgs _)
			{
				this.UpdateReagentPrototypes(this.SearchBar.Text);
			};
			this._quantitySpin.OnValueChanged += delegate(FloatSpinBox.FloatSpinBoxEventArgs _)
			{
				this.UpdateAddButton();
			};
			this.AddButton.OnPressed += this.AddReagent;
			this.UpdateReagentPrototypes(null);
			this.UpdateAddButton();
		}

		// Token: 0x06001E8A RID: 7818 RVA: 0x000B2E3C File Offset: 0x000B103C
		[NullableContext(1)]
		private void AddReagent(BaseButton.ButtonEventArgs obj)
		{
			if (this._selectedReagent == null)
			{
				return;
			}
			string value = this._quantitySpin.Value.ToString("F2");
			DefaultInterpolatedStringHandler defaultInterpolatedStringHandler = new DefaultInterpolatedStringHandler(14, 4);
			defaultInterpolatedStringHandler.AppendLiteral("addreagent ");
			defaultInterpolatedStringHandler.AppendFormatted<EntityUid>(this._targetEntity);
			defaultInterpolatedStringHandler.AppendLiteral(" ");
			defaultInterpolatedStringHandler.AppendFormatted(this._targetSolution);
			defaultInterpolatedStringHandler.AppendLiteral(" ");
			defaultInterpolatedStringHandler.AppendFormatted(this._selectedReagent.ID);
			defaultInterpolatedStringHandler.AppendLiteral(" ");
			defaultInterpolatedStringHandler.AppendFormatted(value);
			string text = defaultInterpolatedStringHandler.ToStringAndClear();
			this._consoleHost.ExecuteCommand(text);
		}

		// Token: 0x06001E8B RID: 7819 RVA: 0x000B2EED File Offset: 0x000B10ED
		[NullableContext(1)]
		private void ReagentListSelected(ItemList.ItemListSelectedEventArgs obj)
		{
			this._selectedReagent = (ReagentPrototype)obj.ItemList.get_IndexItem(obj.ItemIndex).Metadata;
			this.UpdateAddButton();
		}

		// Token: 0x06001E8C RID: 7820 RVA: 0x000B2F16 File Offset: 0x000B1116
		[NullableContext(1)]
		private void ReagentListDeselected(ItemList.ItemListDeselectedEventArgs obj)
		{
			this._selectedReagent = null;
			this.UpdateAddButton();
		}

		// Token: 0x06001E8D RID: 7821 RVA: 0x000B2F28 File Offset: 0x000B1128
		[NullableContext(2)]
		public void UpdateSolution(string selectedSolution)
		{
			if (selectedSolution == null)
			{
				this.Close();
				base.Dispose();
				return;
			}
			this._targetSolution = selectedSolution;
			base.Title = Loc.GetString("admin-add-reagent-window-title", new ValueTuple<string, object>[]
			{
				new ValueTuple<string, object>("solution", this._targetSolution)
			});
			this.UpdateAddButton();
		}

		// Token: 0x06001E8E RID: 7822 RVA: 0x000B2F80 File Offset: 0x000B1180
		private void UpdateAddButton()
		{
			this.AddButton.Disabled = true;
			if (this._selectedReagent == null)
			{
				this.AddButton.Text = Loc.GetString("admin-add-reagent-window-add-invalid-reagent");
				return;
			}
			this.AddButton.Text = Loc.GetString("admin-add-reagent-window-add", new ValueTuple<string, object>[]
			{
				new ValueTuple<string, object>("quantity", this._quantitySpin.Value.ToString("F2")),
				new ValueTuple<string, object>("reagent", this._selectedReagent.ID)
			});
			this.AddButton.Disabled = false;
		}

		// Token: 0x06001E8F RID: 7823 RVA: 0x000B3024 File Offset: 0x000B1224
		[NullableContext(2)]
		private void UpdateReagentPrototypes(string filter = null)
		{
			this.ReagentList.Clear();
			foreach (ReagentPrototype reagentPrototype in this._prototypeManager.EnumeratePrototypes<ReagentPrototype>())
			{
				if (string.IsNullOrEmpty(filter) || reagentPrototype.ID.ToLowerInvariant().Contains(filter.Trim().ToLowerInvariant()))
				{
					ItemList.Item item = new ItemList.Item(this.ReagentList)
					{
						Metadata = reagentPrototype,
						Text = reagentPrototype.ID
					};
					this.ReagentList.Add(item);
				}
			}
		}

		// Token: 0x1700069B RID: 1691
		// (get) Token: 0x06001E90 RID: 7824 RVA: 0x000B30CC File Offset: 0x000B12CC
		private BoxContainer QuantityBox
		{
			get
			{
				return base.FindControl<BoxContainer>("QuantityBox");
			}
		}

		// Token: 0x1700069C RID: 1692
		// (get) Token: 0x06001E91 RID: 7825 RVA: 0x0001E1C9 File Offset: 0x0001C3C9
		private LineEdit SearchBar
		{
			get
			{
				return base.FindControl<LineEdit>("SearchBar");
			}
		}

		// Token: 0x1700069D RID: 1693
		// (get) Token: 0x06001E92 RID: 7826 RVA: 0x000B30D9 File Offset: 0x000B12D9
		private ItemList ReagentList
		{
			get
			{
				return base.FindControl<ItemList>("ReagentList");
			}
		}

		// Token: 0x1700069E RID: 1694
		// (get) Token: 0x06001E93 RID: 7827 RVA: 0x0006D910 File Offset: 0x0006BB10
		private Button AddButton
		{
			get
			{
				return base.FindControl<Button>("AddButton");
			}
		}

		// Token: 0x06001E96 RID: 7830 RVA: 0x000B3104 File Offset: 0x000B1304
		static void xaml(IServiceProvider A_0, DefaultWindow A_1)
		{
			XamlIlContext.Context<DefaultWindow> context = new XamlIlContext.Context<DefaultWindow>(A_0, null, "resm:Content.Client.Administration.UI.ManageSolutions.AddReagentWindow.xaml?assembly=Content.Client");
			context.RootObject = A_1;
			context.IntermediateRoot = A_1;
			A_1.SetSize = new Vector2(250f, 300f);
			A_1.Margin = new Thickness(4f, 0f, 4f, 0f);
			BoxContainer boxContainer = new BoxContainer();
			boxContainer.Orientation = 1;
			BoxContainer boxContainer2 = new BoxContainer();
			boxContainer2.Name = "QuantityBox";
			Control control = boxContainer2;
			context.RobustNameScope.Register("QuantityBox", control);
			boxContainer2.Orientation = 0;
			boxContainer2.Margin = new Thickness(0f, 4f, 0f, 4f);
			control = new Label
			{
				Text = (string)new LocExtension("admin-add-reagent-window-amount-label").ProvideValue(),
				Margin = new Thickness(0f, 0f, 10f, 0f)
			};
			boxContainer2.XamlChildren.Add(control);
			control = boxContainer2;
			boxContainer.XamlChildren.Add(control);
			LineEdit lineEdit = new LineEdit();
			lineEdit.Name = "SearchBar";
			control = lineEdit;
			context.RobustNameScope.Register("SearchBar", control);
			lineEdit.PlaceHolder = (string)new LocExtension("admin-add-reagent-window-search-placeholder").ProvideValue();
			lineEdit.HorizontalExpand = true;
			lineEdit.Margin = new Thickness(0f, 4f, 0f, 4f);
			control = lineEdit;
			boxContainer.XamlChildren.Add(control);
			ItemList itemList = new ItemList();
			itemList.Name = "ReagentList";
			control = itemList;
			context.RobustNameScope.Register("ReagentList", control);
			itemList.SelectMode = 1;
			itemList.VerticalExpand = true;
			itemList.Margin = new Thickness(0f, 4f, 0f, 4f);
			control = itemList;
			boxContainer.XamlChildren.Add(control);
			Button button = new Button();
			button.Name = "AddButton";
			control = button;
			context.RobustNameScope.Register("AddButton", control);
			button.HorizontalExpand = true;
			button.Margin = new Thickness(0f, 4f, 0f, 4f);
			control = button;
			boxContainer.XamlChildren.Add(control);
			control = boxContainer;
			A_1.XamlChildren.Add(control);
			if ((control = (A_1 as Control)) != null)
			{
				context.RobustNameScope.Absorb(control.NameScope);
				control.NameScope = context.RobustNameScope;
			}
			context.RobustNameScope.Complete();
		}

		// Token: 0x06001E97 RID: 7831 RVA: 0x000B33F1 File Offset: 0x000B15F1
		private static void !XamlIlPopulateTrampoline(AddReagentWindow A_0)
		{
			AddReagentWindow.Populate:Content.Client.Administration.UI.ManageSolutions.AddReagentWindow.xaml(null, A_0);
		}

		// Token: 0x04000ED8 RID: 3800
		[Nullable(1)]
		[Dependency]
		private readonly IPrototypeManager _prototypeManager;

		// Token: 0x04000ED9 RID: 3801
		[Nullable(1)]
		[Dependency]
		private readonly IClientConsoleHost _consoleHost;

		// Token: 0x04000EDA RID: 3802
		private readonly EntityUid _targetEntity;

		// Token: 0x04000EDB RID: 3803
		[Nullable(1)]
		private string _targetSolution;

		// Token: 0x04000EDC RID: 3804
		[Nullable(2)]
		private ReagentPrototype _selectedReagent;

		// Token: 0x04000EDD RID: 3805
		[Nullable(1)]
		private FloatSpinBox _quantitySpin = new FloatSpinBox(1f, 2)
		{
			Value = 10f,
			HorizontalExpand = true
		};
	}
}
