using System;
using System.Runtime.CompilerServices;
using CompiledRobustXaml;
using Content.Client.Administration.UI.CustomControls;
using Robust.Client.AutoGenerated;
using Robust.Client.Graphics;
using Robust.Client.UserInterface;
using Robust.Client.UserInterface.Controls;
using Robust.Shared.GameObjects;

namespace Content.Client.Administration.UI.Tabs.PlayerTab
{
	// Token: 0x02000497 RID: 1175
	[GenerateTypedNameReferences]
	public sealed class PlayerTabEntry : ContainerButton
	{
		// Token: 0x06001CEA RID: 7402 RVA: 0x000A82EC File Offset: 0x000A64EC
		[NullableContext(1)]
		public PlayerTabEntry(string username, string character, string identity, string job, string antagonist, StyleBox styleBox, bool connected)
		{
			PlayerTabEntry.!XamlIlPopulateTrampoline(this);
			this.UsernameLabel.Text = username;
			if (!connected)
			{
				this.UsernameLabel.StyleClasses.Add("Disabled");
			}
			this.JobLabel.Text = job;
			this.CharacterLabel.Text = character;
			if (identity != character)
			{
				Label characterLabel = this.CharacterLabel;
				characterLabel.Text = characterLabel.Text + " [" + identity + "]";
			}
			this.AntagonistLabel.Text = antagonist;
			this.BackgroundColorPanel.PanelOverride = styleBox;
		}

		// Token: 0x170005FD RID: 1533
		// (get) Token: 0x06001CEB RID: 7403 RVA: 0x000A8387 File Offset: 0x000A6587
		private PanelContainer BackgroundColorPanel
		{
			get
			{
				return base.FindControl<PanelContainer>("BackgroundColorPanel");
			}
		}

		// Token: 0x170005FE RID: 1534
		// (get) Token: 0x06001CEC RID: 7404 RVA: 0x000A8394 File Offset: 0x000A6594
		private Label UsernameLabel
		{
			get
			{
				return base.FindControl<Label>("UsernameLabel");
			}
		}

		// Token: 0x170005FF RID: 1535
		// (get) Token: 0x06001CED RID: 7405 RVA: 0x000A83A1 File Offset: 0x000A65A1
		private Label CharacterLabel
		{
			get
			{
				return base.FindControl<Label>("CharacterLabel");
			}
		}

		// Token: 0x17000600 RID: 1536
		// (get) Token: 0x06001CEE RID: 7406 RVA: 0x000A83AE File Offset: 0x000A65AE
		private Label JobLabel
		{
			get
			{
				return base.FindControl<Label>("JobLabel");
			}
		}

		// Token: 0x17000601 RID: 1537
		// (get) Token: 0x06001CEF RID: 7407 RVA: 0x000A83BB File Offset: 0x000A65BB
		private Label AntagonistLabel
		{
			get
			{
				return base.FindControl<Label>("AntagonistLabel");
			}
		}

		// Token: 0x06001CF0 RID: 7408 RVA: 0x000A83C8 File Offset: 0x000A65C8
		static void xaml(IServiceProvider A_0, ContainerButton A_1)
		{
			XamlIlContext.Context<ContainerButton> context = new XamlIlContext.Context<ContainerButton>(A_0, null, "resm:Content.Client.Administration.UI.Tabs.PlayerTab.PlayerTabEntry.xaml?assembly=Content.Client");
			context.RootObject = A_1;
			context.IntermediateRoot = A_1;
			A_1.EnableAllKeybinds = true;
			PanelContainer panelContainer = new PanelContainer();
			panelContainer.Name = "BackgroundColorPanel";
			Control control = panelContainer;
			context.RobustNameScope.Register("BackgroundColorPanel", control);
			control = panelContainer;
			A_1.XamlChildren.Add(control);
			BoxContainer boxContainer = new BoxContainer();
			boxContainer.Orientation = 0;
			boxContainer.HorizontalExpand = true;
			boxContainer.SeparationOverride = new int?(4);
			Label label = new Label();
			label.Name = "UsernameLabel";
			control = label;
			context.RobustNameScope.Register("UsernameLabel", control);
			label.SizeFlagsStretchRatio = 3f;
			label.HorizontalExpand = true;
			label.ClipText = true;
			control = label;
			boxContainer.XamlChildren.Add(control);
			control = new VSeparator();
			boxContainer.XamlChildren.Add(control);
			Label label2 = new Label();
			label2.Name = "CharacterLabel";
			control = label2;
			context.RobustNameScope.Register("CharacterLabel", control);
			label2.SizeFlagsStretchRatio = 3f;
			label2.HorizontalExpand = true;
			label2.ClipText = true;
			control = label2;
			boxContainer.XamlChildren.Add(control);
			control = new VSeparator();
			boxContainer.XamlChildren.Add(control);
			Label label3 = new Label();
			label3.Name = "JobLabel";
			control = label3;
			context.RobustNameScope.Register("JobLabel", control);
			label3.SizeFlagsStretchRatio = 3f;
			label3.HorizontalExpand = true;
			label3.ClipText = true;
			control = label3;
			boxContainer.XamlChildren.Add(control);
			control = new VSeparator();
			boxContainer.XamlChildren.Add(control);
			Label label4 = new Label();
			label4.Name = "AntagonistLabel";
			control = label4;
			context.RobustNameScope.Register("AntagonistLabel", control);
			label4.SizeFlagsStretchRatio = 2f;
			label4.HorizontalExpand = true;
			label4.ClipText = true;
			control = label4;
			boxContainer.XamlChildren.Add(control);
			control = boxContainer;
			A_1.XamlChildren.Add(control);
			if ((control = (A_1 as Control)) != null)
			{
				context.RobustNameScope.Absorb(control.NameScope);
				control.NameScope = context.RobustNameScope;
			}
			context.RobustNameScope.Complete();
		}

		// Token: 0x06001CF1 RID: 7409 RVA: 0x000A8696 File Offset: 0x000A6896
		private static void !XamlIlPopulateTrampoline(PlayerTabEntry A_0)
		{
			PlayerTabEntry.Populate:Content.Client.Administration.UI.Tabs.PlayerTab.PlayerTabEntry.xaml(null, A_0);
		}

		// Token: 0x04000E7B RID: 3707
		public EntityUid? PlayerUid;
	}
}
