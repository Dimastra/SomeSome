using System;
using CompiledRobustXaml;
using Content.Client.Administration.UI.CustomControls;
using Robust.Client.AutoGenerated;
using Robust.Client.UserInterface;
using Robust.Client.UserInterface.Controls;
using Robust.Shared.Maths;

namespace Content.Client.Administration.UI.Tabs.AdminTab
{
	// Token: 0x020004A9 RID: 1193
	[GenerateTypedNameReferences]
	public sealed class AdminTab : Control
	{
		// Token: 0x06001D5E RID: 7518 RVA: 0x000AB787 File Offset: 0x000A9987
		public AdminTab()
		{
			AdminTab.!XamlIlPopulateTrampoline(this);
		}

		// Token: 0x06001D5F RID: 7519 RVA: 0x000AB798 File Offset: 0x000A9998
		static void xaml(IServiceProvider A_0, Control A_1)
		{
			XamlIlContext.Context<Control> context = new XamlIlContext.Context<Control>(A_0, null, "resm:Content.Client.Administration.UI.Tabs.AdminTab.AdminTab.xaml?assembly=Content.Client");
			context.RootObject = A_1;
			context.IntermediateRoot = A_1;
			A_1.Margin = new Thickness(4f, 4f, 4f, 4f);
			A_1.MinSize = new Vector2(50f, 50f);
			BoxContainer boxContainer = new BoxContainer();
			boxContainer.Orientation = 1;
			GridContainer gridContainer = new GridContainer();
			gridContainer.Columns = 3;
			Control control = new UICommandButton
			{
				Command = "kick",
				Text = (string)new LocExtension("admin-player-actions-window-title").ProvideValue(),
				WindowType = typeof(PlayerActionsWindow)
			};
			gridContainer.XamlChildren.Add(control);
			control = new UICommandButton
			{
				Command = "ban",
				Text = (string)new LocExtension("admin-player-actions-window-ban").ProvideValue(),
				WindowType = typeof(BanWindow)
			};
			gridContainer.XamlChildren.Add(control);
			control = new UICommandButton
			{
				Command = "ban",
				Text = (string)new LocExtension("admin-player-actions-window-roleban").ProvideValue(),
				WindowType = typeof(RoleBanWindow)
			};
			gridContainer.XamlChildren.Add(control);
			control = new CommandButton
			{
				Command = "aghost",
				Text = (string)new LocExtension("admin-player-actions-window-admin-ghost").ProvideValue()
			};
			gridContainer.XamlChildren.Add(control);
			control = new UICommandButton
			{
				Command = "tpto",
				Text = (string)new LocExtension("admin-player-actions-window-teleport").ProvideValue(),
				WindowType = typeof(TeleportWindow)
			};
			gridContainer.XamlChildren.Add(control);
			control = new CommandButton
			{
				Command = "permissions",
				Text = (string)new LocExtension("admin-player-actions-window-permissions").ProvideValue()
			};
			gridContainer.XamlChildren.Add(control);
			control = new CommandButton
			{
				Command = "announceui",
				Text = (string)new LocExtension("admin-player-actions-window-announce").ProvideValue()
			};
			gridContainer.XamlChildren.Add(control);
			control = new UICommandButton
			{
				Command = "callshuttle",
				Text = (string)new LocExtension("admin-player-actions-window-shuttle").ProvideValue(),
				WindowType = typeof(AdminShuttleWindow)
			};
			gridContainer.XamlChildren.Add(control);
			control = new CommandButton
			{
				Command = "adminlogs",
				Text = (string)new LocExtension("admin-player-actions-window-admin-logs").ProvideValue()
			};
			gridContainer.XamlChildren.Add(control);
			control = new UICommandButton
			{
				Command = "enableShuttleCall",
				Text = (string)new LocExtension("admin-player-actions-window-shuttle-call").ProvideValue(),
				WindowType = typeof(AdminShuttleCallEnableWindow)
			};
			gridContainer.XamlChildren.Add(control);
			control = gridContainer;
			boxContainer.XamlChildren.Add(control);
			control = boxContainer;
			A_1.XamlChildren.Add(control);
			if ((control = (A_1 as Control)) != null)
			{
				context.RobustNameScope.Absorb(control.NameScope);
				control.NameScope = context.RobustNameScope;
			}
			context.RobustNameScope.Complete();
		}

		// Token: 0x06001D60 RID: 7520 RVA: 0x000ABB60 File Offset: 0x000A9D60
		private static void !XamlIlPopulateTrampoline(AdminTab A_0)
		{
			AdminTab.Populate:Content.Client.Administration.UI.Tabs.AdminTab.AdminTab.xaml(null, A_0);
		}
	}
}
