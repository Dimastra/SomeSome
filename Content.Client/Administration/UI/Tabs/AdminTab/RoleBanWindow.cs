using System;
using System.Collections.Generic;
using System.Linq;
using System.Runtime.CompilerServices;
using CompiledRobustXaml;
using Content.Client.Administration.UI.CustomControls;
using Content.Shared.Administration;
using Content.Shared.Roles;
using Robust.Client.AutoGenerated;
using Robust.Client.Console;
using Robust.Client.UserInterface;
using Robust.Client.UserInterface.Controls;
using Robust.Client.UserInterface.CustomControls;
using Robust.Client.UserInterface.XAML;
using Robust.Shared.Console;
using Robust.Shared.IoC;
using Robust.Shared.Maths;
using Robust.Shared.Prototypes;
using Robust.Shared.Utility;

namespace Content.Client.Administration.UI.Tabs.AdminTab
{
	// Token: 0x020004AC RID: 1196
	[GenerateTypedNameReferences]
	public sealed class RoleBanWindow : DefaultWindow
	{
		// Token: 0x06001D87 RID: 7559 RVA: 0x000ACAF4 File Offset: 0x000AACF4
		public RoleBanWindow()
		{
			RoleBanWindow.!XamlIlPopulateTrampoline(this);
			this.OnNamesChanged();
			this.PlayerNameLine.OnTextChanged += delegate(LineEdit.LineEditEventArgs _)
			{
				this.OnNamesChanged();
			};
			this.MinutesLine.OnTextChanged += this.UpdateButtonsText;
			this.RoleNameLine.OnTextChanged += delegate(LineEdit.LineEditEventArgs _)
			{
				this.OnNamesChanged();
			};
			this.PlayerList.OnSelectionChanged += this.OnPlayerSelectionChanged;
			this.SubmitByNameButton.OnPressed += this.SubmitByNameButtonOnPressed;
			this.SubmitListButton.OnPressed += this.SubmitListButtonOnPressed;
			this.MinutesLine.OnTextChanged += this.UpdateButtonsText;
			this.HourButton.OnPressed += delegate(BaseButton.ButtonEventArgs _)
			{
				this.AddMinutes(60U);
			};
			this.DayButton.OnPressed += delegate(BaseButton.ButtonEventArgs _)
			{
				this.AddMinutes(1440U);
			};
			this.WeekButton.OnPressed += delegate(BaseButton.ButtonEventArgs _)
			{
				this.AddMinutes(10080U);
			};
			this.MonthButton.OnPressed += delegate(BaseButton.ButtonEventArgs _)
			{
				this.AddMinutes(43200U);
			};
			this.CacheJobs();
		}

		// Token: 0x06001D88 RID: 7560 RVA: 0x000ACC38 File Offset: 0x000AAE38
		private void CacheJobs()
		{
			NameScope nameScope = base.FindNameScope();
			IEnumerable<JobPrototype> enumerable = this._prototypeManager.EnumeratePrototypes<JobPrototype>();
			if (nameScope == null)
			{
				return;
			}
			foreach (JobPrototype jobPrototype in enumerable)
			{
				if (jobPrototype.SetPreference && nameScope.Find(jobPrototype.ID) is CheckBox)
				{
					this.CheckBoxes.Add(base.FindControl<CheckBox>(jobPrototype.ID));
				}
			}
		}

		// Token: 0x06001D89 RID: 7561 RVA: 0x000ABC3D File Offset: 0x000A9E3D
		[NullableContext(1)]
		private bool TryGetMinutes(string str, out uint minutes)
		{
			if (string.IsNullOrWhiteSpace(str))
			{
				minutes = 0U;
				return true;
			}
			return uint.TryParse(str, out minutes);
		}

		// Token: 0x06001D8A RID: 7562 RVA: 0x000ACCC4 File Offset: 0x000AAEC4
		private void AddMinutes(uint add)
		{
			uint num;
			if (!this.TryGetMinutes(this.MinutesLine.Text, out num))
			{
				return;
			}
			LineEdit minutesLine = this.MinutesLine;
			DefaultInterpolatedStringHandler defaultInterpolatedStringHandler = new DefaultInterpolatedStringHandler(0, 1);
			defaultInterpolatedStringHandler.AppendFormatted<uint>(num + add);
			minutesLine.Text = defaultInterpolatedStringHandler.ToStringAndClear();
			this.UpdateButtons(num + add);
		}

		// Token: 0x06001D8B RID: 7563 RVA: 0x000ACD18 File Offset: 0x000AAF18
		[NullableContext(1)]
		private void UpdateButtonsText(LineEdit.LineEditEventArgs obj)
		{
			uint minutes;
			if (!this.TryGetMinutes(obj.Text, out minutes))
			{
				return;
			}
			this.UpdateButtons(minutes);
		}

		// Token: 0x06001D8C RID: 7564 RVA: 0x000ACD40 File Offset: 0x000AAF40
		private void UpdateButtons(uint minutes)
		{
			Button hourButton = this.HourButton;
			DefaultInterpolatedStringHandler defaultInterpolatedStringHandler = new DefaultInterpolatedStringHandler(6, 1);
			defaultInterpolatedStringHandler.AppendLiteral("+1h (");
			defaultInterpolatedStringHandler.AppendFormatted<uint>(minutes / 60U);
			defaultInterpolatedStringHandler.AppendLiteral(")");
			hourButton.Text = defaultInterpolatedStringHandler.ToStringAndClear();
			Button dayButton = this.DayButton;
			defaultInterpolatedStringHandler = new DefaultInterpolatedStringHandler(6, 1);
			defaultInterpolatedStringHandler.AppendLiteral("+1d (");
			defaultInterpolatedStringHandler.AppendFormatted<uint>(minutes / 1440U);
			defaultInterpolatedStringHandler.AppendLiteral(")");
			dayButton.Text = defaultInterpolatedStringHandler.ToStringAndClear();
			Button weekButton = this.WeekButton;
			defaultInterpolatedStringHandler = new DefaultInterpolatedStringHandler(6, 1);
			defaultInterpolatedStringHandler.AppendLiteral("+1w (");
			defaultInterpolatedStringHandler.AppendFormatted<uint>(minutes / 10080U);
			defaultInterpolatedStringHandler.AppendLiteral(")");
			weekButton.Text = defaultInterpolatedStringHandler.ToStringAndClear();
			Button monthButton = this.MonthButton;
			defaultInterpolatedStringHandler = new DefaultInterpolatedStringHandler(6, 1);
			defaultInterpolatedStringHandler.AppendLiteral("+1M (");
			defaultInterpolatedStringHandler.AppendFormatted<uint>(minutes / 43200U);
			defaultInterpolatedStringHandler.AppendLiteral(")");
			monthButton.Text = defaultInterpolatedStringHandler.ToStringAndClear();
		}

		// Token: 0x06001D8D RID: 7565 RVA: 0x000ACE50 File Offset: 0x000AB050
		private void OnNamesChanged()
		{
			if (!string.IsNullOrEmpty(this.PlayerNameLine.Text) && !string.IsNullOrEmpty(this.RoleNameLine.Text))
			{
				this.SubmitByNameButton.Disabled = false;
			}
			else
			{
				this.SubmitByNameButton.Disabled = true;
			}
			this.SubmitListButton.Disabled = string.IsNullOrEmpty(this.PlayerNameLine.Text);
		}

		// Token: 0x06001D8E RID: 7566 RVA: 0x000ACEB6 File Offset: 0x000AB0B6
		[NullableContext(2)]
		private void OnPlayerSelectionChanged(PlayerInfo player)
		{
			this.PlayerNameLine.Text = (((player != null) ? player.Username : null) ?? string.Empty);
			this.OnNamesChanged();
		}

		// Token: 0x06001D8F RID: 7567 RVA: 0x000ACEE0 File Offset: 0x000AB0E0
		[NullableContext(1)]
		private void SubmitByNameButtonOnPressed(BaseButton.ButtonEventArgs obj)
		{
			IConsoleHost clientConsoleHost = this._clientConsoleHost;
			DefaultInterpolatedStringHandler defaultInterpolatedStringHandler = new DefaultInterpolatedStringHandler(19, 4);
			defaultInterpolatedStringHandler.AppendLiteral("roleban \"");
			defaultInterpolatedStringHandler.AppendFormatted(this.PlayerNameLine.Text);
			defaultInterpolatedStringHandler.AppendLiteral("\" \"");
			defaultInterpolatedStringHandler.AppendFormatted(this.RoleNameLine.Text);
			defaultInterpolatedStringHandler.AppendLiteral("\" \"");
			defaultInterpolatedStringHandler.AppendFormatted(CommandParsing.Escape(this.ReasonLine.Text));
			defaultInterpolatedStringHandler.AppendLiteral("\" \"");
			defaultInterpolatedStringHandler.AppendFormatted(this.MinutesLine.Text);
			defaultInterpolatedStringHandler.AppendLiteral("\"");
			clientConsoleHost.ExecuteCommand(defaultInterpolatedStringHandler.ToStringAndClear());
		}

		// Token: 0x06001D90 RID: 7568 RVA: 0x000ACF94 File Offset: 0x000AB194
		[NullableContext(1)]
		private void SubmitListButtonOnPressed(BaseButton.ButtonEventArgs obj)
		{
			foreach (CheckBox checkBox in from checkbox in this.CheckBoxes
			where checkbox.Pressed
			select checkbox)
			{
				IConsoleHost clientConsoleHost = this._clientConsoleHost;
				DefaultInterpolatedStringHandler defaultInterpolatedStringHandler = new DefaultInterpolatedStringHandler(19, 4);
				defaultInterpolatedStringHandler.AppendLiteral("roleban \"");
				defaultInterpolatedStringHandler.AppendFormatted(this.PlayerNameLine.Text);
				defaultInterpolatedStringHandler.AppendLiteral("\" \"");
				defaultInterpolatedStringHandler.AppendFormatted(checkBox.Name);
				defaultInterpolatedStringHandler.AppendLiteral("\" \"");
				defaultInterpolatedStringHandler.AppendFormatted(CommandParsing.Escape(this.ReasonLine.Text));
				defaultInterpolatedStringHandler.AppendLiteral("\" \"");
				defaultInterpolatedStringHandler.AppendFormatted(this.MinutesLine.Text);
				defaultInterpolatedStringHandler.AppendLiteral("\"");
				clientConsoleHost.ExecuteCommand(defaultInterpolatedStringHandler.ToStringAndClear());
			}
		}

		// Token: 0x17000631 RID: 1585
		// (get) Token: 0x06001D91 RID: 7569 RVA: 0x000ABEC9 File Offset: 0x000AA0C9
		private LineEdit PlayerNameLine
		{
			get
			{
				return base.FindControl<LineEdit>("PlayerNameLine");
			}
		}

		// Token: 0x17000632 RID: 1586
		// (get) Token: 0x06001D92 RID: 7570 RVA: 0x000ABED6 File Offset: 0x000AA0D6
		private LineEdit ReasonLine
		{
			get
			{
				return base.FindControl<LineEdit>("ReasonLine");
			}
		}

		// Token: 0x17000633 RID: 1587
		// (get) Token: 0x06001D93 RID: 7571 RVA: 0x000ABEE3 File Offset: 0x000AA0E3
		private LineEdit MinutesLine
		{
			get
			{
				return base.FindControl<LineEdit>("MinutesLine");
			}
		}

		// Token: 0x17000634 RID: 1588
		// (get) Token: 0x06001D94 RID: 7572 RVA: 0x000ABEF0 File Offset: 0x000AA0F0
		private Button HourButton
		{
			get
			{
				return base.FindControl<Button>("HourButton");
			}
		}

		// Token: 0x17000635 RID: 1589
		// (get) Token: 0x06001D95 RID: 7573 RVA: 0x000ABEFD File Offset: 0x000AA0FD
		private Button DayButton
		{
			get
			{
				return base.FindControl<Button>("DayButton");
			}
		}

		// Token: 0x17000636 RID: 1590
		// (get) Token: 0x06001D96 RID: 7574 RVA: 0x000ABF0A File Offset: 0x000AA10A
		private Button WeekButton
		{
			get
			{
				return base.FindControl<Button>("WeekButton");
			}
		}

		// Token: 0x17000637 RID: 1591
		// (get) Token: 0x06001D97 RID: 7575 RVA: 0x000ABF17 File Offset: 0x000AA117
		private Button MonthButton
		{
			get
			{
				return base.FindControl<Button>("MonthButton");
			}
		}

		// Token: 0x17000638 RID: 1592
		// (get) Token: 0x06001D98 RID: 7576 RVA: 0x000AD0A4 File Offset: 0x000AB2A4
		private LineEdit RoleNameLine
		{
			get
			{
				return base.FindControl<LineEdit>("RoleNameLine");
			}
		}

		// Token: 0x17000639 RID: 1593
		// (get) Token: 0x06001D99 RID: 7577 RVA: 0x000AD0B1 File Offset: 0x000AB2B1
		private Button SubmitByNameButton
		{
			get
			{
				return base.FindControl<Button>("SubmitByNameButton");
			}
		}

		// Token: 0x1700063A RID: 1594
		// (get) Token: 0x06001D9A RID: 7578 RVA: 0x000ABF31 File Offset: 0x000AA131
		private PlayerListControl PlayerList
		{
			get
			{
				return base.FindControl<PlayerListControl>("PlayerList");
			}
		}

		// Token: 0x1700063B RID: 1595
		// (get) Token: 0x06001D9B RID: 7579 RVA: 0x000AD0BE File Offset: 0x000AB2BE
		private CheckBox Captain
		{
			get
			{
				return base.FindControl<CheckBox>("Captain");
			}
		}

		// Token: 0x1700063C RID: 1596
		// (get) Token: 0x06001D9C RID: 7580 RVA: 0x000AD0CB File Offset: 0x000AB2CB
		private CheckBox HeadOfPersonnel
		{
			get
			{
				return base.FindControl<CheckBox>("HeadOfPersonnel");
			}
		}

		// Token: 0x1700063D RID: 1597
		// (get) Token: 0x06001D9D RID: 7581 RVA: 0x000AD0D8 File Offset: 0x000AB2D8
		private CheckBox HeadOfSecurity
		{
			get
			{
				return base.FindControl<CheckBox>("HeadOfSecurity");
			}
		}

		// Token: 0x1700063E RID: 1598
		// (get) Token: 0x06001D9E RID: 7582 RVA: 0x000AD0E5 File Offset: 0x000AB2E5
		private CheckBox ChiefMedicalOfficer
		{
			get
			{
				return base.FindControl<CheckBox>("ChiefMedicalOfficer");
			}
		}

		// Token: 0x1700063F RID: 1599
		// (get) Token: 0x06001D9F RID: 7583 RVA: 0x000AD0F2 File Offset: 0x000AB2F2
		private CheckBox ChiefEngineer
		{
			get
			{
				return base.FindControl<CheckBox>("ChiefEngineer");
			}
		}

		// Token: 0x17000640 RID: 1600
		// (get) Token: 0x06001DA0 RID: 7584 RVA: 0x000AD0FF File Offset: 0x000AB2FF
		private CheckBox Quartermaster
		{
			get
			{
				return base.FindControl<CheckBox>("Quartermaster");
			}
		}

		// Token: 0x17000641 RID: 1601
		// (get) Token: 0x06001DA1 RID: 7585 RVA: 0x000AD10C File Offset: 0x000AB30C
		private CheckBox ResearchDirector
		{
			get
			{
				return base.FindControl<CheckBox>("ResearchDirector");
			}
		}

		// Token: 0x17000642 RID: 1602
		// (get) Token: 0x06001DA2 RID: 7586 RVA: 0x000AD119 File Offset: 0x000AB319
		private CheckBox Warden
		{
			get
			{
				return base.FindControl<CheckBox>("Warden");
			}
		}

		// Token: 0x17000643 RID: 1603
		// (get) Token: 0x06001DA3 RID: 7587 RVA: 0x000AD126 File Offset: 0x000AB326
		private CheckBox SecurityOfficer
		{
			get
			{
				return base.FindControl<CheckBox>("SecurityOfficer");
			}
		}

		// Token: 0x17000644 RID: 1604
		// (get) Token: 0x06001DA4 RID: 7588 RVA: 0x000AD133 File Offset: 0x000AB333
		private CheckBox Detective
		{
			get
			{
				return base.FindControl<CheckBox>("Detective");
			}
		}

		// Token: 0x17000645 RID: 1605
		// (get) Token: 0x06001DA5 RID: 7589 RVA: 0x000AD140 File Offset: 0x000AB340
		private CheckBox SecurityCadet
		{
			get
			{
				return base.FindControl<CheckBox>("SecurityCadet");
			}
		}

		// Token: 0x17000646 RID: 1606
		// (get) Token: 0x06001DA6 RID: 7590 RVA: 0x000AD14D File Offset: 0x000AB34D
		private CheckBox Chemist
		{
			get
			{
				return base.FindControl<CheckBox>("Chemist");
			}
		}

		// Token: 0x17000647 RID: 1607
		// (get) Token: 0x06001DA7 RID: 7591 RVA: 0x000AD15A File Offset: 0x000AB35A
		private CheckBox MedicalDoctor
		{
			get
			{
				return base.FindControl<CheckBox>("MedicalDoctor");
			}
		}

		// Token: 0x17000648 RID: 1608
		// (get) Token: 0x06001DA8 RID: 7592 RVA: 0x000AD167 File Offset: 0x000AB367
		private CheckBox Psychologist
		{
			get
			{
				return base.FindControl<CheckBox>("Psychologist");
			}
		}

		// Token: 0x17000649 RID: 1609
		// (get) Token: 0x06001DA9 RID: 7593 RVA: 0x000AD174 File Offset: 0x000AB374
		private CheckBox MedicalIntern
		{
			get
			{
				return base.FindControl<CheckBox>("MedicalIntern");
			}
		}

		// Token: 0x1700064A RID: 1610
		// (get) Token: 0x06001DAA RID: 7594 RVA: 0x000AD181 File Offset: 0x000AB381
		private CheckBox AtmosphericTechnician
		{
			get
			{
				return base.FindControl<CheckBox>("AtmosphericTechnician");
			}
		}

		// Token: 0x1700064B RID: 1611
		// (get) Token: 0x06001DAB RID: 7595 RVA: 0x000AD18E File Offset: 0x000AB38E
		private CheckBox StationEngineer
		{
			get
			{
				return base.FindControl<CheckBox>("StationEngineer");
			}
		}

		// Token: 0x1700064C RID: 1612
		// (get) Token: 0x06001DAC RID: 7596 RVA: 0x000AD19B File Offset: 0x000AB39B
		private CheckBox TechnicalAssistant
		{
			get
			{
				return base.FindControl<CheckBox>("TechnicalAssistant");
			}
		}

		// Token: 0x1700064D RID: 1613
		// (get) Token: 0x06001DAD RID: 7597 RVA: 0x000AD1A8 File Offset: 0x000AB3A8
		private CheckBox CargoTechnician
		{
			get
			{
				return base.FindControl<CheckBox>("CargoTechnician");
			}
		}

		// Token: 0x1700064E RID: 1614
		// (get) Token: 0x06001DAE RID: 7598 RVA: 0x000AD1B5 File Offset: 0x000AB3B5
		private CheckBox SalvageSpecialist
		{
			get
			{
				return base.FindControl<CheckBox>("SalvageSpecialist");
			}
		}

		// Token: 0x1700064F RID: 1615
		// (get) Token: 0x06001DAF RID: 7599 RVA: 0x000AD1C2 File Offset: 0x000AB3C2
		private CheckBox Scientist
		{
			get
			{
				return base.FindControl<CheckBox>("Scientist");
			}
		}

		// Token: 0x17000650 RID: 1616
		// (get) Token: 0x06001DB0 RID: 7600 RVA: 0x000AD1CF File Offset: 0x000AB3CF
		private CheckBox ServiceWorker
		{
			get
			{
				return base.FindControl<CheckBox>("ServiceWorker");
			}
		}

		// Token: 0x17000651 RID: 1617
		// (get) Token: 0x06001DB1 RID: 7601 RVA: 0x000AD1DC File Offset: 0x000AB3DC
		private CheckBox Bartender
		{
			get
			{
				return base.FindControl<CheckBox>("Bartender");
			}
		}

		// Token: 0x17000652 RID: 1618
		// (get) Token: 0x06001DB2 RID: 7602 RVA: 0x000AD1E9 File Offset: 0x000AB3E9
		private CheckBox Chef
		{
			get
			{
				return base.FindControl<CheckBox>("Chef");
			}
		}

		// Token: 0x17000653 RID: 1619
		// (get) Token: 0x06001DB3 RID: 7603 RVA: 0x000AD1F6 File Offset: 0x000AB3F6
		private CheckBox Botanist
		{
			get
			{
				return base.FindControl<CheckBox>("Botanist");
			}
		}

		// Token: 0x17000654 RID: 1620
		// (get) Token: 0x06001DB4 RID: 7604 RVA: 0x000AD203 File Offset: 0x000AB403
		private CheckBox Clown
		{
			get
			{
				return base.FindControl<CheckBox>("Clown");
			}
		}

		// Token: 0x17000655 RID: 1621
		// (get) Token: 0x06001DB5 RID: 7605 RVA: 0x000AD210 File Offset: 0x000AB410
		private CheckBox Mime
		{
			get
			{
				return base.FindControl<CheckBox>("Mime");
			}
		}

		// Token: 0x17000656 RID: 1622
		// (get) Token: 0x06001DB6 RID: 7606 RVA: 0x000AD21D File Offset: 0x000AB41D
		private CheckBox Chaplain
		{
			get
			{
				return base.FindControl<CheckBox>("Chaplain");
			}
		}

		// Token: 0x17000657 RID: 1623
		// (get) Token: 0x06001DB7 RID: 7607 RVA: 0x000AD22A File Offset: 0x000AB42A
		private CheckBox Librarian
		{
			get
			{
				return base.FindControl<CheckBox>("Librarian");
			}
		}

		// Token: 0x17000658 RID: 1624
		// (get) Token: 0x06001DB8 RID: 7608 RVA: 0x000AD237 File Offset: 0x000AB437
		private CheckBox Lawyer
		{
			get
			{
				return base.FindControl<CheckBox>("Lawyer");
			}
		}

		// Token: 0x17000659 RID: 1625
		// (get) Token: 0x06001DB9 RID: 7609 RVA: 0x000AD244 File Offset: 0x000AB444
		private CheckBox Janitor
		{
			get
			{
				return base.FindControl<CheckBox>("Janitor");
			}
		}

		// Token: 0x1700065A RID: 1626
		// (get) Token: 0x06001DBA RID: 7610 RVA: 0x000AD251 File Offset: 0x000AB451
		private CheckBox Musician
		{
			get
			{
				return base.FindControl<CheckBox>("Musician");
			}
		}

		// Token: 0x1700065B RID: 1627
		// (get) Token: 0x06001DBB RID: 7611 RVA: 0x000AD25E File Offset: 0x000AB45E
		private CheckBox Reporter
		{
			get
			{
				return base.FindControl<CheckBox>("Reporter");
			}
		}

		// Token: 0x1700065C RID: 1628
		// (get) Token: 0x06001DBC RID: 7612 RVA: 0x000AD26B File Offset: 0x000AB46B
		private CheckBox Zookeeper
		{
			get
			{
				return base.FindControl<CheckBox>("Zookeeper");
			}
		}

		// Token: 0x1700065D RID: 1629
		// (get) Token: 0x06001DBD RID: 7613 RVA: 0x000AD278 File Offset: 0x000AB478
		private CheckBox Cyborg
		{
			get
			{
				return base.FindControl<CheckBox>("Cyborg");
			}
		}

		// Token: 0x1700065E RID: 1630
		// (get) Token: 0x06001DBE RID: 7614 RVA: 0x000AD285 File Offset: 0x000AB485
		private CheckBox MedicalCyborg
		{
			get
			{
				return base.FindControl<CheckBox>("MedicalCyborg");
			}
		}

		// Token: 0x1700065F RID: 1631
		// (get) Token: 0x06001DBF RID: 7615 RVA: 0x000AD292 File Offset: 0x000AB492
		private CheckBox EngCyborg
		{
			get
			{
				return base.FindControl<CheckBox>("EngCyborg");
			}
		}

		// Token: 0x17000660 RID: 1632
		// (get) Token: 0x06001DC0 RID: 7616 RVA: 0x000AD29F File Offset: 0x000AB49F
		private CheckBox SecCyborg
		{
			get
			{
				return base.FindControl<CheckBox>("SecCyborg");
			}
		}

		// Token: 0x17000661 RID: 1633
		// (get) Token: 0x06001DC1 RID: 7617 RVA: 0x000AD2AC File Offset: 0x000AB4AC
		private Button SubmitListButton
		{
			get
			{
				return base.FindControl<Button>("SubmitListButton");
			}
		}

		// Token: 0x06001DC8 RID: 7624 RVA: 0x000AD2F4 File Offset: 0x000AB4F4
		static void xaml(IServiceProvider A_0, DefaultWindow A_1)
		{
			XamlIlContext.Context<DefaultWindow> context = new XamlIlContext.Context<DefaultWindow>(A_0, null, "resm:Content.Client.Administration.UI.Tabs.AdminTab.RoleBanWindow.xaml?assembly=Content.Client");
			context.RootObject = A_1;
			context.IntermediateRoot = A_1;
			A_1.Title = (string)new LocExtension("Job Ban").ProvideValue();
			A_1.MinSize = new Vector2(425f, 325f);
			BoxContainer boxContainer = new BoxContainer();
			boxContainer.Orientation = 1;
			BoxContainer boxContainer2 = new BoxContainer();
			boxContainer2.Orientation = 0;
			Control control = new Label
			{
				Text = (string)new LocExtension("Player").ProvideValue(),
				MinWidth = 100f
			};
			boxContainer2.XamlChildren.Add(control);
			control = new Control
			{
				MinWidth = 50f
			};
			boxContainer2.XamlChildren.Add(control);
			LineEdit lineEdit = new LineEdit();
			lineEdit.Name = "PlayerNameLine";
			control = lineEdit;
			context.RobustNameScope.Register("PlayerNameLine", control);
			lineEdit.MinWidth = 100f;
			lineEdit.HorizontalExpand = true;
			control = lineEdit;
			boxContainer2.XamlChildren.Add(control);
			control = boxContainer2;
			boxContainer.XamlChildren.Add(control);
			BoxContainer boxContainer3 = new BoxContainer();
			boxContainer3.Orientation = 0;
			control = new Label
			{
				Text = (string)new LocExtension("Reason").ProvideValue(),
				MinSize = new Vector2(100f, 0f)
			};
			boxContainer3.XamlChildren.Add(control);
			control = new Control
			{
				MinSize = new Vector2(50f, 0f)
			};
			boxContainer3.XamlChildren.Add(control);
			LineEdit lineEdit2 = new LineEdit();
			lineEdit2.Name = "ReasonLine";
			control = lineEdit2;
			context.RobustNameScope.Register("ReasonLine", control);
			lineEdit2.Text = "...";
			lineEdit2.MinSize = new Vector2(100f, 0f);
			lineEdit2.HorizontalExpand = true;
			control = lineEdit2;
			boxContainer3.XamlChildren.Add(control);
			control = boxContainer3;
			boxContainer.XamlChildren.Add(control);
			BoxContainer boxContainer4 = new BoxContainer();
			boxContainer4.Orientation = 0;
			control = new Label
			{
				Text = (string)new LocExtension("Minutes").ProvideValue(),
				MinWidth = 100f
			};
			boxContainer4.XamlChildren.Add(control);
			control = new Control
			{
				MinWidth = 50f
			};
			boxContainer4.XamlChildren.Add(control);
			LineEdit lineEdit3 = new LineEdit();
			lineEdit3.Name = "MinutesLine";
			control = lineEdit3;
			context.RobustNameScope.Register("MinutesLine", control);
			lineEdit3.Text = "0";
			lineEdit3.MinWidth = 100f;
			lineEdit3.HorizontalExpand = true;
			lineEdit3.PlaceHolder = (string)new LocExtension("0 minutes for a permanent ban").ProvideValue();
			control = lineEdit3;
			boxContainer4.XamlChildren.Add(control);
			Button button = new Button();
			button.Name = "HourButton";
			control = button;
			context.RobustNameScope.Register("HourButton", control);
			button.Text = "+1h (0)";
			control = button;
			boxContainer4.XamlChildren.Add(control);
			Button button2 = new Button();
			button2.Name = "DayButton";
			control = button2;
			context.RobustNameScope.Register("DayButton", control);
			button2.Text = "+1d (0)";
			control = button2;
			boxContainer4.XamlChildren.Add(control);
			Button button3 = new Button();
			button3.Name = "WeekButton";
			control = button3;
			context.RobustNameScope.Register("WeekButton", control);
			button3.Text = "+1w (0)";
			control = button3;
			boxContainer4.XamlChildren.Add(control);
			Button button4 = new Button();
			button4.Name = "MonthButton";
			control = button4;
			context.RobustNameScope.Register("MonthButton", control);
			button4.Text = "+1M (0)";
			control = button4;
			boxContainer4.XamlChildren.Add(control);
			control = boxContainer4;
			boxContainer.XamlChildren.Add(control);
			BoxContainer boxContainer5 = new BoxContainer();
			boxContainer5.Orientation = 0;
			control = new Label
			{
				Text = (string)new LocExtension("Role").ProvideValue(),
				MinWidth = 100f
			};
			boxContainer5.XamlChildren.Add(control);
			control = new Control
			{
				MinWidth = 50f
			};
			boxContainer5.XamlChildren.Add(control);
			LineEdit lineEdit4 = new LineEdit();
			lineEdit4.Name = "RoleNameLine";
			control = lineEdit4;
			context.RobustNameScope.Register("RoleNameLine", control);
			lineEdit4.MinWidth = 100f;
			lineEdit4.HorizontalExpand = true;
			control = lineEdit4;
			boxContainer5.XamlChildren.Add(control);
			Button button5 = new Button();
			button5.Name = "SubmitByNameButton";
			control = button5;
			context.RobustNameScope.Register("SubmitByNameButton", control);
			button5.Text = (string)new LocExtension("Ban By Name").ProvideValue();
			control = button5;
			boxContainer5.XamlChildren.Add(control);
			control = boxContainer5;
			boxContainer.XamlChildren.Add(control);
			BoxContainer boxContainer6 = new BoxContainer();
			boxContainer6.Orientation = 0;
			PlayerListControl playerListControl = new PlayerListControl();
			playerListControl.Name = "PlayerList";
			control = playerListControl;
			context.RobustNameScope.Register("PlayerList", control);
			playerListControl.VerticalExpand = true;
			playerListControl.HorizontalExpand = true;
			control = playerListControl;
			boxContainer6.XamlChildren.Add(control);
			BoxContainer boxContainer7 = new BoxContainer();
			boxContainer7.Orientation = 1;
			BoxContainer boxContainer8 = new BoxContainer();
			boxContainer8.Orientation = 0;
			BoxContainer boxContainer9 = new BoxContainer();
			boxContainer9.Orientation = 1;
			control = new Label
			{
				Text = "Command",
				FontColorOverride = new Color?(Color.FromXaml("Yellow"))
			};
			boxContainer9.XamlChildren.Add(control);
			CheckBox checkBox = new CheckBox();
			checkBox.Name = "Captain";
			control = checkBox;
			context.RobustNameScope.Register("Captain", control);
			checkBox.Text = (string)new LocExtension("Captain").ProvideValue();
			control = checkBox;
			boxContainer9.XamlChildren.Add(control);
			CheckBox checkBox2 = new CheckBox();
			checkBox2.Name = "HeadOfPersonnel";
			control = checkBox2;
			context.RobustNameScope.Register("HeadOfPersonnel", control);
			checkBox2.Text = (string)new LocExtension("Head Of Personnel").ProvideValue();
			control = checkBox2;
			boxContainer9.XamlChildren.Add(control);
			CheckBox checkBox3 = new CheckBox();
			checkBox3.Name = "HeadOfSecurity";
			control = checkBox3;
			context.RobustNameScope.Register("HeadOfSecurity", control);
			checkBox3.Text = (string)new LocExtension("Head Of Security").ProvideValue();
			control = checkBox3;
			boxContainer9.XamlChildren.Add(control);
			CheckBox checkBox4 = new CheckBox();
			checkBox4.Name = "ChiefMedicalOfficer";
			control = checkBox4;
			context.RobustNameScope.Register("ChiefMedicalOfficer", control);
			checkBox4.Text = (string)new LocExtension("Chief Medical Officer").ProvideValue();
			control = checkBox4;
			boxContainer9.XamlChildren.Add(control);
			CheckBox checkBox5 = new CheckBox();
			checkBox5.Name = "ChiefEngineer";
			control = checkBox5;
			context.RobustNameScope.Register("ChiefEngineer", control);
			checkBox5.Text = (string)new LocExtension("Chief Engineer").ProvideValue();
			control = checkBox5;
			boxContainer9.XamlChildren.Add(control);
			CheckBox checkBox6 = new CheckBox();
			checkBox6.Name = "Quartermaster";
			control = checkBox6;
			context.RobustNameScope.Register("Quartermaster", control);
			checkBox6.Text = (string)new LocExtension("Quartermaster").ProvideValue();
			control = checkBox6;
			boxContainer9.XamlChildren.Add(control);
			CheckBox checkBox7 = new CheckBox();
			checkBox7.Name = "ResearchDirector";
			control = checkBox7;
			context.RobustNameScope.Register("ResearchDirector", control);
			checkBox7.Text = (string)new LocExtension("Research Director").ProvideValue();
			control = checkBox7;
			boxContainer9.XamlChildren.Add(control);
			control = new Label
			{
				Text = (string)new LocExtension("Security").ProvideValue(),
				FontColorOverride = new Color?(Color.FromXaml("Red"))
			};
			boxContainer9.XamlChildren.Add(control);
			CheckBox checkBox8 = new CheckBox();
			checkBox8.Name = "Warden";
			control = checkBox8;
			context.RobustNameScope.Register("Warden", control);
			checkBox8.Text = (string)new LocExtension("Warden").ProvideValue();
			control = checkBox8;
			boxContainer9.XamlChildren.Add(control);
			CheckBox checkBox9 = new CheckBox();
			checkBox9.Name = "SecurityOfficer";
			control = checkBox9;
			context.RobustNameScope.Register("SecurityOfficer", control);
			checkBox9.Text = (string)new LocExtension("Officer").ProvideValue();
			control = checkBox9;
			boxContainer9.XamlChildren.Add(control);
			CheckBox checkBox10 = new CheckBox();
			checkBox10.Name = "Detective";
			control = checkBox10;
			context.RobustNameScope.Register("Detective", control);
			checkBox10.Text = (string)new LocExtension("Detective").ProvideValue();
			control = checkBox10;
			boxContainer9.XamlChildren.Add(control);
			CheckBox checkBox11 = new CheckBox();
			checkBox11.Name = "SecurityCadet";
			control = checkBox11;
			context.RobustNameScope.Register("SecurityCadet", control);
			checkBox11.Text = (string)new LocExtension("Cadet").ProvideValue();
			control = checkBox11;
			boxContainer9.XamlChildren.Add(control);
			control = new Label
			{
				Text = (string)new LocExtension("Medical").ProvideValue(),
				FontColorOverride = new Color?(Color.FromXaml("DeepSkyBlue"))
			};
			boxContainer9.XamlChildren.Add(control);
			CheckBox checkBox12 = new CheckBox();
			checkBox12.Name = "Chemist";
			control = checkBox12;
			context.RobustNameScope.Register("Chemist", control);
			checkBox12.Text = (string)new LocExtension("Chemist").ProvideValue();
			control = checkBox12;
			boxContainer9.XamlChildren.Add(control);
			CheckBox checkBox13 = new CheckBox();
			checkBox13.Name = "MedicalDoctor";
			control = checkBox13;
			context.RobustNameScope.Register("MedicalDoctor", control);
			checkBox13.Text = (string)new LocExtension("Doctor").ProvideValue();
			control = checkBox13;
			boxContainer9.XamlChildren.Add(control);
			CheckBox checkBox14 = new CheckBox();
			checkBox14.Name = "Psychologist";
			control = checkBox14;
			context.RobustNameScope.Register("Psychologist", control);
			checkBox14.Text = (string)new LocExtension("Psychologist").ProvideValue();
			control = checkBox14;
			boxContainer9.XamlChildren.Add(control);
			CheckBox checkBox15 = new CheckBox();
			checkBox15.Name = "MedicalIntern";
			control = checkBox15;
			context.RobustNameScope.Register("MedicalIntern", control);
			checkBox15.Text = (string)new LocExtension("Intern").ProvideValue();
			control = checkBox15;
			boxContainer9.XamlChildren.Add(control);
			control = new Label
			{
				Text = (string)new LocExtension("Engineering").ProvideValue(),
				FontColorOverride = new Color?(Color.FromXaml("Orange"))
			};
			boxContainer9.XamlChildren.Add(control);
			CheckBox checkBox16 = new CheckBox();
			checkBox16.Name = "AtmosphericTechnician";
			control = checkBox16;
			context.RobustNameScope.Register("AtmosphericTechnician", control);
			checkBox16.Text = (string)new LocExtension("Atmospheric Technician").ProvideValue();
			control = checkBox16;
			boxContainer9.XamlChildren.Add(control);
			CheckBox checkBox17 = new CheckBox();
			checkBox17.Name = "StationEngineer";
			control = checkBox17;
			context.RobustNameScope.Register("StationEngineer", control);
			checkBox17.Text = (string)new LocExtension("Engineer").ProvideValue();
			control = checkBox17;
			boxContainer9.XamlChildren.Add(control);
			CheckBox checkBox18 = new CheckBox();
			checkBox18.Name = "TechnicalAssistant";
			control = checkBox18;
			context.RobustNameScope.Register("TechnicalAssistant", control);
			checkBox18.Text = (string)new LocExtension("Technical Assistant").ProvideValue();
			control = checkBox18;
			boxContainer9.XamlChildren.Add(control);
			control = boxContainer9;
			boxContainer8.XamlChildren.Add(control);
			control = new Control
			{
				MinWidth = 30f
			};
			boxContainer8.XamlChildren.Add(control);
			BoxContainer boxContainer10 = new BoxContainer();
			boxContainer10.Orientation = 1;
			control = new Label
			{
				Text = (string)new LocExtension("Cargo").ProvideValue(),
				FontColorOverride = new Color?(Color.FromXaml("Chocolate"))
			};
			boxContainer10.XamlChildren.Add(control);
			CheckBox checkBox19 = new CheckBox();
			checkBox19.Name = "CargoTechnician";
			control = checkBox19;
			context.RobustNameScope.Register("CargoTechnician", control);
			checkBox19.Text = (string)new LocExtension("Cargo Technician").ProvideValue();
			control = checkBox19;
			boxContainer10.XamlChildren.Add(control);
			CheckBox checkBox20 = new CheckBox();
			checkBox20.Name = "SalvageSpecialist";
			control = checkBox20;
			context.RobustNameScope.Register("SalvageSpecialist", control);
			checkBox20.Text = (string)new LocExtension("Salvage Specialist").ProvideValue();
			control = checkBox20;
			boxContainer10.XamlChildren.Add(control);
			control = new Label
			{
				Text = (string)new LocExtension("Science").ProvideValue(),
				FontColorOverride = new Color?(Color.FromXaml("MediumOrchid"))
			};
			boxContainer10.XamlChildren.Add(control);
			CheckBox checkBox21 = new CheckBox();
			checkBox21.Name = "Scientist";
			control = checkBox21;
			context.RobustNameScope.Register("Scientist", control);
			checkBox21.Text = (string)new LocExtension("Scientist").ProvideValue();
			control = checkBox21;
			boxContainer10.XamlChildren.Add(control);
			control = new Label
			{
				Text = (string)new LocExtension("Civilian and Service").ProvideValue(),
				FontColorOverride = new Color?(Color.FromXaml("Lime"))
			};
			boxContainer10.XamlChildren.Add(control);
			CheckBox checkBox22 = new CheckBox();
			checkBox22.Name = "ServiceWorker";
			control = checkBox22;
			context.RobustNameScope.Register("ServiceWorker", control);
			checkBox22.Text = (string)new LocExtension("Service Worker").ProvideValue();
			control = checkBox22;
			boxContainer10.XamlChildren.Add(control);
			CheckBox checkBox23 = new CheckBox();
			checkBox23.Name = "Bartender";
			control = checkBox23;
			context.RobustNameScope.Register("Bartender", control);
			checkBox23.Text = (string)new LocExtension("Bartender").ProvideValue();
			control = checkBox23;
			boxContainer10.XamlChildren.Add(control);
			CheckBox checkBox24 = new CheckBox();
			checkBox24.Name = "Chef";
			control = checkBox24;
			context.RobustNameScope.Register("Chef", control);
			checkBox24.Text = (string)new LocExtension("Chef").ProvideValue();
			control = checkBox24;
			boxContainer10.XamlChildren.Add(control);
			CheckBox checkBox25 = new CheckBox();
			checkBox25.Name = "Botanist";
			control = checkBox25;
			context.RobustNameScope.Register("Botanist", control);
			checkBox25.Text = (string)new LocExtension("Botanist").ProvideValue();
			control = checkBox25;
			boxContainer10.XamlChildren.Add(control);
			CheckBox checkBox26 = new CheckBox();
			checkBox26.Name = "Clown";
			control = checkBox26;
			context.RobustNameScope.Register("Clown", control);
			checkBox26.Text = (string)new LocExtension("Clown").ProvideValue();
			control = checkBox26;
			boxContainer10.XamlChildren.Add(control);
			CheckBox checkBox27 = new CheckBox();
			checkBox27.Name = "Mime";
			control = checkBox27;
			context.RobustNameScope.Register("Mime", control);
			checkBox27.Text = (string)new LocExtension("Mime").ProvideValue();
			control = checkBox27;
			boxContainer10.XamlChildren.Add(control);
			CheckBox checkBox28 = new CheckBox();
			checkBox28.Name = "Chaplain";
			control = checkBox28;
			context.RobustNameScope.Register("Chaplain", control);
			checkBox28.Text = (string)new LocExtension("Chaplain").ProvideValue();
			control = checkBox28;
			boxContainer10.XamlChildren.Add(control);
			CheckBox checkBox29 = new CheckBox();
			checkBox29.Name = "Librarian";
			control = checkBox29;
			context.RobustNameScope.Register("Librarian", control);
			checkBox29.Text = (string)new LocExtension("Librarian").ProvideValue();
			control = checkBox29;
			boxContainer10.XamlChildren.Add(control);
			CheckBox checkBox30 = new CheckBox();
			checkBox30.Name = "Lawyer";
			control = checkBox30;
			context.RobustNameScope.Register("Lawyer", control);
			checkBox30.Text = (string)new LocExtension("Lawyer").ProvideValue();
			control = checkBox30;
			boxContainer10.XamlChildren.Add(control);
			CheckBox checkBox31 = new CheckBox();
			checkBox31.Name = "Janitor";
			control = checkBox31;
			context.RobustNameScope.Register("Janitor", control);
			checkBox31.Text = (string)new LocExtension("Janitor").ProvideValue();
			control = checkBox31;
			boxContainer10.XamlChildren.Add(control);
			CheckBox checkBox32 = new CheckBox();
			checkBox32.Name = "Musician";
			control = checkBox32;
			context.RobustNameScope.Register("Musician", control);
			checkBox32.Text = (string)new LocExtension("Musician").ProvideValue();
			control = checkBox32;
			boxContainer10.XamlChildren.Add(control);
			CheckBox checkBox33 = new CheckBox();
			checkBox33.Name = "Reporter";
			control = checkBox33;
			context.RobustNameScope.Register("Reporter", control);
			checkBox33.Text = (string)new LocExtension("Reporter").ProvideValue();
			control = checkBox33;
			boxContainer10.XamlChildren.Add(control);
			CheckBox checkBox34 = new CheckBox();
			checkBox34.Name = "Zookeeper";
			control = checkBox34;
			context.RobustNameScope.Register("Zookeeper", control);
			checkBox34.Text = (string)new LocExtension("Zookeeper").ProvideValue();
			control = checkBox34;
			boxContainer10.XamlChildren.Add(control);
			control = new Label
			{
				Text = (string)new LocExtension("SINTS").ProvideValue(),
				FontColorOverride = new Color?(Color.FromXaml("LightGray"))
			};
			boxContainer10.XamlChildren.Add(control);
			CheckBox checkBox35 = new CheckBox();
			checkBox35.Name = "Cyborg";
			control = checkBox35;
			context.RobustNameScope.Register("Cyborg", control);
			checkBox35.Text = (string)new LocExtension("Cyborg").ProvideValue();
			control = checkBox35;
			boxContainer10.XamlChildren.Add(control);
			CheckBox checkBox36 = new CheckBox();
			checkBox36.Name = "MedicalCyborg";
			control = checkBox36;
			context.RobustNameScope.Register("MedicalCyborg", control);
			checkBox36.Text = (string)new LocExtension("Medical Cyborg").ProvideValue();
			control = checkBox36;
			boxContainer10.XamlChildren.Add(control);
			CheckBox checkBox37 = new CheckBox();
			checkBox37.Name = "EngCyborg";
			control = checkBox37;
			context.RobustNameScope.Register("EngCyborg", control);
			checkBox37.Text = (string)new LocExtension("ENG Cyborg").ProvideValue();
			control = checkBox37;
			boxContainer10.XamlChildren.Add(control);
			CheckBox checkBox38 = new CheckBox();
			checkBox38.Name = "SecCyborg";
			control = checkBox38;
			context.RobustNameScope.Register("SecCyborg", control);
			checkBox38.Text = (string)new LocExtension("SEC Cyborg").ProvideValue();
			control = checkBox38;
			boxContainer10.XamlChildren.Add(control);
			control = boxContainer10;
			boxContainer8.XamlChildren.Add(control);
			control = boxContainer8;
			boxContainer7.XamlChildren.Add(control);
			Button button6 = new Button();
			button6.Name = "SubmitListButton";
			control = button6;
			context.RobustNameScope.Register("SubmitListButton", control);
			button6.Text = (string)new LocExtension("BAN").ProvideValue();
			control = button6;
			boxContainer7.XamlChildren.Add(control);
			control = boxContainer7;
			boxContainer6.XamlChildren.Add(control);
			control = boxContainer6;
			boxContainer.XamlChildren.Add(control);
			control = boxContainer;
			A_1.XamlChildren.Add(control);
			if ((control = (A_1 as Control)) != null)
			{
				context.RobustNameScope.Absorb(control.NameScope);
				control.NameScope = context.RobustNameScope;
			}
			context.RobustNameScope.Complete();
		}

		// Token: 0x06001DC9 RID: 7625 RVA: 0x000AEA36 File Offset: 0x000ACC36
		private static void !XamlIlPopulateTrampoline(RoleBanWindow A_0)
		{
			RoleBanWindow.Populate:Content.Client.Administration.UI.Tabs.AdminTab.RoleBanWindow.xaml(null, A_0);
		}

		// Token: 0x04000E9D RID: 3741
		[Nullable(1)]
		[Dependency]
		private readonly IPrototypeManager _prototypeManager = IoCManager.Resolve<IPrototypeManager>();

		// Token: 0x04000E9E RID: 3742
		[Nullable(1)]
		private List<CheckBox> CheckBoxes = new List<CheckBox>();

		// Token: 0x04000E9F RID: 3743
		[Nullable(1)]
		private readonly IClientConsoleHost _clientConsoleHost = IoCManager.Resolve<IClientConsoleHost>();
	}
}
