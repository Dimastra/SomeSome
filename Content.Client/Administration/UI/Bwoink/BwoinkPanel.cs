using System;
using System.Runtime.CompilerServices;
using CompiledRobustXaml;
using Content.Shared.Administration;
using Robust.Client.AutoGenerated;
using Robust.Client.UserInterface;
using Robust.Client.UserInterface.Controls;
using Robust.Shared.Utility;

namespace Content.Client.Administration.UI.Bwoink
{
	// Token: 0x020004D3 RID: 1235
	[GenerateTypedNameReferences]
	public sealed class BwoinkPanel : BoxContainer
	{
		// Token: 0x170006DC RID: 1756
		// (get) Token: 0x06001F74 RID: 8052 RVA: 0x000B7E6B File Offset: 0x000B606B
		// (set) Token: 0x06001F75 RID: 8053 RVA: 0x000B7E73 File Offset: 0x000B6073
		public int Unread { get; private set; }

		// Token: 0x170006DD RID: 1757
		// (get) Token: 0x06001F76 RID: 8054 RVA: 0x000B7E7C File Offset: 0x000B607C
		// (set) Token: 0x06001F77 RID: 8055 RVA: 0x000B7E84 File Offset: 0x000B6084
		public DateTime LastMessage { get; private set; } = DateTime.MinValue;

		// Token: 0x06001F78 RID: 8056 RVA: 0x000B7E90 File Offset: 0x000B6090
		[NullableContext(1)]
		public BwoinkPanel(Action<string> messageSender)
		{
			BwoinkPanel.!XamlIlPopulateTrampoline(this);
			this._messageSender = messageSender;
			base.OnVisibilityChanged += delegate(Control c)
			{
				if (c.Visible)
				{
					this.Unread = 0;
				}
			};
			this.SenderLineEdit.OnTextEntered += this.Input_OnTextEntered;
		}

		// Token: 0x06001F79 RID: 8057 RVA: 0x000B7EE4 File Offset: 0x000B60E4
		[NullableContext(1)]
		private void Input_OnTextEntered(LineEdit.LineEditEventArgs args)
		{
			if (string.IsNullOrWhiteSpace(args.Text))
			{
				return;
			}
			this._messageSender(args.Text);
			this.SenderLineEdit.Clear();
		}

		// Token: 0x06001F7A RID: 8058 RVA: 0x000B7F10 File Offset: 0x000B6110
		[NullableContext(1)]
		public void ReceiveLine(SharedBwoinkSystem.BwoinkTextMessage message)
		{
			if (!base.Visible)
			{
				int unread = this.Unread;
				this.Unread = unread + 1;
			}
			FormattedMessage formattedMessage = new FormattedMessage(1);
			formattedMessage.AddMarkup("[color=gray]" + message.SentAt.ToShortTimeString() + "[/color] " + message.Text);
			this.TextOutput.AddMessage(formattedMessage);
			this.LastMessage = message.SentAt;
		}

		// Token: 0x170006DE RID: 1758
		// (get) Token: 0x06001F7B RID: 8059 RVA: 0x000B7F7D File Offset: 0x000B617D
		private OutputPanel TextOutput
		{
			get
			{
				return base.FindControl<OutputPanel>("TextOutput");
			}
		}

		// Token: 0x170006DF RID: 1759
		// (get) Token: 0x06001F7C RID: 8060 RVA: 0x000B7F8A File Offset: 0x000B618A
		private HistoryLineEdit SenderLineEdit
		{
			get
			{
				return base.FindControl<HistoryLineEdit>("SenderLineEdit");
			}
		}

		// Token: 0x06001F7E RID: 8062 RVA: 0x000B7FA8 File Offset: 0x000B61A8
		static void xaml(IServiceProvider A_0, BoxContainer A_1)
		{
			XamlIlContext.Context<BoxContainer> context = new XamlIlContext.Context<BoxContainer>(A_0, null, "resm:Content.Client.Administration.UI.Bwoink.BwoinkPanel.xaml?assembly=Content.Client");
			context.RootObject = A_1;
			context.IntermediateRoot = A_1;
			A_1.Orientation = 1;
			A_1.HorizontalExpand = true;
			OutputPanel outputPanel = new OutputPanel();
			outputPanel.Name = "TextOutput";
			Control control = outputPanel;
			context.RobustNameScope.Register("TextOutput", control);
			outputPanel.VerticalExpand = true;
			control = outputPanel;
			A_1.XamlChildren.Add(control);
			HistoryLineEdit historyLineEdit = new HistoryLineEdit();
			historyLineEdit.Name = "SenderLineEdit";
			control = historyLineEdit;
			context.RobustNameScope.Register("SenderLineEdit", control);
			control = historyLineEdit;
			A_1.XamlChildren.Add(control);
			if ((control = (A_1 as Control)) != null)
			{
				context.RobustNameScope.Absorb(control.NameScope);
				control.NameScope = context.RobustNameScope;
			}
			context.RobustNameScope.Complete();
		}

		// Token: 0x06001F7F RID: 8063 RVA: 0x000B80BF File Offset: 0x000B62BF
		private static void !XamlIlPopulateTrampoline(BwoinkPanel A_0)
		{
			BwoinkPanel.Populate:Content.Client.Administration.UI.Bwoink.BwoinkPanel.xaml(null, A_0);
		}

		// Token: 0x04000F19 RID: 3865
		[Nullable(1)]
		private readonly Action<string> _messageSender;
	}
}
