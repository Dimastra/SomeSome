using System;
using System.Runtime.CompilerServices;
using CompiledRobustXaml;
using Content.Shared.Disposal;
using Content.Shared.Disposal.Components;
using Robust.Client.AutoGenerated;
using Robust.Client.UserInterface;
using Robust.Client.UserInterface.Controls;
using Robust.Client.UserInterface.CustomControls;
using Robust.Shared.Localization;
using Robust.Shared.Maths;

namespace Content.Client.Disposal.UI
{
	// Token: 0x02000351 RID: 849
	[GenerateTypedNameReferences]
	public sealed class MailingUnitWindow : DefaultWindow
	{
		// Token: 0x0600150E RID: 5390 RVA: 0x0007B986 File Offset: 0x00079B86
		public MailingUnitWindow()
		{
			MailingUnitWindow.!XamlIlPopulateTrampoline(this);
		}

		// Token: 0x0600150F RID: 5391 RVA: 0x0007B994 File Offset: 0x00079B94
		[NullableContext(1)]
		public bool UpdateState(MailingUnitBoundUserInterfaceState state)
		{
			SharedDisposalUnitComponent.DisposalUnitBoundUserInterfaceState disposalState = state.DisposalState;
			base.Title = Loc.GetString("ui-mailing-unit-window-title", new ValueTuple<string, object>[]
			{
				new ValueTuple<string, object>("tag", state.Tag ?? " ")
			});
			this.UnitState.Text = disposalState.UnitState;
			bool flag = this.PressureBar.UpdatePressure(disposalState.FullPressureTime);
			this.Power.Pressed = disposalState.Powered;
			this.Engage.Pressed = disposalState.Engaged;
			this.Target.Text = state.Target;
			this.TargetListContainer.Clear();
			foreach (string text in state.TargetList)
			{
				this.TargetListContainer.AddItem(text, null, true);
			}
			return !disposalState.Powered || flag;
		}

		// Token: 0x06001510 RID: 5392 RVA: 0x0007BA98 File Offset: 0x00079C98
		public bool UpdatePressure(TimeSpan stateFullPressureTime)
		{
			return this.PressureBar.UpdatePressure(stateFullPressureTime);
		}

		// Token: 0x17000441 RID: 1089
		// (get) Token: 0x06001511 RID: 5393 RVA: 0x0007BAA6 File Offset: 0x00079CA6
		private Label Target
		{
			get
			{
				return base.FindControl<Label>("Target");
			}
		}

		// Token: 0x17000442 RID: 1090
		// (get) Token: 0x06001512 RID: 5394 RVA: 0x0007BAB3 File Offset: 0x00079CB3
		public ItemList TargetListContainer
		{
			get
			{
				return base.FindControl<ItemList>("TargetListContainer");
			}
		}

		// Token: 0x17000443 RID: 1091
		// (get) Token: 0x06001513 RID: 5395 RVA: 0x0007B4A7 File Offset: 0x000796A7
		private Label UnitState
		{
			get
			{
				return base.FindControl<Label>("UnitState");
			}
		}

		// Token: 0x17000444 RID: 1092
		// (get) Token: 0x06001514 RID: 5396 RVA: 0x0007B4B4 File Offset: 0x000796B4
		private PressureBar PressureBar
		{
			get
			{
				return base.FindControl<PressureBar>("PressureBar");
			}
		}

		// Token: 0x17000445 RID: 1093
		// (get) Token: 0x06001515 RID: 5397 RVA: 0x0007B4C1 File Offset: 0x000796C1
		public Button Engage
		{
			get
			{
				return base.FindControl<Button>("Engage");
			}
		}

		// Token: 0x17000446 RID: 1094
		// (get) Token: 0x06001516 RID: 5398 RVA: 0x0007B4CE File Offset: 0x000796CE
		public Button Eject
		{
			get
			{
				return base.FindControl<Button>("Eject");
			}
		}

		// Token: 0x17000447 RID: 1095
		// (get) Token: 0x06001517 RID: 5399 RVA: 0x0007B4DB File Offset: 0x000796DB
		public CheckButton Power
		{
			get
			{
				return base.FindControl<CheckButton>("Power");
			}
		}

		// Token: 0x06001518 RID: 5400 RVA: 0x0007BAC0 File Offset: 0x00079CC0
		static void xaml(IServiceProvider A_0, DefaultWindow A_1)
		{
			XamlIlContext.Context<DefaultWindow> context = new XamlIlContext.Context<DefaultWindow>(A_0, null, "resm:Content.Client.Disposal.UI.MailingUnitWindow.xaml?assembly=Content.Client");
			context.RootObject = A_1;
			context.IntermediateRoot = A_1;
			A_1.MinSize = new Vector2(300f, 400f);
			A_1.SetSize = new Vector2(300f, 400f);
			A_1.Resizable = false;
			BoxContainer boxContainer = new BoxContainer();
			boxContainer.Orientation = 1;
			BoxContainer boxContainer2 = new BoxContainer();
			boxContainer2.Orientation = 0;
			boxContainer2.SeparationOverride = new int?(8);
			Control control = new Label
			{
				Text = (string)new LocExtension("ui-mailing-unit-target-label").ProvideValue()
			};
			boxContainer2.XamlChildren.Add(control);
			Label label = new Label();
			label.Name = "Target";
			control = label;
			context.RobustNameScope.Register("Target", control);
			label.Text = "";
			control = label;
			boxContainer2.XamlChildren.Add(control);
			control = boxContainer2;
			boxContainer.XamlChildren.Add(control);
			ItemList itemList = new ItemList();
			itemList.Name = "TargetListContainer";
			control = itemList;
			context.RobustNameScope.Register("TargetListContainer", control);
			itemList.Access = new AccessLevel?(0);
			itemList.SelectMode = 1;
			itemList.VerticalExpand = true;
			itemList.HorizontalExpand = true;
			itemList.Margin = new Thickness(0f, 0f, 0f, 16f);
			control = itemList;
			boxContainer.XamlChildren.Add(control);
			BoxContainer boxContainer3 = new BoxContainer();
			boxContainer3.Orientation = 0;
			boxContainer3.SeparationOverride = new int?(4);
			control = new Label
			{
				Text = (string)new LocExtension("ui-disposal-unit-label-state").ProvideValue()
			};
			boxContainer3.XamlChildren.Add(control);
			Label label2 = new Label();
			label2.Name = "UnitState";
			control = label2;
			context.RobustNameScope.Register("UnitState", control);
			label2.Text = (string)new LocExtension("ui-disposal-unit-label-status").ProvideValue();
			control = label2;
			boxContainer3.XamlChildren.Add(control);
			control = boxContainer3;
			boxContainer.XamlChildren.Add(control);
			control = new Control
			{
				MinSize = new Vector2(0f, 5f)
			};
			boxContainer.XamlChildren.Add(control);
			BoxContainer boxContainer4 = new BoxContainer();
			boxContainer4.Orientation = 0;
			boxContainer4.SeparationOverride = new int?(4);
			control = new Label
			{
				Text = (string)new LocExtension("ui-disposal-unit-label-pressure").ProvideValue()
			};
			boxContainer4.XamlChildren.Add(control);
			PressureBar pressureBar = new PressureBar();
			pressureBar.Name = "PressureBar";
			control = pressureBar;
			context.RobustNameScope.Register("PressureBar", control);
			pressureBar.MinSize = new Vector2(190f, 20f);
			pressureBar.HorizontalAlignment = 3;
			pressureBar.MinValue = 0f;
			pressureBar.MaxValue = 1f;
			pressureBar.Page = 0f;
			pressureBar.Value = 0.5f;
			control = pressureBar;
			boxContainer4.XamlChildren.Add(control);
			control = boxContainer4;
			boxContainer.XamlChildren.Add(control);
			control = new Control
			{
				MinSize = new Vector2(0f, 10f)
			};
			boxContainer.XamlChildren.Add(control);
			BoxContainer boxContainer5 = new BoxContainer();
			boxContainer5.Orientation = 0;
			Button button = new Button();
			button.Name = "Engage";
			control = button;
			context.RobustNameScope.Register("Engage", control);
			button.Access = new AccessLevel?(0);
			button.Text = (string)new LocExtension("ui-mailing-unit-button-flush").ProvideValue();
			string item = "OpenRight";
			button.StyleClasses.Add(item);
			button.ToggleMode = true;
			control = button;
			boxContainer5.XamlChildren.Add(control);
			Button button2 = new Button();
			button2.Name = "Eject";
			control = button2;
			context.RobustNameScope.Register("Eject", control);
			button2.Access = new AccessLevel?(0);
			button2.Text = (string)new LocExtension("ui-disposal-unit-button-eject").ProvideValue();
			item = "OpenBoth";
			button2.StyleClasses.Add(item);
			control = button2;
			boxContainer5.XamlChildren.Add(control);
			CheckButton checkButton = new CheckButton();
			checkButton.Name = "Power";
			control = checkButton;
			context.RobustNameScope.Register("Power", control);
			checkButton.Access = new AccessLevel?(0);
			checkButton.Text = (string)new LocExtension("ui-disposal-unit-button-power").ProvideValue();
			item = "OpenLeft";
			checkButton.StyleClasses.Add(item);
			control = checkButton;
			boxContainer5.XamlChildren.Add(control);
			control = boxContainer5;
			boxContainer.XamlChildren.Add(control);
			control = boxContainer;
			A_1.XamlChildren.Add(control);
			if ((control = (A_1 as Control)) != null)
			{
				context.RobustNameScope.Absorb(control.NameScope);
				control.NameScope = context.RobustNameScope;
			}
			context.RobustNameScope.Complete();
		}

		// Token: 0x06001519 RID: 5401 RVA: 0x0007C095 File Offset: 0x0007A295
		private static void !XamlIlPopulateTrampoline(MailingUnitWindow A_0)
		{
			MailingUnitWindow.Populate:Content.Client.Disposal.UI.MailingUnitWindow.xaml(null, A_0);
		}
	}
}
