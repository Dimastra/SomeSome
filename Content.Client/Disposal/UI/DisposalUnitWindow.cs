using System;
using System.Runtime.CompilerServices;
using CompiledRobustXaml;
using Content.Shared.Disposal.Components;
using Robust.Client.AutoGenerated;
using Robust.Client.UserInterface;
using Robust.Client.UserInterface.Controls;
using Robust.Client.UserInterface.CustomControls;
using Robust.Shared.IoC;
using Robust.Shared.Maths;

namespace Content.Client.Disposal.UI
{
	// Token: 0x02000350 RID: 848
	[GenerateTypedNameReferences]
	public sealed class DisposalUnitWindow : DefaultWindow
	{
		// Token: 0x06001505 RID: 5381 RVA: 0x0007B429 File Offset: 0x00079629
		public DisposalUnitWindow()
		{
			IoCManager.InjectDependencies<DisposalUnitWindow>(this);
			DisposalUnitWindow.!XamlIlPopulateTrampoline(this);
		}

		// Token: 0x06001506 RID: 5382 RVA: 0x0007B440 File Offset: 0x00079640
		[NullableContext(1)]
		public bool UpdateState(SharedDisposalUnitComponent.DisposalUnitBoundUserInterfaceState state)
		{
			base.Title = state.UnitName;
			this.UnitState.Text = state.UnitState;
			this.Power.Pressed = state.Powered;
			this.Engage.Pressed = state.Engaged;
			return !state.Powered || this.PressureBar.UpdatePressure(state.FullPressureTime);
		}

		// Token: 0x1700043C RID: 1084
		// (get) Token: 0x06001507 RID: 5383 RVA: 0x0007B4A7 File Offset: 0x000796A7
		private Label UnitState
		{
			get
			{
				return base.FindControl<Label>("UnitState");
			}
		}

		// Token: 0x1700043D RID: 1085
		// (get) Token: 0x06001508 RID: 5384 RVA: 0x0007B4B4 File Offset: 0x000796B4
		private PressureBar PressureBar
		{
			get
			{
				return base.FindControl<PressureBar>("PressureBar");
			}
		}

		// Token: 0x1700043E RID: 1086
		// (get) Token: 0x06001509 RID: 5385 RVA: 0x0007B4C1 File Offset: 0x000796C1
		public Button Engage
		{
			get
			{
				return base.FindControl<Button>("Engage");
			}
		}

		// Token: 0x1700043F RID: 1087
		// (get) Token: 0x0600150A RID: 5386 RVA: 0x0007B4CE File Offset: 0x000796CE
		public Button Eject
		{
			get
			{
				return base.FindControl<Button>("Eject");
			}
		}

		// Token: 0x17000440 RID: 1088
		// (get) Token: 0x0600150B RID: 5387 RVA: 0x0007B4DB File Offset: 0x000796DB
		public CheckButton Power
		{
			get
			{
				return base.FindControl<CheckButton>("Power");
			}
		}

		// Token: 0x0600150C RID: 5388 RVA: 0x0007B4E8 File Offset: 0x000796E8
		static void xaml(IServiceProvider A_0, DefaultWindow A_1)
		{
			XamlIlContext.Context<DefaultWindow> context = new XamlIlContext.Context<DefaultWindow>(A_0, null, "resm:Content.Client.Disposal.UI.DisposalUnitWindow.xaml?assembly=Content.Client");
			context.RootObject = A_1;
			context.IntermediateRoot = A_1;
			A_1.MinSize = new Vector2(300f, 140f);
			A_1.SetSize = new Vector2(300f, 140f);
			A_1.Resizable = false;
			BoxContainer boxContainer = new BoxContainer();
			boxContainer.Orientation = 1;
			BoxContainer boxContainer2 = new BoxContainer();
			boxContainer2.Orientation = 0;
			boxContainer2.SeparationOverride = new int?(4);
			Control control = new Label
			{
				Text = (string)new LocExtension("ui-disposal-unit-label-state").ProvideValue()
			};
			boxContainer2.XamlChildren.Add(control);
			Label label = new Label();
			label.Name = "UnitState";
			control = label;
			context.RobustNameScope.Register("UnitState", control);
			label.Text = (string)new LocExtension("ui-disposal-unit-label-status").ProvideValue();
			control = label;
			boxContainer2.XamlChildren.Add(control);
			control = boxContainer2;
			boxContainer.XamlChildren.Add(control);
			control = new Control
			{
				MinSize = new Vector2(0f, 5f)
			};
			boxContainer.XamlChildren.Add(control);
			BoxContainer boxContainer3 = new BoxContainer();
			boxContainer3.Orientation = 0;
			boxContainer3.SeparationOverride = new int?(4);
			control = new Label
			{
				Text = (string)new LocExtension("ui-disposal-unit-label-pressure").ProvideValue()
			};
			boxContainer3.XamlChildren.Add(control);
			PressureBar pressureBar = new PressureBar();
			pressureBar.Name = "PressureBar";
			control = pressureBar;
			context.RobustNameScope.Register("PressureBar", control);
			pressureBar.MinSize = new Vector2(190f, 20f);
			pressureBar.HorizontalAlignment = 3;
			pressureBar.MinValue = 0f;
			pressureBar.MaxValue = 1f;
			pressureBar.Page = 0f;
			pressureBar.Value = 0.5f;
			control = pressureBar;
			boxContainer3.XamlChildren.Add(control);
			control = boxContainer3;
			boxContainer.XamlChildren.Add(control);
			control = new Control
			{
				MinSize = new Vector2(0f, 10f)
			};
			boxContainer.XamlChildren.Add(control);
			BoxContainer boxContainer4 = new BoxContainer();
			boxContainer4.Orientation = 0;
			Button button = new Button();
			button.Name = "Engage";
			control = button;
			context.RobustNameScope.Register("Engage", control);
			button.Access = new AccessLevel?(0);
			button.Text = (string)new LocExtension("ui-disposal-unit-button-flush").ProvideValue();
			string item = "OpenRight";
			button.StyleClasses.Add(item);
			button.ToggleMode = true;
			control = button;
			boxContainer4.XamlChildren.Add(control);
			Button button2 = new Button();
			button2.Name = "Eject";
			control = button2;
			context.RobustNameScope.Register("Eject", control);
			button2.Access = new AccessLevel?(0);
			button2.Text = (string)new LocExtension("ui-disposal-unit-button-eject").ProvideValue();
			item = "OpenBoth";
			button2.StyleClasses.Add(item);
			control = button2;
			boxContainer4.XamlChildren.Add(control);
			CheckButton checkButton = new CheckButton();
			checkButton.Name = "Power";
			control = checkButton;
			context.RobustNameScope.Register("Power", control);
			checkButton.Access = new AccessLevel?(0);
			checkButton.Text = (string)new LocExtension("ui-disposal-unit-button-power").ProvideValue();
			item = "OpenLeft";
			checkButton.StyleClasses.Add(item);
			control = checkButton;
			boxContainer4.XamlChildren.Add(control);
			control = boxContainer4;
			boxContainer.XamlChildren.Add(control);
			control = boxContainer;
			A_1.XamlChildren.Add(control);
			if ((control = (A_1 as Control)) != null)
			{
				context.RobustNameScope.Absorb(control.NameScope);
				control.NameScope = context.RobustNameScope;
			}
			context.RobustNameScope.Complete();
		}

		// Token: 0x0600150D RID: 5389 RVA: 0x0007B97D File Offset: 0x00079B7D
		private static void !XamlIlPopulateTrampoline(DisposalUnitWindow A_0)
		{
			DisposalUnitWindow.Populate:Content.Client.Disposal.UI.DisposalUnitWindow.xaml(null, A_0);
		}
	}
}
