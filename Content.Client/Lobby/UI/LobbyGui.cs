using System;
using System.Runtime.CompilerServices;
using CompiledRobustXaml;
using Content.Client.Administration.UI.CustomControls;
using Content.Client.Info;
using Content.Client.Stylesheets;
using Content.Client.UserInterface.Controls;
using Content.Client.UserInterface.Systems.Chat.Widgets;
using Content.Client.UserInterface.Systems.EscapeMenu;
using Content.Client.Voting.UI;
using Robust.Client.AutoGenerated;
using Robust.Client.Console;
using Robust.Client.UserInterface;
using Robust.Client.UserInterface.Controls;
using Robust.Shared.IoC;
using Robust.Shared.Maths;

namespace Content.Client.Lobby.UI
{
	// Token: 0x0200025D RID: 605
	[GenerateTypedNameReferences]
	internal sealed class LobbyGui : UIScreen
	{
		// Token: 0x06000F75 RID: 3957 RVA: 0x0005CBD8 File Offset: 0x0005ADD8
		public LobbyGui()
		{
			LobbyGui.!XamlIlPopulateTrampoline(this);
			LayoutContainer.SetAnchorPreset(this.MainContainer, 15, false);
			LayoutContainer.SetAnchorPreset(this.Background, 15, false);
			this.LeaveButton.OnPressed += delegate(BaseButton.ButtonEventArgs _)
			{
				this._consoleHost.ExecuteCommand("disconnect");
			};
			this.OptionsButton.OnPressed += delegate(BaseButton.ButtonEventArgs _)
			{
				this._userInterfaceManager.GetUIController<OptionsUIController>().ToggleWindow();
			};
		}

		// Token: 0x06000F76 RID: 3958 RVA: 0x0005CC3C File Offset: 0x0005AE3C
		public void SwitchState(LobbyGui.LobbyGuiState state)
		{
			this.DefaultState.Visible = false;
			this.CharacterSetupState.Visible = false;
			if (state == LobbyGui.LobbyGuiState.Default)
			{
				this.DefaultState.Visible = true;
				this.RightSide.Visible = true;
				return;
			}
			if (state != LobbyGui.LobbyGuiState.CharacterSetup)
			{
				return;
			}
			this.CharacterSetupState.Visible = true;
			float num = (float)this._userInterfaceManager.RootControl.PixelWidth;
			float num2 = (float)this.LeftSide.PixelWidth;
			if ((double)(1f - num2 / num) > 0.3)
			{
				this.RightSide.Visible = false;
			}
		}

		// Token: 0x17000342 RID: 834
		// (get) Token: 0x06000F77 RID: 3959 RVA: 0x0005CCCE File Offset: 0x0005AECE
		public TextureRect Background
		{
			get
			{
				return base.FindControl<TextureRect>("Background");
			}
		}

		// Token: 0x17000343 RID: 835
		// (get) Token: 0x06000F78 RID: 3960 RVA: 0x0005CCDB File Offset: 0x0005AEDB
		private BoxContainer MainContainer
		{
			get
			{
				return base.FindControl<BoxContainer>("MainContainer");
			}
		}

		// Token: 0x17000344 RID: 836
		// (get) Token: 0x06000F79 RID: 3961 RVA: 0x0005CCE8 File Offset: 0x0005AEE8
		private BoxContainer LeftSide
		{
			get
			{
				return base.FindControl<BoxContainer>("LeftSide");
			}
		}

		// Token: 0x17000345 RID: 837
		// (get) Token: 0x06000F7A RID: 3962 RVA: 0x0005CCF5 File Offset: 0x0005AEF5
		private Control DefaultState
		{
			get
			{
				return base.FindControl<Control>("DefaultState");
			}
		}

		// Token: 0x17000346 RID: 838
		// (get) Token: 0x06000F7B RID: 3963 RVA: 0x0005CD02 File Offset: 0x0005AF02
		private PanelContainer LeftSideTop
		{
			get
			{
				return base.FindControl<PanelContainer>("LeftSideTop");
			}
		}

		// Token: 0x17000347 RID: 839
		// (get) Token: 0x06000F7C RID: 3964 RVA: 0x0005CD0F File Offset: 0x0005AF0F
		private LinkBanner LinkBanner
		{
			get
			{
				return base.FindControl<LinkBanner>("LinkBanner");
			}
		}

		// Token: 0x17000348 RID: 840
		// (get) Token: 0x06000F7D RID: 3965 RVA: 0x0005CD1C File Offset: 0x0005AF1C
		public UICommandButton ObserveButton
		{
			get
			{
				return base.FindControl<UICommandButton>("ObserveButton");
			}
		}

		// Token: 0x17000349 RID: 841
		// (get) Token: 0x06000F7E RID: 3966 RVA: 0x0005CD29 File Offset: 0x0005AF29
		public Label StartTime
		{
			get
			{
				return base.FindControl<Label>("StartTime");
			}
		}

		// Token: 0x1700034A RID: 842
		// (get) Token: 0x06000F7F RID: 3967 RVA: 0x0005CD36 File Offset: 0x0005AF36
		public Button ReadyButton
		{
			get
			{
				return base.FindControl<Button>("ReadyButton");
			}
		}

		// Token: 0x1700034B RID: 843
		// (get) Token: 0x06000F80 RID: 3968 RVA: 0x0005CD43 File Offset: 0x0005AF43
		public BoxContainer VoteContainer
		{
			get
			{
				return base.FindControl<BoxContainer>("VoteContainer");
			}
		}

		// Token: 0x1700034C RID: 844
		// (get) Token: 0x06000F81 RID: 3969 RVA: 0x0005CD50 File Offset: 0x0005AF50
		private DevInfoBanner DevInfoBanner
		{
			get
			{
				return base.FindControl<DevInfoBanner>("DevInfoBanner");
			}
		}

		// Token: 0x1700034D RID: 845
		// (get) Token: 0x06000F82 RID: 3970 RVA: 0x0005CD5D File Offset: 0x0005AF5D
		public Control CharacterSetupState
		{
			get
			{
				return base.FindControl<Control>("CharacterSetupState");
			}
		}

		// Token: 0x1700034E RID: 846
		// (get) Token: 0x06000F83 RID: 3971 RVA: 0x0005CD6A File Offset: 0x0005AF6A
		private PanelContainer RightSide
		{
			get
			{
				return base.FindControl<PanelContainer>("RightSide");
			}
		}

		// Token: 0x1700034F RID: 847
		// (get) Token: 0x06000F84 RID: 3972 RVA: 0x0005CD77 File Offset: 0x0005AF77
		public BoxContainer HeaderContainer
		{
			get
			{
				return base.FindControl<BoxContainer>("HeaderContainer");
			}
		}

		// Token: 0x17000350 RID: 848
		// (get) Token: 0x06000F85 RID: 3973 RVA: 0x0005CD84 File Offset: 0x0005AF84
		public Label ServerName
		{
			get
			{
				return base.FindControl<Label>("ServerName");
			}
		}

		// Token: 0x17000351 RID: 849
		// (get) Token: 0x06000F86 RID: 3974 RVA: 0x0005CD91 File Offset: 0x0005AF91
		public CommandButton AHelpButton
		{
			get
			{
				return base.FindControl<CommandButton>("AHelpButton");
			}
		}

		// Token: 0x17000352 RID: 850
		// (get) Token: 0x06000F87 RID: 3975 RVA: 0x0005CD9E File Offset: 0x0005AF9E
		private VoteCallMenuButton CallVoteButton
		{
			get
			{
				return base.FindControl<VoteCallMenuButton>("CallVoteButton");
			}
		}

		// Token: 0x17000353 RID: 851
		// (get) Token: 0x06000F88 RID: 3976 RVA: 0x0004B2D1 File Offset: 0x000494D1
		public Button OptionsButton
		{
			get
			{
				return base.FindControl<Button>("OptionsButton");
			}
		}

		// Token: 0x17000354 RID: 852
		// (get) Token: 0x06000F89 RID: 3977 RVA: 0x0005CDAB File Offset: 0x0005AFAB
		public Button LeaveButton
		{
			get
			{
				return base.FindControl<Button>("LeaveButton");
			}
		}

		// Token: 0x17000355 RID: 853
		// (get) Token: 0x06000F8A RID: 3978 RVA: 0x0005CDB8 File Offset: 0x0005AFB8
		public ServerInfo ServerInfo
		{
			get
			{
				return base.FindControl<ServerInfo>("ServerInfo");
			}
		}

		// Token: 0x17000356 RID: 854
		// (get) Token: 0x06000F8B RID: 3979 RVA: 0x0005CDC5 File Offset: 0x0005AFC5
		public Label StationTime
		{
			get
			{
				return base.FindControl<Label>("StationTime");
			}
		}

		// Token: 0x17000357 RID: 855
		// (get) Token: 0x06000F8C RID: 3980 RVA: 0x0005CDD2 File Offset: 0x0005AFD2
		public LobbyCharacterPreviewPanel CharacterPreview
		{
			get
			{
				return base.FindControl<LobbyCharacterPreviewPanel>("CharacterPreview");
			}
		}

		// Token: 0x17000358 RID: 856
		// (get) Token: 0x06000F8D RID: 3981 RVA: 0x00020043 File Offset: 0x0001E243
		public ChatBox Chat
		{
			get
			{
				return base.FindControl<ChatBox>("Chat");
			}
		}

		// Token: 0x06000F90 RID: 3984 RVA: 0x0005CE04 File Offset: 0x0005B004
		static void xaml(IServiceProvider A_0, LobbyGui A_1)
		{
			XamlIlContext.Context<LobbyGui> context = new XamlIlContext.Context<LobbyGui>(A_0, null, "resm:Content.Client.Lobby.UI.LobbyGui.xaml?assembly=Content.Client");
			context.RootObject = A_1;
			context.IntermediateRoot = A_1;
			TextureRect textureRect = new TextureRect();
			textureRect.Access = new AccessLevel?(0);
			textureRect.VerticalExpand = true;
			textureRect.HorizontalExpand = true;
			textureRect.Name = "Background";
			Control control = textureRect;
			context.RobustNameScope.Register("Background", control);
			textureRect.Stretch = 8;
			control = textureRect;
			A_1.XamlChildren.Add(control);
			BoxContainer boxContainer = new BoxContainer();
			boxContainer.Name = "MainContainer";
			control = boxContainer;
			context.RobustNameScope.Register("MainContainer", control);
			boxContainer.VerticalExpand = true;
			boxContainer.HorizontalExpand = true;
			boxContainer.Orientation = 0;
			boxContainer.Margin = new Thickness(10f, 10f, 10f, 10f);
			boxContainer.SeparationOverride = new int?(2);
			SplitContainer splitContainer = new SplitContainer();
			splitContainer.State = 0;
			splitContainer.HorizontalExpand = true;
			BoxContainer boxContainer2 = new BoxContainer();
			boxContainer2.Name = "LeftSide";
			control = boxContainer2;
			context.RobustNameScope.Register("LeftSide", control);
			boxContainer2.Orientation = 1;
			boxContainer2.SeparationOverride = new int?(4);
			boxContainer2.HorizontalExpand = true;
			Control control2 = new Control();
			control2.Name = "DefaultState";
			control = control2;
			context.RobustNameScope.Register("DefaultState", control);
			control2.VerticalExpand = true;
			PanelContainer panelContainer = new PanelContainer();
			string item = "AngleRect";
			panelContainer.StyleClasses.Add(item);
			panelContainer.HorizontalAlignment = 1;
			panelContainer.Name = "LeftSideTop";
			control = panelContainer;
			context.RobustNameScope.Register("LeftSideTop", control);
			panelContainer.VerticalAlignment = 1;
			BoxContainer boxContainer3 = new BoxContainer();
			boxContainer3.Orientation = 1;
			boxContainer3.HorizontalAlignment = 2;
			boxContainer3.MaxWidth = 620f;
			LinkBanner linkBanner = new LinkBanner();
			linkBanner.Name = "LinkBanner";
			control = linkBanner;
			context.RobustNameScope.Register("LinkBanner", control);
			linkBanner.VerticalExpand = false;
			linkBanner.HorizontalAlignment = 2;
			linkBanner.Margin = new Thickness(3f, 3f, 3f, 3f);
			control = linkBanner;
			boxContainer3.XamlChildren.Add(control);
			StripeBack stripeBack = new StripeBack();
			BoxContainer boxContainer4 = new BoxContainer();
			boxContainer4.Orientation = 0;
			boxContainer4.SeparationOverride = new int?(6);
			boxContainer4.Margin = new Thickness(3f, 3f, 3f, 3f);
			UICommandButton uicommandButton = new UICommandButton();
			uicommandButton.Command = "observe";
			uicommandButton.Name = "ObserveButton";
			control = uicommandButton;
			context.RobustNameScope.Register("ObserveButton", control);
			uicommandButton.Access = new AccessLevel?(0);
			uicommandButton.Text = (string)new LocExtension("ui-lobby-observe-button").ProvideValue();
			item = "ButtonBig";
			uicommandButton.StyleClasses.Add(item);
			uicommandButton.WindowType = typeof(ObserveWarningWindow);
			control = uicommandButton;
			boxContainer4.XamlChildren.Add(control);
			Label label = new Label();
			label.Name = "StartTime";
			control = label;
			context.RobustNameScope.Register("StartTime", control);
			label.Access = new AccessLevel?(0);
			label.Align = 0;
			label.FontColorOverride = new Color?(Color.DarkGray);
			item = "LabelBig";
			label.StyleClasses.Add(item);
			label.HorizontalExpand = true;
			control = label;
			boxContainer4.XamlChildren.Add(control);
			Button button = new Button();
			button.Name = "ReadyButton";
			control = button;
			context.RobustNameScope.Register("ReadyButton", control);
			button.Access = new AccessLevel?(0);
			button.ToggleMode = true;
			button.Text = (string)new LocExtension("ui-lobby-ready-up-button").ProvideValue();
			item = "ButtonBig";
			button.StyleClasses.Add(item);
			button.MinWidth = 137f;
			control = button;
			boxContainer4.XamlChildren.Add(control);
			control = boxContainer4;
			stripeBack.XamlChildren.Add(control);
			control = stripeBack;
			boxContainer3.XamlChildren.Add(control);
			control = boxContainer3;
			panelContainer.XamlChildren.Add(control);
			control = panelContainer;
			control2.XamlChildren.Add(control);
			BoxContainer boxContainer5 = new BoxContainer();
			boxContainer5.Orientation = 1;
			boxContainer5.SeparationOverride = new int?(4);
			boxContainer5.Name = "VoteContainer";
			control = boxContainer5;
			context.RobustNameScope.Register("VoteContainer", control);
			boxContainer5.Access = new AccessLevel?(0);
			boxContainer5.HorizontalAlignment = 1;
			boxContainer5.VerticalAlignment = 1;
			control = boxContainer5;
			control2.XamlChildren.Add(control);
			control = new Control
			{
				VerticalExpand = true
			};
			control2.XamlChildren.Add(control);
			BoxContainer boxContainer6 = new BoxContainer();
			boxContainer6.Orientation = 1;
			boxContainer6.HorizontalAlignment = 1;
			boxContainer6.VerticalAlignment = 3;
			boxContainer6.MaxWidth = 620f;
			DevInfoBanner devInfoBanner = new DevInfoBanner();
			devInfoBanner.Name = "DevInfoBanner";
			control = devInfoBanner;
			context.RobustNameScope.Register("DevInfoBanner", control);
			devInfoBanner.VerticalExpand = false;
			devInfoBanner.Margin = new Thickness(3f, 3f, 3f, 3f);
			control = devInfoBanner;
			boxContainer6.XamlChildren.Add(control);
			control = boxContainer6;
			control2.XamlChildren.Add(control);
			control = control2;
			boxContainer2.XamlChildren.Add(control);
			Control control3 = new Control();
			control3.Access = new AccessLevel?(0);
			control3.Visible = false;
			control3.Name = "CharacterSetupState";
			control = control3;
			context.RobustNameScope.Register("CharacterSetupState", control);
			control3.VerticalExpand = true;
			control = control3;
			boxContainer2.XamlChildren.Add(control);
			control = boxContainer2;
			splitContainer.XamlChildren.Add(control);
			PanelContainer panelContainer2 = new PanelContainer();
			panelContainer2.Name = "RightSide";
			control = panelContainer2;
			context.RobustNameScope.Register("RightSide", control);
			item = "AngleRect";
			panelContainer2.StyleClasses.Add(item);
			panelContainer2.HorizontalAlignment = 3;
			panelContainer2.VerticalExpand = true;
			panelContainer2.VerticalAlignment = 0;
			BoxContainer boxContainer7 = new BoxContainer();
			boxContainer7.Orientation = 1;
			boxContainer7.HorizontalExpand = true;
			BoxContainer boxContainer8 = new BoxContainer();
			boxContainer8.Orientation = 0;
			boxContainer8.MinSize = new Vector2(0f, 40f);
			boxContainer8.Name = "HeaderContainer";
			control = boxContainer8;
			context.RobustNameScope.Register("HeaderContainer", control);
			boxContainer8.Access = new AccessLevel?(0);
			boxContainer8.SeparationOverride = new int?(4);
			Label label2 = new Label();
			label2.Margin = new Thickness(8f, 0f, 0f, 0f);
			item = "LabelHeadingBigger";
			label2.StyleClasses.Add(item);
			label2.VAlign = 1;
			label2.Text = (string)new LocExtension("ui-lobby-title").ProvideValue();
			control = label2;
			boxContainer8.XamlChildren.Add(control);
			Label label3 = new Label();
			label3.Name = "ServerName";
			control = label3;
			context.RobustNameScope.Register("ServerName", control);
			label3.Access = new AccessLevel?(0);
			item = "LabelHeadingBigger";
			label3.StyleClasses.Add(item);
			label3.VAlign = 1;
			label3.HorizontalExpand = true;
			label3.HorizontalAlignment = 2;
			control = label3;
			boxContainer8.XamlChildren.Add(control);
			control = boxContainer8;
			boxContainer7.XamlChildren.Add(control);
			control = new HLine
			{
				Color = new Color?(StyleNano.NanoGold),
				Thickness = new float?(2f)
			};
			boxContainer7.XamlChildren.Add(control);
			control = new HSpacer
			{
				Spacing = 10f
			};
			boxContainer7.XamlChildren.Add(control);
			BoxContainer boxContainer9 = new BoxContainer();
			boxContainer9.Orientation = 0;
			boxContainer9.MinSize = new Vector2(0f, 40f);
			boxContainer9.HorizontalAlignment = 3;
			CommandButton commandButton = new CommandButton();
			commandButton.Name = "AHelpButton";
			control = commandButton;
			context.RobustNameScope.Register("AHelpButton", control);
			commandButton.Command = "openahelp";
			commandButton.Access = new AccessLevel?(0);
			commandButton.Text = (string)new LocExtension("ui-lobby-ahelp-button").ProvideValue();
			item = "ButtonBig";
			commandButton.StyleClasses.Add(item);
			control = commandButton;
			boxContainer9.XamlChildren.Add(control);
			VoteCallMenuButton voteCallMenuButton = new VoteCallMenuButton();
			voteCallMenuButton.Name = "CallVoteButton";
			control = voteCallMenuButton;
			context.RobustNameScope.Register("CallVoteButton", control);
			item = "ButtonBig";
			voteCallMenuButton.StyleClasses.Add(item);
			control = voteCallMenuButton;
			boxContainer9.XamlChildren.Add(control);
			Button button2 = new Button();
			button2.Name = "OptionsButton";
			control = button2;
			context.RobustNameScope.Register("OptionsButton", control);
			button2.Access = new AccessLevel?(0);
			item = "ButtonBig";
			button2.StyleClasses.Add(item);
			button2.Text = (string)new LocExtension("ui-lobby-options-button").ProvideValue();
			control = button2;
			boxContainer9.XamlChildren.Add(control);
			Button button3 = new Button();
			button3.Name = "LeaveButton";
			control = button3;
			context.RobustNameScope.Register("LeaveButton", control);
			button3.Access = new AccessLevel?(0);
			item = "ButtonBig";
			button3.StyleClasses.Add(item);
			button3.Text = (string)new LocExtension("ui-lobby-leave-button").ProvideValue();
			control = button3;
			boxContainer9.XamlChildren.Add(control);
			control = boxContainer9;
			boxContainer7.XamlChildren.Add(control);
			control = new HSpacer
			{
				Spacing = 10f
			};
			boxContainer7.XamlChildren.Add(control);
			control = new NanoHeading
			{
				Text = (string)new LocExtension("ui-lobby-server-info-block").ProvideValue()
			};
			boxContainer7.XamlChildren.Add(control);
			ServerInfo serverInfo = new ServerInfo();
			serverInfo.Name = "ServerInfo";
			control = serverInfo;
			context.RobustNameScope.Register("ServerInfo", control);
			serverInfo.Access = new AccessLevel?(0);
			serverInfo.MinSize = new Vector2(0f, 30f);
			serverInfo.VerticalExpand = false;
			serverInfo.Margin = new Thickness(3f, 3f, 3f, 3f);
			serverInfo.MaxWidth = 400f;
			serverInfo.HorizontalAlignment = 1;
			control = serverInfo;
			boxContainer7.XamlChildren.Add(control);
			Label label4 = new Label();
			label4.Name = "StationTime";
			control = label4;
			context.RobustNameScope.Register("StationTime", control);
			label4.Access = new AccessLevel?(0);
			label4.FontColorOverride = new Color?(Color.LightGray);
			label4.Margin = new Thickness(3f, 3f, 3f, 3f);
			label4.HorizontalAlignment = 1;
			control = label4;
			boxContainer7.XamlChildren.Add(control);
			control = new HSpacer
			{
				Spacing = 5f
			};
			boxContainer7.XamlChildren.Add(control);
			LobbyCharacterPreviewPanel lobbyCharacterPreviewPanel = new LobbyCharacterPreviewPanel();
			lobbyCharacterPreviewPanel.Name = "CharacterPreview";
			control = lobbyCharacterPreviewPanel;
			context.RobustNameScope.Register("CharacterPreview", control);
			lobbyCharacterPreviewPanel.Access = new AccessLevel?(0);
			control = lobbyCharacterPreviewPanel;
			boxContainer7.XamlChildren.Add(control);
			control = new HSpacer
			{
				Spacing = 5f
			};
			boxContainer7.XamlChildren.Add(control);
			control = new BoxContainer
			{
				MinHeight = 10f
			};
			boxContainer7.XamlChildren.Add(control);
			control = new HLine
			{
				Color = new Color?(StyleNano.NanoGold),
				Thickness = new float?(2f),
				Access = new AccessLevel?(0)
			};
			boxContainer7.XamlChildren.Add(control);
			control = new HSpacer
			{
				Spacing = 10f
			};
			boxContainer7.XamlChildren.Add(control);
			ChatBox chatBox = new ChatBox();
			chatBox.Name = "Chat";
			control = chatBox;
			context.RobustNameScope.Register("Chat", control);
			chatBox.Access = new AccessLevel?(0);
			chatBox.VerticalExpand = true;
			chatBox.Margin = new Thickness(3f, 3f, 3f, 3f);
			chatBox.MinHeight = 50f;
			control = chatBox;
			boxContainer7.XamlChildren.Add(control);
			control = boxContainer7;
			panelContainer2.XamlChildren.Add(control);
			control = panelContainer2;
			splitContainer.XamlChildren.Add(control);
			control = splitContainer;
			boxContainer.XamlChildren.Add(control);
			control = boxContainer;
			A_1.XamlChildren.Add(control);
			if ((control = (A_1 as Control)) != null)
			{
				context.RobustNameScope.Absorb(control.NameScope);
				control.NameScope = context.RobustNameScope;
			}
			context.RobustNameScope.Complete();
		}

		// Token: 0x06000F91 RID: 3985 RVA: 0x0005DD2C File Offset: 0x0005BF2C
		private static void !XamlIlPopulateTrampoline(LobbyGui A_0)
		{
			LobbyGui.Populate:Content.Client.Lobby.UI.LobbyGui.xaml(null, A_0);
		}

		// Token: 0x040007B0 RID: 1968
		[Nullable(1)]
		[Dependency]
		private readonly IClientConsoleHost _consoleHost;

		// Token: 0x040007B1 RID: 1969
		[Nullable(1)]
		[Dependency]
		private readonly IUserInterfaceManager _userInterfaceManager;

		// Token: 0x0200025E RID: 606
		public enum LobbyGuiState : byte
		{
			// Token: 0x040007B3 RID: 1971
			Default,
			// Token: 0x040007B4 RID: 1972
			CharacterSetup
		}
	}
}
