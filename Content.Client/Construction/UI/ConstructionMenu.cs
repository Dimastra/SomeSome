using System;
using System.Runtime.CompilerServices;
using CompiledRobustXaml;
using Robust.Client.AutoGenerated;
using Robust.Client.Graphics;
using Robust.Client.UserInterface;
using Robust.Client.UserInterface.Controls;
using Robust.Client.UserInterface.CustomControls;
using Robust.Shared.IoC;
using Robust.Shared.Localization;
using Robust.Shared.Maths;

namespace Content.Client.Construction.UI
{
	// Token: 0x02000392 RID: 914
	[GenerateTypedNameReferences]
	public sealed class ConstructionMenu : DefaultWindow, IConstructionMenuView, IDisposable
	{
		// Token: 0x17000481 RID: 1153
		// (get) Token: 0x06001693 RID: 5779 RVA: 0x00083F69 File Offset: 0x00082169
		// (set) Token: 0x06001694 RID: 5780 RVA: 0x00083F76 File Offset: 0x00082176
		public bool BuildButtonPressed
		{
			get
			{
				return this.BuildButton.Pressed;
			}
			set
			{
				this.BuildButton.Pressed = value;
			}
		}

		// Token: 0x17000482 RID: 1154
		// (get) Token: 0x06001695 RID: 5781 RVA: 0x00083F84 File Offset: 0x00082184
		// (set) Token: 0x06001696 RID: 5782 RVA: 0x00083F8C File Offset: 0x0008218C
		[Nullable(1)]
		public string[] Categories { [NullableContext(1)] get; [NullableContext(1)] set; } = Array.Empty<string>();

		// Token: 0x17000483 RID: 1155
		// (get) Token: 0x06001697 RID: 5783 RVA: 0x00083F95 File Offset: 0x00082195
		// (set) Token: 0x06001698 RID: 5784 RVA: 0x00083FA2 File Offset: 0x000821A2
		public bool EraseButtonPressed
		{
			get
			{
				return this.EraseButton.Pressed;
			}
			set
			{
				this.EraseButton.Pressed = value;
			}
		}

		// Token: 0x06001699 RID: 5785 RVA: 0x00083FB0 File Offset: 0x000821B0
		public ConstructionMenu()
		{
			base.SetSize = (base.MinSize = new ValueTuple<float, float>(720f, 320f));
			IoCManager.InjectDependencies<ConstructionMenu>(this);
			ConstructionMenu.!XamlIlPopulateTrampoline(this);
			base.Title = Loc.GetString("construction-menu-title");
			this.BuildButton.Text = Loc.GetString("construction-menu-place-ghost");
			this.Recipes.OnItemSelected += delegate(ItemList.ItemListSelectedEventArgs obj)
			{
				EventHandler<ItemList.Item> recipeSelected = this.RecipeSelected;
				if (recipeSelected == null)
				{
					return;
				}
				recipeSelected(this, obj.ItemList.get_IndexItem(obj.ItemIndex));
			};
			this.Recipes.OnItemDeselected += delegate(ItemList.ItemListDeselectedEventArgs _)
			{
				EventHandler<ItemList.Item> recipeSelected = this.RecipeSelected;
				if (recipeSelected == null)
				{
					return;
				}
				recipeSelected(this, null);
			};
			this.SearchBar.OnTextChanged += delegate(LineEdit.LineEditEventArgs _)
			{
				EventHandler<ValueTuple<string, string>> populateRecipes = this.PopulateRecipes;
				if (populateRecipes == null)
				{
					return;
				}
				populateRecipes(this, new ValueTuple<string, string>(this.SearchBar.Text, this.Categories[this.Category.SelectedId]));
			};
			this.Category.OnItemSelected += delegate(OptionButton.ItemSelectedEventArgs obj)
			{
				this.Category.SelectId(obj.Id);
				EventHandler<ValueTuple<string, string>> populateRecipes = this.PopulateRecipes;
				if (populateRecipes == null)
				{
					return;
				}
				populateRecipes(this, new ValueTuple<string, string>(this.SearchBar.Text, this.Categories[obj.Id]));
			};
			this.BuildButton.Text = Loc.GetString("construction-menu-place-ghost");
			this.BuildButton.OnToggled += delegate(BaseButton.ButtonToggledEventArgs args)
			{
				EventHandler<bool> buildButtonToggled = this.BuildButtonToggled;
				if (buildButtonToggled == null)
				{
					return;
				}
				buildButtonToggled(this, args.Pressed);
			};
			this.ClearButton.Text = Loc.GetString("construction-menu-clear-all");
			this.ClearButton.OnPressed += delegate(BaseButton.ButtonEventArgs _)
			{
				EventHandler clearAllGhosts = this.ClearAllGhosts;
				if (clearAllGhosts == null)
				{
					return;
				}
				clearAllGhosts(this, EventArgs.Empty);
			};
			this.EraseButton.Text = Loc.GetString("construction-menu-eraser-mode");
			this.EraseButton.OnToggled += delegate(BaseButton.ButtonToggledEventArgs args)
			{
				EventHandler<bool> eraseButtonToggled = this.EraseButtonToggled;
				if (eraseButtonToggled == null)
				{
					return;
				}
				eraseButtonToggled(this, args.Pressed);
			};
		}

		// Token: 0x14000086 RID: 134
		// (add) Token: 0x0600169A RID: 5786 RVA: 0x00084104 File Offset: 0x00082304
		// (remove) Token: 0x0600169B RID: 5787 RVA: 0x0008413C File Offset: 0x0008233C
		[Nullable(2)]
		[method: NullableContext(2)]
		[Nullable(2)]
		public event EventHandler ClearAllGhosts;

		// Token: 0x14000087 RID: 135
		// (add) Token: 0x0600169C RID: 5788 RVA: 0x00084174 File Offset: 0x00082374
		// (remove) Token: 0x0600169D RID: 5789 RVA: 0x000841AC File Offset: 0x000823AC
		[TupleElementNames(new string[]
		{
			"search",
			"catagory"
		})]
		[Nullable(new byte[]
		{
			2,
			0,
			1,
			1
		})]
		[TupleElementNames(new string[]
		{
			"search",
			"catagory"
		})]
		[Nullable(new byte[]
		{
			2,
			0,
			1,
			1
		})]
		public event EventHandler<ValueTuple<string, string>> PopulateRecipes;

		// Token: 0x14000088 RID: 136
		// (add) Token: 0x0600169E RID: 5790 RVA: 0x000841E4 File Offset: 0x000823E4
		// (remove) Token: 0x0600169F RID: 5791 RVA: 0x0008421C File Offset: 0x0008241C
		[Nullable(2)]
		[method: NullableContext(2)]
		[Nullable(2)]
		public event EventHandler<ItemList.Item> RecipeSelected;

		// Token: 0x14000089 RID: 137
		// (add) Token: 0x060016A0 RID: 5792 RVA: 0x00084254 File Offset: 0x00082454
		// (remove) Token: 0x060016A1 RID: 5793 RVA: 0x0008428C File Offset: 0x0008248C
		[Nullable(2)]
		[method: NullableContext(2)]
		[Nullable(2)]
		public event EventHandler<bool> BuildButtonToggled;

		// Token: 0x1400008A RID: 138
		// (add) Token: 0x060016A2 RID: 5794 RVA: 0x000842C4 File Offset: 0x000824C4
		// (remove) Token: 0x060016A3 RID: 5795 RVA: 0x000842FC File Offset: 0x000824FC
		[Nullable(2)]
		[method: NullableContext(2)]
		[Nullable(2)]
		public event EventHandler<bool> EraseButtonToggled;

		// Token: 0x060016A4 RID: 5796 RVA: 0x00084331 File Offset: 0x00082531
		public void ResetPlacement()
		{
			this.BuildButton.Pressed = false;
			this.EraseButton.Pressed = false;
		}

		// Token: 0x060016A5 RID: 5797 RVA: 0x0008434C File Offset: 0x0008254C
		[NullableContext(1)]
		public void SetRecipeInfo(string name, string description, Texture iconTexture, bool isItem)
		{
			this.BuildButton.Disabled = false;
			this.BuildButton.Text = Loc.GetString(isItem ? "construction-menu-place-ghost" : "construction-menu-craft");
			this.TargetName.SetMessage(name);
			this.TargetDesc.SetMessage(description);
			this.TargetTexture.Texture = iconTexture;
		}

		// Token: 0x060016A6 RID: 5798 RVA: 0x000843AC File Offset: 0x000825AC
		public void ClearRecipeInfo()
		{
			this.BuildButton.Disabled = true;
			this.TargetName.SetMessage(string.Empty);
			this.TargetDesc.SetMessage(string.Empty);
			this.TargetTexture.Texture = null;
			this.RecipeStepList.Clear();
		}

		// Token: 0x17000484 RID: 1156
		// (get) Token: 0x060016A7 RID: 5799 RVA: 0x0001E1C9 File Offset: 0x0001C3C9
		private LineEdit SearchBar
		{
			get
			{
				return base.FindControl<LineEdit>("SearchBar");
			}
		}

		// Token: 0x17000485 RID: 1157
		// (get) Token: 0x060016A8 RID: 5800 RVA: 0x000843FC File Offset: 0x000825FC
		public OptionButton Category
		{
			get
			{
				return base.FindControl<OptionButton>("Category");
			}
		}

		// Token: 0x17000486 RID: 1158
		// (get) Token: 0x060016A9 RID: 5801 RVA: 0x00084409 File Offset: 0x00082609
		public ItemList Recipes
		{
			get
			{
				return base.FindControl<ItemList>("Recipes");
			}
		}

		// Token: 0x17000487 RID: 1159
		// (get) Token: 0x060016AA RID: 5802 RVA: 0x00084416 File Offset: 0x00082616
		private TextureRect TargetTexture
		{
			get
			{
				return base.FindControl<TextureRect>("TargetTexture");
			}
		}

		// Token: 0x17000488 RID: 1160
		// (get) Token: 0x060016AB RID: 5803 RVA: 0x00084423 File Offset: 0x00082623
		private RichTextLabel TargetName
		{
			get
			{
				return base.FindControl<RichTextLabel>("TargetName");
			}
		}

		// Token: 0x17000489 RID: 1161
		// (get) Token: 0x060016AC RID: 5804 RVA: 0x00084430 File Offset: 0x00082630
		private RichTextLabel TargetDesc
		{
			get
			{
				return base.FindControl<RichTextLabel>("TargetDesc");
			}
		}

		// Token: 0x1700048A RID: 1162
		// (get) Token: 0x060016AD RID: 5805 RVA: 0x0008443D File Offset: 0x0008263D
		public ItemList RecipeStepList
		{
			get
			{
				return base.FindControl<ItemList>("RecipeStepList");
			}
		}

		// Token: 0x1700048B RID: 1163
		// (get) Token: 0x060016AE RID: 5806 RVA: 0x0008444A File Offset: 0x0008264A
		private Button BuildButton
		{
			get
			{
				return base.FindControl<Button>("BuildButton");
			}
		}

		// Token: 0x1700048C RID: 1164
		// (get) Token: 0x060016AF RID: 5807 RVA: 0x00084457 File Offset: 0x00082657
		private Button EraseButton
		{
			get
			{
				return base.FindControl<Button>("EraseButton");
			}
		}

		// Token: 0x1700048D RID: 1165
		// (get) Token: 0x060016B0 RID: 5808 RVA: 0x0001E1D6 File Offset: 0x0001C3D6
		private Button ClearButton
		{
			get
			{
				return base.FindControl<Button>("ClearButton");
			}
		}

		// Token: 0x060016B1 RID: 5809 RVA: 0x00084464 File Offset: 0x00082664
		void IConstructionMenuView.add_OnClose([Nullable(2)] Action value)
		{
			base.OnClose += value;
		}

		// Token: 0x060016B2 RID: 5810 RVA: 0x0008446D File Offset: 0x0008266D
		void IConstructionMenuView.remove_OnClose([Nullable(2)] Action value)
		{
			base.OnClose -= value;
		}

		// Token: 0x060016B3 RID: 5811 RVA: 0x00084476 File Offset: 0x00082676
		bool IConstructionMenuView.get_IsOpen()
		{
			return base.IsOpen;
		}

		// Token: 0x060016B4 RID: 5812 RVA: 0x0008447E File Offset: 0x0008267E
		void IConstructionMenuView.OpenCentered()
		{
			base.OpenCentered();
		}

		// Token: 0x060016B5 RID: 5813 RVA: 0x00084486 File Offset: 0x00082686
		void IConstructionMenuView.MoveToFront()
		{
			base.MoveToFront();
		}

		// Token: 0x060016B6 RID: 5814 RVA: 0x0008448E File Offset: 0x0008268E
		bool IConstructionMenuView.IsAtFront()
		{
			return base.IsAtFront();
		}

		// Token: 0x060016BE RID: 5822 RVA: 0x0008459C File Offset: 0x0008279C
		static void xaml(IServiceProvider A_0, DefaultWindow A_1)
		{
			XamlIlContext.Context<DefaultWindow> context = new XamlIlContext.Context<DefaultWindow>(A_0, null, "resm:Content.Client.Construction.UI.ConstructionMenu.xaml?assembly=Content.Client");
			context.RootObject = A_1;
			context.IntermediateRoot = A_1;
			BoxContainer boxContainer = new BoxContainer();
			boxContainer.Orientation = 0;
			boxContainer.HorizontalExpand = true;
			BoxContainer boxContainer2 = new BoxContainer();
			boxContainer2.Orientation = 1;
			boxContainer2.HorizontalExpand = true;
			boxContainer2.SizeFlagsStretchRatio = 0.4f;
			BoxContainer boxContainer3 = new BoxContainer();
			boxContainer3.Orientation = 0;
			boxContainer3.HorizontalExpand = true;
			LineEdit lineEdit = new LineEdit();
			lineEdit.Name = "SearchBar";
			Control control = lineEdit;
			context.RobustNameScope.Register("SearchBar", control);
			lineEdit.PlaceHolder = "Search";
			lineEdit.HorizontalExpand = true;
			control = lineEdit;
			boxContainer3.XamlChildren.Add(control);
			OptionButton optionButton = new OptionButton();
			optionButton.Name = "Category";
			control = optionButton;
			context.RobustNameScope.Register("Category", control);
			optionButton.Access = new AccessLevel?(0);
			optionButton.MinSize = new Vector2(130f, 0f);
			control = optionButton;
			boxContainer3.XamlChildren.Add(control);
			control = boxContainer3;
			boxContainer2.XamlChildren.Add(control);
			ItemList itemList = new ItemList();
			itemList.Name = "Recipes";
			control = itemList;
			context.RobustNameScope.Register("Recipes", control);
			itemList.Access = new AccessLevel?(0);
			itemList.SelectMode = 1;
			itemList.VerticalExpand = true;
			control = itemList;
			boxContainer2.XamlChildren.Add(control);
			control = boxContainer2;
			boxContainer.XamlChildren.Add(control);
			control = new Control
			{
				MinSize = new Vector2(10f, 0f)
			};
			boxContainer.XamlChildren.Add(control);
			BoxContainer boxContainer4 = new BoxContainer();
			boxContainer4.Orientation = 1;
			boxContainer4.HorizontalExpand = true;
			boxContainer4.SizeFlagsStretchRatio = 0.6f;
			Control control2 = new Control();
			BoxContainer boxContainer5 = new BoxContainer();
			boxContainer5.Orientation = 0;
			boxContainer5.Align = 1;
			TextureRect textureRect = new TextureRect();
			textureRect.Name = "TargetTexture";
			control = textureRect;
			context.RobustNameScope.Register("TargetTexture", control);
			textureRect.HorizontalAlignment = 3;
			textureRect.Stretch = 3;
			control = textureRect;
			boxContainer5.XamlChildren.Add(control);
			control = new Control
			{
				MinSize = new Vector2(10f, 0f)
			};
			boxContainer5.XamlChildren.Add(control);
			BoxContainer boxContainer6 = new BoxContainer();
			boxContainer6.Orientation = 1;
			RichTextLabel richTextLabel = new RichTextLabel();
			richTextLabel.Name = "TargetName";
			control = richTextLabel;
			context.RobustNameScope.Register("TargetName", control);
			control = richTextLabel;
			boxContainer6.XamlChildren.Add(control);
			RichTextLabel richTextLabel2 = new RichTextLabel();
			richTextLabel2.Name = "TargetDesc";
			control = richTextLabel2;
			context.RobustNameScope.Register("TargetDesc", control);
			control = richTextLabel2;
			boxContainer6.XamlChildren.Add(control);
			control = boxContainer6;
			boxContainer5.XamlChildren.Add(control);
			control = boxContainer5;
			control2.XamlChildren.Add(control);
			control = control2;
			boxContainer4.XamlChildren.Add(control);
			ItemList itemList2 = new ItemList();
			itemList2.Name = "RecipeStepList";
			control = itemList2;
			context.RobustNameScope.Register("RecipeStepList", control);
			itemList2.Access = new AccessLevel?(0);
			itemList2.VerticalExpand = true;
			control = itemList2;
			boxContainer4.XamlChildren.Add(control);
			BoxContainer boxContainer7 = new BoxContainer();
			boxContainer7.Orientation = 1;
			Button button = new Button();
			button.Name = "BuildButton";
			control = button;
			context.RobustNameScope.Register("BuildButton", control);
			button.Disabled = true;
			button.ToggleMode = true;
			button.VerticalExpand = true;
			button.SizeFlagsStretchRatio = 0.5f;
			control = button;
			boxContainer7.XamlChildren.Add(control);
			BoxContainer boxContainer8 = new BoxContainer();
			boxContainer8.Orientation = 0;
			boxContainer8.VerticalExpand = true;
			boxContainer8.SizeFlagsStretchRatio = 0.5f;
			Button button2 = new Button();
			button2.Name = "EraseButton";
			control = button2;
			context.RobustNameScope.Register("EraseButton", control);
			button2.ToggleMode = true;
			button2.HorizontalExpand = true;
			button2.SizeFlagsStretchRatio = 0.7f;
			control = button2;
			boxContainer8.XamlChildren.Add(control);
			Button button3 = new Button();
			button3.Name = "ClearButton";
			control = button3;
			context.RobustNameScope.Register("ClearButton", control);
			button3.HorizontalExpand = true;
			button3.SizeFlagsStretchRatio = 0.3f;
			control = button3;
			boxContainer8.XamlChildren.Add(control);
			control = boxContainer8;
			boxContainer7.XamlChildren.Add(control);
			control = boxContainer7;
			boxContainer4.XamlChildren.Add(control);
			control = boxContainer4;
			boxContainer.XamlChildren.Add(control);
			control = boxContainer;
			A_1.XamlChildren.Add(control);
			if ((control = (A_1 as Control)) != null)
			{
				context.RobustNameScope.Absorb(control.NameScope);
				control.NameScope = context.RobustNameScope;
			}
			context.RobustNameScope.Complete();
		}

		// Token: 0x060016BF RID: 5823 RVA: 0x00084B6C File Offset: 0x00082D6C
		private static void !XamlIlPopulateTrampoline(ConstructionMenu A_0)
		{
			ConstructionMenu.Populate:Content.Client.Construction.UI.ConstructionMenu.xaml(null, A_0);
		}
	}
}
